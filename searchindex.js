Search.setIndex({"docnames": ["api/define_adxl345_8h_1a1a3b84c4d742fe051f12eb8e9d7db58c", "api/define_adxl345_8h_1a593282de5e819f216c6bec6abbdc8c3a", "api/define_adxl345__transport__impl_8h_1acdec8c760a17d588444cd50899420e75", "api/define_controller__impl_8c_1a2da97cdb974bd8ee7a33fe39e255feb1", "api/define_controller__impl_8c_1ab0975b1538786e46b8e4b5fa869e7fcd", "api/define_controller__impl_8c_1ab1832f23d06d7eadbdb5e9370e4454a5", "api/define_controller__impl_8c_1ad8047974c1ca16e65db118ef91ebfc7e", "api/define_debug_8h_1a236cbb0238bec6b69565a156e8c3ad53", "api/define_debug_8h_1a646e5c6a686c1e4cc559a7cc68bc005d", "api/define_debug_8h_1a72ec92f727e507f8ed89b2496451f25b", "api/define_debug_8h_1a7d82fab60f7c4d9259508ddeefe6860f", "api/define_debug_8h_1a80d1d47668a4caa45de6559e1970b397", "api/define_debug_8h_1add553479c72b1bad9cdb870d84a81aa1", "api/define_host__transport_8h_1a52448fbad12ce1c5f682a6bce5141d49", "api/define_host__transport__types_8h_1abc3544aae2ae0f78650ee7c49ed2c83e", "api/define_led_8h_1a948ea3bd7e3719f0a67d06fc396cd260", "api/define_led_8h_1ab9762c7920a3a458f5281a9c8513e9b8", "api/define_led_8h_1afbf9ff806df4edcc06b11991c7353cfc", "api/define_ringbuffer__impl_8h_1a018e3f6206f28db535e27ce850a65cb3", "api/define_ringbuffer__impl_8h_1a1973b18f985517b2dd4328bb7ad4ab62", "api/define_ringbuffer__impl_8h_1a466d94c34710afcd889fc18809cf96c0", "api/define_ringbuffer__impl_8h_1a7b169c21c38fba69b8b43ef5d9ca47bb", "api/define_ringbuffer__impl_8h_1ab678e1a5f5ebc9c4d79a2115a2bca497", "api/define_sampling__types_8h_1a6f7f6b56470de805df7b77526191beba", "api/define_test_8c_1a1c97847f645d2639ee866c7565da562d", "api/define_test_8c_1a2f3ded3810aad4f1117ac7aac095feda", "api/define_test_8c_1a31e7ef6ab3db961f1691a459e3c9718a", "api/define_to__host__transport_8h_1a88f66998421f186a13c59a27c011e76f", "api/define_unity__config_8h_1a1ef6780dec5ea37eea810e22e1a4c632", "api/define_version_8h_1a1a53b724b6de666faa8a9e0d06d1055f", "api/define_version_8h_1a1c6d5de492ac61ad29aec7aa9a436bbf", "api/define_version_8h_1a901edadf17488bb6be1ac9a1e3cfea7a", "api/define_version_8h_1ae0cb52afb79b185b1bf82c7e235f682b", "api/dir__home_runner_work_controller_controller_Inc", "api/dir__home_runner_work_controller_controller_Inc_fw", "api/dir__home_runner_work_controller_controller_Src", "api/dir__home_runner_work_controller_controller_Src_fw", "api/dir__home_runner_work_controller_controller_lib", "api/dir__home_runner_work_controller_controller_lib_adxl345", "api/dir__home_runner_work_controller_controller_lib_adxl345_src", "api/dir__home_runner_work_controller_controller_lib_controller", "api/dir__home_runner_work_controller_controller_lib_controller_src", "api/dir__home_runner_work_controller_controller_lib_host_transport", "api/dir__home_runner_work_controller_controller_lib_host_transport_src", "api/dir__home_runner_work_controller_controller_lib_ringbuffer", "api/dir__home_runner_work_controller_controller_lib_ringbuffer_src", "api/dir__home_runner_work_controller_controller_lib_sampling", "api/dir__home_runner_work_controller_controller_lib_sampling_src", "api/dir__home_runner_work_controller_controller_test", "api/dir__home_runner_work_controller_controller_test_test_ringbuffer", "api/dir__home_runner_work_controller_controller_test_utils", "api/enum_adxl345__flags_8h_1a114643033e2c653158c202adb14dc8e1", "api/enum_adxl345__flags_8h_1a1e836097ed4058fabf46a7f857155356", "api/enum_adxl345__flags_8h_1a23a3530e3e870d9c68f5acdfa7311eeb", "api/enum_adxl345__flags_8h_1a2481a6a199a4e74aa7999fe071c74267", "api/enum_adxl345__flags_8h_1a2aa33b523bebdd04a462df505f4a9701", "api/enum_adxl345__flags_8h_1a3e2eb079d34790a2c5e6d53c26e5226c", "api/enum_adxl345__flags_8h_1a42c672b534e460edb56fd7730b297406", "api/enum_adxl345__flags_8h_1a4db2ee2c4eb68481d38218393a5decbd", "api/enum_adxl345__flags_8h_1a50dedcae134fbae0db34ad030ae97d5e", "api/enum_adxl345__flags_8h_1a56079b83c6d7f874e4b36c2771903a5c", "api/enum_adxl345__flags_8h_1a5852f46c4668a2e61dc6078ecdb1ee5e", "api/enum_adxl345__flags_8h_1a5ae3e155c2d6fc97a1ac318cd6738c43", "api/enum_adxl345__flags_8h_1a646668c76f062cdfef18123e259bef39", "api/enum_adxl345__flags_8h_1a834927807771e1ed63ea46e924eff48a", "api/enum_adxl345__flags_8h_1a838f78356395fdc86a710a285d296b7d", "api/enum_adxl345__flags_8h_1a8ab4704ccbb33a382957f3501304ba50", "api/enum_adxl345__flags_8h_1a8af7ef886711ec1e36a925cccfdf0c2f", "api/enum_adxl345__flags_8h_1a8d417b16f0f93744f8af80d51c38ffeb", "api/enum_adxl345__flags_8h_1a9192278eea0272a4b3b92006ca33cb99", "api/enum_adxl345__flags_8h_1a988b140122294db70bdbe2c685e8883e", "api/enum_adxl345__flags_8h_1aa7fe91945feaf0cf4983c46963607b53", "api/enum_adxl345__flags_8h_1aaa53a6429862365058e9f0d6df90680f", "api/enum_adxl345__flags_8h_1ab51a3bca87c0c3b2f22f00d72736ed78", "api/enum_adxl345__flags_8h_1aba371ae2c1ac7d30978c9dc01b2d0302", "api/enum_adxl345__flags_8h_1ad7e7ca6a5a84e87e2e0dc2c382e88f5e", "api/enum_adxl345__flags_8h_1ad8a1bc51f25f37bb47d8333fc80579e7", "api/enum_adxl345__flags_8h_1ad9bb53ea03849579da4b0f85e6970812", "api/enum_adxl345__flags_8h_1addec4913908fc06c3bfafda7d8dbd778", "api/enum_adxl345__flags_8h_1ae12a87f38a260cd1395fa95b65210e96", "api/enum_adxl345__flags_8h_1ae2234c612a44b8351fd51db6638e5a37", "api/enum_adxl345__flags_8h_1aea113fb35a8964a5862746ef41d4b8c2", "api/enum_adxl345__flags_8h_1aeacaafb4990ff34e9fc4199e0e3ef82a", "api/enum_adxl345__flags_8h_1af90caf8b105f26e06969e5c6da63610b", "api/enum_adxl345__spi__types_8h_1a724c46636785edc1a58e7171c17e7a0c", "api/enum_adxl345__spi__types_8h_1afd6c640f316d87383ac8ee42831eb63c", "api/enum_host__transport_8h_1a74f8ebfaa5c7c50589f432fc564cf13e", "api/enum_host__transport__types_8h_1a09588d2abff7c25824fe338a4cfafe63", "api/enum_host__transport__types_8h_1a0f8fc7d8d585dcd04d9142be969268e5", "api/enum_host__transport__types_8h_1ac83eafa94c9dfa2280f83ef8dc077a19", "api/enum_host__transport__types_8h_1acdd6c68eea248e81eff3eb8f547f5204", "api/enum_host__transport__types_8h_1aef31738b236562c4f0a18348be10fa81", "api/file__home_runner_work_controller_controller_Inc_fw_adxl345_transport_impl.h", "api/file__home_runner_work_controller_controller_Inc_fw_controller_impl.h", "api/file__home_runner_work_controller_controller_Inc_fw_debug.h", "api/file__home_runner_work_controller_controller_Inc_fw_host_transport_impl.h", "api/file__home_runner_work_controller_controller_Inc_fw_led.h", "api/file__home_runner_work_controller_controller_Inc_fw_ringbuffer_impl.h", "api/file__home_runner_work_controller_controller_Inc_fw_sampling_impl.h", "api/file__home_runner_work_controller_controller_Inc_fw_version.h", "api/file__home_runner_work_controller_controller_Src_fw_adxl345_transport_impl.c", "api/file__home_runner_work_controller_controller_Src_fw_controller_impl.c", "api/file__home_runner_work_controller_controller_Src_fw_host_transport_impl.c", "api/file__home_runner_work_controller_controller_Src_fw_ringbuffer_impl.c", "api/file__home_runner_work_controller_controller_Src_fw_sampling_impl.c", "api/file__home_runner_work_controller_controller_Src_fw_version.c", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.c", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.h", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_flags.h", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_register.h", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_spi_types.h", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_transport_types.h", "api/file__home_runner_work_controller_controller_lib_controller_src_controller.c", "api/file__home_runner_work_controller_controller_lib_controller_src_controller.h", "api/file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.c", "api/file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.h", "api/file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.c", "api/file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.h", "api/file__home_runner_work_controller_controller_lib_host_transport_src_host_transport_types.h", "api/file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.c", "api/file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.h", "api/file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.c", "api/file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.h", "api/file__home_runner_work_controller_controller_lib_sampling_src_sampling.c", "api/file__home_runner_work_controller_controller_lib_sampling_src_sampling.h", "api/file__home_runner_work_controller_controller_lib_sampling_src_sampling_types.h", "api/file__home_runner_work_controller_controller_test_test_ringbuffer_test.c", "api/file__home_runner_work_controller_controller_test_unity_config.h", "api/file__home_runner_work_controller_controller_test_utils_run-tests.h", "api/function_adxl345_8c_1a0ef617ec05f613283d155d0de4d37e53", "api/function_adxl345_8c_1a3460885ccd5cf674d0a8b1ec161114ce", "api/function_adxl345_8c_1a5605a71e07edcc370b027a668f393615", "api/function_adxl345_8c_1a5a7d68a9a5e045ed6f5ae88e277fc133", "api/function_adxl345_8c_1a67d00841116cfecf53a7ca6352209df4", "api/function_adxl345_8c_1a901e7705ca34646d41fe7db11c8b2ba6", "api/function_adxl345_8c_1a92f47a5a55daaa4f0b7c0952fef0a2d1", "api/function_adxl345_8c_1ab61b3d92785c6a11acb64cb5b1b9d630", "api/function_adxl345_8c_1ab9baf97a44fa18d98ba816b1ba85f680", "api/function_adxl345_8c_1ad38f932fb6fbb6056e9258b9179abdbd", "api/function_adxl345_8c_1aec1396797b012df335ff8c96955932e2", "api/function_adxl345_8c_1af238689828fad86568f32caac567fc01", "api/function_adxl345_8h_1a0ef617ec05f613283d155d0de4d37e53", "api/function_adxl345_8h_1a3460885ccd5cf674d0a8b1ec161114ce", "api/function_adxl345_8h_1a5605a71e07edcc370b027a668f393615", "api/function_adxl345_8h_1a67d00841116cfecf53a7ca6352209df4", "api/function_adxl345_8h_1a92f47a5a55daaa4f0b7c0952fef0a2d1", "api/function_adxl345_8h_1ab61b3d92785c6a11acb64cb5b1b9d630", "api/function_adxl345_8h_1ab9baf97a44fa18d98ba816b1ba85f680", "api/function_adxl345_8h_1ad38f932fb6fbb6056e9258b9179abdbd", "api/function_adxl345_8h_1aec1396797b012df335ff8c96955932e2", "api/function_adxl345_8h_1af238689828fad86568f32caac567fc01", "api/function_adxl345__register_8h_1acc02190e97ec034a25eca812c23b98d6", "api/function_adxl345__transport__impl_8c_1a17e93b852aca31ef8d8f495fcfaadc31", "api/function_adxl345__transport__impl_8c_1a86ca88b3cd7279573f1ee5107019e73c", "api/function_adxl345__transport__impl_8c_1aa14a3171c0d0175bb4da9e60add284f5", "api/function_adxl345__transport__impl_8c_1ac054c297b066d074bdbd72919dda4f4d", "api/function_adxl345__transport__impl_8c_1af0e573e93c966e33fd642d5771e0d072", "api/function_adxl345__transport__impl_8h_1aa14a3171c0d0175bb4da9e60add284f5", "api/function_adxl345__transport__impl_8h_1af0e573e93c966e33fd642d5771e0d072", "api/function_adxl345__transport__types_8h_1a1880fcedd9961d4e738b565207231a04", "api/function_controller__impl_8c_1a22cb33c193020641a0b8be69deb13546", "api/function_controller__impl_8c_1a2ee729cc36a6cda22ee6ddfb5129aba9", "api/function_controller__impl_8c_1a372e46bbe50ec2e0aa793ed5bafa3257", "api/function_controller__impl_8c_1a3cc3a5ce4a78ca23e9b994dda2c89637", "api/function_controller__impl_8c_1a4774f44ed0c59c6419ac85c2785617ea", "api/function_controller__impl_8c_1a49fc3195b070e4905bb67597d6cfea70", "api/function_controller__impl_8c_1a4ec7e05708eabb0c4b421911b947e8f9", "api/function_controller__impl_8c_1a5836fa9015aac1fba7d702bdc6493d8a", "api/function_controller__impl_8c_1a649d2c598862d77ddb0b08efdd88a740", "api/function_controller__impl_8c_1a66048ba7308a1ff1f0db78dc160c5360", "api/function_controller__impl_8c_1a66c51aa031796dbb5efb4f0717146e44", "api/function_controller__impl_8c_1a686368da9cd9160885612d45ff18930b", "api/function_controller__impl_8c_1a73449c33b8e903c9b6e9de4d16be0064", "api/function_controller__impl_8c_1a7482fe02c4be77534060addf3a93ee31", "api/function_controller__impl_8c_1a755320ba0c169d3697009b13d3d99e87", "api/function_controller__impl_8c_1a7652251f5077fd27a96f519aac4c29ce", "api/function_controller__impl_8c_1a791c278018effd03c2d785f4f0c25d61", "api/function_controller__impl_8c_1a88fe47f4a0a879b25e03c39c2297f312", "api/function_controller__impl_8c_1a894fc5e10c664f2bc59e4852680c2902", "api/function_controller__impl_8c_1a89b1d736b2d2afc3d37552260579c0d1", "api/function_controller__impl_8c_1a8e2c4873bd3748d4efcd610b113f203d", "api/function_controller__impl_8c_1a8f394894ddf5ffcb0699b352b4095f53", "api/function_controller__impl_8c_1a8fc86217766450df200f8c3cfe1da74e", "api/function_controller__impl_8c_1a9ace065330cb7cedcef975583b11c0ff", "api/function_controller__impl_8c_1a9c1bde924f90fffba888f4e323c1346b", "api/function_controller__impl_8c_1a9df7ad7339bfa68bc2fd90bfbb2ee326", "api/function_controller__impl_8c_1aa4859365e6ad62258d64537030a92cf4", "api/function_controller__impl_8c_1aa6fc1a711ac0cda42f023ddfe9ded04d", "api/function_controller__impl_8c_1ab479e2e5d14e4185269d967fe17ddc45", "api/function_controller__impl_8c_1ab4cac79cff838678a94ab8fc5f28d2b8", "api/function_controller__impl_8c_1ab4fe78e742d301249bf03da3c58eb442", "api/function_controller__impl_8c_1abef59c1b09c873e25dcf7cd2296ba2d4", "api/function_controller__impl_8c_1ac40697a0744d47795ebe700126afc962", "api/function_controller__impl_8c_1ac8d926da4731b4d105f3e8f07c61577a", "api/function_controller__impl_8c_1acb0c07a81f605dfc5c00031018e8f757", "api/function_controller__impl_8c_1ada37b4670349e284523369e4980833c2", "api/function_controller__impl_8c_1adbaedf7e92176b7b33afc0ff2fed9a19", "api/function_controller__impl_8c_1add5d5708782076868b58766b5b2fbc99", "api/function_controller__impl_8c_1ae2b7bd69ad57ae7b4634f7cd1672ff72", "api/function_controller__impl_8c_1ae5507b8d85d6929ffb2c4f70698ef8a4", "api/function_controller__impl_8c_1af128666cf06641bc21734e78ee596d90", "api/function_controller__impl_8c_1af209ccce35a98bf6f271478cd8ea3c68", "api/function_controller__impl_8c_1af9e9572b6249611db186b7647b71babb", "api/function_from__host__transport_8c_1a45016b6d4eea9bccca2a7f6c0de95921", "api/function_from__host__transport_8h_1a45016b6d4eea9bccca2a7f6c0de95921", "api/function_host__transport_8c_1a0c9e0a9338f700b262689280eca75ae4", "api/function_host__transport_8h_1a0c9e0a9338f700b262689280eca75ae4", "api/function_host__transport__impl_8c_1a10b705c106c1c95a4433aa6b9e1139e3", "api/function_host__transport__impl_8c_1ab795a4b8753590b3d78b7cee07c04d21", "api/function_host__transport__impl_8c_1afad186c595d91ebd30b58106d767de5b", "api/function_host__transport__impl_8h_1a10b705c106c1c95a4433aa6b9e1139e3", "api/function_host__transport__impl_8h_1ab795a4b8753590b3d78b7cee07c04d21", "api/function_host__transport__impl_8h_1afad186c595d91ebd30b58106d767de5b", "api/function_host__transport__types_8h_1a8b868bbd21ba7df4a6635a0f147da9ea", "api/function_host__transport__types_8h_1ac79abf6004596fe72a9b87b36132f2ef", "api/function_ringbuffer_8c_1a0bcd7705c6aae413215637f1d01920ae", "api/function_ringbuffer_8c_1a0ce8c6dc9462bb767de1ee11f8594ada", "api/function_ringbuffer_8c_1a14cd7a193ec80b52d8439be928a38ac5", "api/function_ringbuffer_8c_1a30a19998fb065e7ba6662562848cad83", "api/function_ringbuffer_8c_1a58c877992b59b998ff9af09cd10639fe", "api/function_ringbuffer_8c_1a6f9ad21c75ef81abc716c9d88e7eb292", "api/function_ringbuffer_8c_1a74f72afe4e6c93f662bec40387730db2", "api/function_ringbuffer_8c_1a778c373c85d06d09fd2412d5a5636dee", "api/function_ringbuffer_8c_1a89583e71625a19f29d0da9a42928358b", "api/function_ringbuffer_8c_1a90df506fa5d1412690f7045a2a714755", "api/function_ringbuffer_8c_1ab9f317616d0bd9274f0a5d6e0f1f3f9a", "api/function_ringbuffer_8c_1acaf0d7eaba25e09488f0b1b91646b094", "api/function_ringbuffer_8c_1ae056628ebdf9afba084c147520922074", "api/function_ringbuffer_8c_1ae6714bfe881444624c8636e334e0ef42", "api/function_ringbuffer_8c_1af9eabc252f5224d6f9403d54be3f8340", "api/function_ringbuffer_8h_1a0bcd7705c6aae413215637f1d01920ae", "api/function_ringbuffer_8h_1a0ce8c6dc9462bb767de1ee11f8594ada", "api/function_ringbuffer_8h_1a14cd7a193ec80b52d8439be928a38ac5", "api/function_ringbuffer_8h_1a30a19998fb065e7ba6662562848cad83", "api/function_ringbuffer_8h_1a58c877992b59b998ff9af09cd10639fe", "api/function_ringbuffer_8h_1a6f9ad21c75ef81abc716c9d88e7eb292", "api/function_ringbuffer_8h_1a74f72afe4e6c93f662bec40387730db2", "api/function_ringbuffer_8h_1a89583e71625a19f29d0da9a42928358b", "api/function_ringbuffer_8h_1a90df506fa5d1412690f7045a2a714755", "api/function_ringbuffer_8h_1ab9f317616d0bd9274f0a5d6e0f1f3f9a", "api/function_ringbuffer_8h_1ae6714bfe881444624c8636e334e0ef42", "api/function_ringbuffer_8h_1af9eabc252f5224d6f9403d54be3f8340", "api/function_run-tests_8h_1a3c04138a5bfe5d72780bb7e82a18e627", "api/function_sampling_8c_1a2c1b5634e93306c67c78add49d3bf175", "api/function_sampling_8c_1a578e25edef9c83506a63206379af7a25", "api/function_sampling_8c_1a5abc5903ad31d2108b55d8d8283b0e5f", "api/function_sampling_8c_1a6b3fd546e3ce118d97afba306bb1f1a3", "api/function_sampling_8c_1a6fad96b836dc0437c29b2d425e057e91", "api/function_sampling_8c_1a73bc9b85a2c1ec7b6204215d2728414e", "api/function_sampling_8c_1a9f656201a21eeecd5486f3e754ff64be", "api/function_sampling_8c_1ab1af2cb7e7cc632823338b6428c912d9", "api/function_sampling_8c_1aba2a1f3f45bb7f04876c1bc160de3623", "api/function_sampling_8c_1ac0f2c3c25b7af10cef5f51041ff3c05b", "api/function_sampling_8c_1ad2b7e3f32490d7cd596cf2d90cfddf2f", "api/function_sampling_8h_1a2c1b5634e93306c67c78add49d3bf175", "api/function_sampling_8h_1a6b3fd546e3ce118d97afba306bb1f1a3", "api/function_sampling_8h_1a73bc9b85a2c1ec7b6204215d2728414e", "api/function_sampling_8h_1ab1af2cb7e7cc632823338b6428c912d9", "api/function_sampling_8h_1aba2a1f3f45bb7f04876c1bc160de3623", "api/function_sampling_8h_1ac0f2c3c25b7af10cef5f51041ff3c05b", "api/function_sampling_8h_1ad2b7e3f32490d7cd596cf2d90cfddf2f", "api/function_sampling__impl_8c_1a0de7f15197d79f90ae4d0ae89147cccd", "api/function_sampling__impl_8h_1a0de7f15197d79f90ae4d0ae89147cccd", "api/function_sampling__types_8h_1a7cad04f2ac26baf73b6284554ea1112d", "api/function_test_8c_1a0040b31a2648820e75882b52c2790efa", "api/function_test_8c_1a02d49f00cf3ba207510146567e1d6174", "api/function_test_8c_1a06d373c6c15d33187ebaf9c09c64ed12", "api/function_test_8c_1a216ac4bd968ec1d4a1b645d5f608b06d", "api/function_test_8c_1a5dba4d349dffe4a1e8bde8f035fc74e4", "api/function_test_8c_1a63326a1b70b6e3f070e51687798e02de", "api/function_test_8c_1aac1ea17cbc3f1bfe2e87b452072de95f", "api/function_test_8c_1aad8df19b8a0a922fb33a49b1b8d0f2d5", "api/function_test_8c_1ab804e0f66def63262c1d6b4e3d2a2bd7", "api/function_test_8c_1abb7e479e02c07d9528d45f35846711bc", "api/function_test_8c_1ac3892e844d173d328e6cdeb06540a86d", "api/function_test_8c_1ac6ad356c992638ab5658944dc6ae71c1", "api/function_test_8c_1ad29f62dda14b7954a6995e922821fa05", "api/function_test_8c_1ad99934803afa00f470f0a37273290a13", "api/function_test_8c_1adde4b4dd76ebe9500b29125a809f2ee6", "api/function_test_8c_1ade4a4f2120bc7efcc6fdb527256943e1", "api/function_test_8c_1ae53c39223316e02dff7bb6b9b54c88f7", "api/function_to__host__transport_8c_1a0d70e117d6d861a5496ae5518d2cfc27", "api/function_to__host__transport_8c_1a2e2dd9eec895bc7adbd99deed3462165", "api/function_to__host__transport_8c_1a35faef7d47e8b565eb9b3832dfa1651b", "api/function_to__host__transport_8c_1a4cd9e88c2bdeba254ef1633e2840e860", "api/function_to__host__transport_8c_1a534fd48fd518d57461e15771a0ccc190", "api/function_to__host__transport_8c_1a54d844925874214e816e4a1764f1d0b6", "api/function_to__host__transport_8c_1a5dfd39a11af0cd8ee1af33868ecc3c1e", "api/function_to__host__transport_8c_1a5f8d17e2509d7151ac7418af87684bb4", "api/function_to__host__transport_8c_1a63afd5a4ee612c2f1e1ce9851016ffb4", "api/function_to__host__transport_8c_1a6859b85810ea85ce8d95bd3a58c9f982", "api/function_to__host__transport_8c_1a8754e0a5c57a604a9960aa1014ecbd81", "api/function_to__host__transport_8c_1a91f7f7c7d66cec64faa2616b43a1d90f", "api/function_to__host__transport_8c_1a9b676e279b904bfd8efbe13f1e1da5e1", "api/function_to__host__transport_8c_1a9ec2cd757757b00d2b675ea07e249476", "api/function_to__host__transport_8c_1acb0715f9c958a78a3ab6271072b65299", "api/function_to__host__transport_8c_1acf08bba3589d9124a20243e8b43152e4", "api/function_to__host__transport_8c_1ad27e19bcc1d967a5874090674313d98f", "api/function_to__host__transport_8c_1ad4f08c75259c008b3529aaa18438beaa", "api/function_to__host__transport_8c_1ada092c361a17f3eb06a5814803fa5578", "api/function_to__host__transport_8c_1adb072a78e3865c691623afadd15c31f3", "api/function_to__host__transport_8c_1aec41b705a2eb5738eae994b4e91e1296", "api/function_to__host__transport_8h_1a0d70e117d6d861a5496ae5518d2cfc27", "api/function_to__host__transport_8h_1a2e2dd9eec895bc7adbd99deed3462165", "api/function_to__host__transport_8h_1a4cd9e88c2bdeba254ef1633e2840e860", "api/function_to__host__transport_8h_1a534fd48fd518d57461e15771a0ccc190", "api/function_to__host__transport_8h_1a54d844925874214e816e4a1764f1d0b6", "api/function_to__host__transport_8h_1a5dfd39a11af0cd8ee1af33868ecc3c1e", "api/function_to__host__transport_8h_1a5f8d17e2509d7151ac7418af87684bb4", "api/function_to__host__transport_8h_1a63afd5a4ee612c2f1e1ce9851016ffb4", "api/function_to__host__transport_8h_1a8754e0a5c57a604a9960aa1014ecbd81", "api/function_to__host__transport_8h_1a91f7f7c7d66cec64faa2616b43a1d90f", "api/function_to__host__transport_8h_1acb0715f9c958a78a3ab6271072b65299", "api/function_to__host__transport_8h_1acf08bba3589d9124a20243e8b43152e4", "api/function_to__host__transport_8h_1ad27e19bcc1d967a5874090674313d98f", "api/function_to__host__transport_8h_1ad4f08c75259c008b3529aaa18438beaa", "api/function_to__host__transport_8h_1adb072a78e3865c691623afadd15c31f3", "api/function_to__host__transport_8h_1aec41b705a2eb5738eae994b4e91e1296", "api/library_root", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_adxl345_transport_impl.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_controller_impl.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_debug.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_host_transport_impl.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_led.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_ringbuffer_impl.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_sampling_impl.h", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_version.h", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_adxl345_transport_impl.c", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_controller_impl.c", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_host_transport_impl.c", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_ringbuffer_impl.c", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_sampling_impl.c", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_version.c", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.c", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.h", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_flags.h", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_register.h", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_spi_types.h", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_transport_types.h", "api/program_listing_file__home_runner_work_controller_controller_lib_controller_src_controller.c", "api/program_listing_file__home_runner_work_controller_controller_lib_controller_src_controller.h", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.c", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.h", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.c", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.h", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_host_transport_types.h", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.c", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.h", "api/program_listing_file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.c", "api/program_listing_file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.h", "api/program_listing_file__home_runner_work_controller_controller_lib_sampling_src_sampling.c", "api/program_listing_file__home_runner_work_controller_controller_lib_sampling_src_sampling.h", "api/program_listing_file__home_runner_work_controller_controller_lib_sampling_src_sampling_types.h", "api/program_listing_file__home_runner_work_controller_controller_test_test_ringbuffer_test.c", "api/program_listing_file__home_runner_work_controller_controller_test_unity_config.h", "api/program_listing_file__home_runner_work_controller_controller_test_utils_run-tests.h", "api/structAdxl345Register__BwRate", "api/structAdxl345Register__DataFormat", "api/structAdxl345Register__FifoCtl", "api/structAdxl345Register__FifoStatus", "api/structAdxl345Register__IntEnable", "api/structAdxl345Register__IntMap", "api/structAdxl345Register__PowerCtl", "api/structAdxl345Transport__Acceleration", "api/structAdxl345Transport__DataPaddedRegister", "api/structAdxl345__Handle", "api/structController__Handle", "api/structController__Host", "api/structController__Sampling", "api/structController__Sensor", "api/structFoo", "api/structHostTransport__FromHostApi", "api/structHostTransport__Handle", "api/structHostTransport__ToHostApi", "api/structRingbuffer", "api/structRingbuffer__Index", "api/structSampling__Acceleration", "api/structSampling__Handle", "api/structSampling__State", "api/structTransportFrame", "api/structTransportRx__DeviceReboot", "api/structTransportRx__GetBufferStatus", "api/structTransportRx__GetDeviceSetup", "api/structTransportRx__GetFirmwareVersion", "api/structTransportRx__GetOutputDataRate", "api/structTransportRx__GetRange", "api/structTransportRx__GetScale", "api/structTransportRx__GetUptime", "api/structTransportRx__SamplingStart", "api/structTransportRx__SamplingStop", "api/structTransportRx__SetOutputDataRate", "api/structTransportRx__SetRange", "api/structTransportRx__SetScale", "api/structTransportTx__Acceleration", "api/structTransportTx__BufferOverflow", "api/structTransportTx__BufferStatus", "api/structTransportTx__DeviceSetup", "api/structTransportTx__Fault", "api/structTransportTx__FifoOverflow", "api/structTransportTx__FirmwareVersion", "api/structTransportTx__OutputDataRate", "api/structTransportTx__Range", "api/structTransportTx__SamplingAborted", "api/structTransportTx__SamplingFinished", "api/structTransportTx__SamplingStarted", "api/structTransportTx__SamplingStopped", "api/structTransportTx__Scale", "api/structTransportTx__TransmissionError", "api/structTransportTx__Uptime", "api/structTransport__Acceleration", "api/structTransport__Header", "api/structTransport__ResponseFlags", "api/structTwoBytes", "api/unabridged_orphan", "api/unionAdxl345Register", "api/unionAdxl345Transport__RxFrame", "api/unionAdxl345Transport__TxFrame", "api/unionTransportRxFrame", "api/unionTransportTxFrame", "api/variable_adxl345__register_8h_1a14425184ac354135e844ac0557667f41", "api/variable_adxl345__register_8h_1a14cb75436545b3d993304c28feaeebd9", "api/variable_adxl345__register_8h_1a1558e28e9bd987127aa73bebbc1f59f8", "api/variable_adxl345__register_8h_1a15c1d3def8ea37e52de9ed0db8dc30cd", "api/variable_adxl345__register_8h_1a1c7dfe6bdcd6993494b6e94993ef5607", "api/variable_adxl345__register_8h_1a20ed0fb1e9a2b4e0c3ae40fc5e348962", "api/variable_adxl345__register_8h_1a3420c8f78425c8970b2868d78abbce2e", "api/variable_adxl345__register_8h_1a3585201b190b39d2d702daa9192323a3", "api/variable_adxl345__register_8h_1a401a1c7bc3fea1c7fbc21fd378f68376", "api/variable_adxl345__register_8h_1a47b1d0dc45f9b7da2092fffb11a5b6e0", "api/variable_adxl345__register_8h_1a4d876947d880a19cf85d11ce818b579a", "api/variable_adxl345__register_8h_1a5372599aeb847c2b1f1b56b5270e8e76", "api/variable_adxl345__register_8h_1a5b3fdb1d6accca0c21fbf4ae06912074", "api/variable_adxl345__register_8h_1a6223f169ec7f986bb2b5c822270d94e7", "api/variable_adxl345__register_8h_1a6c4505263fab9a43d25826a97795031a", "api/variable_adxl345__register_8h_1a6e314e6949fce335374afdcc02e518f9", "api/variable_adxl345__register_8h_1a6e4be064ea971273c6259af76bb9a32d", "api/variable_adxl345__register_8h_1a74cbe59d5c067e7dec7b2bf0957f002b", "api/variable_adxl345__register_8h_1a7bafb935dc96b0d6ef23c35d57ec98d5", "api/variable_adxl345__register_8h_1a80cb95696b39a93fbf3ff70a453383e5", "api/variable_adxl345__register_8h_1a93b0907ea07c3b6be23444e0dec73760", "api/variable_adxl345__register_8h_1a9a6b60dd9a65d1af54f4b12a1a3d77c5", "api/variable_adxl345__register_8h_1a9edcde0584b2ab6c4a7b49eaec49d237", "api/variable_adxl345__register_8h_1aae0908816800863313ff083c84c903df", "api/variable_adxl345__register_8h_1aaf3f0e48a6284f3dcc2f8c18566277ae", "api/variable_adxl345__register_8h_1aaff90b525f34bedcce6c6e69a26541e1", "api/variable_adxl345__register_8h_1abc3b103dde8dc5818d978805495a8a73", "api/variable_adxl345__register_8h_1ac492110d02c2421f1638fb8626c0c712", "api/variable_adxl345__register_8h_1ac4eaa5de8ee14643f71be6145e82524b", "api/variable_adxl345__register_8h_1ac5ba7b0d7a3f41805b050c35e17d0bbb", "api/variable_adxl345__register_8h_1acdfd9f6432ec3eee8e7be7efb1a2dec8", "api/variable_adxl345__register_8h_1acf9bcc20052a8187846fb82935e9b45a", "api/variable_adxl345__register_8h_1ad47e9b879c95a25ce124bd5611ff9497", "api/variable_adxl345__register_8h_1ad704111a3ed0809de990087ed155569d", "api/variable_adxl345__register_8h_1aea542246eb60ba1d3d083ceae4e5e2ce", "api/variable_adxl345__register_8h_1af90c0732bf1a59f6f8291714c18cb1cd", "api/variable_adxl345__register_8h_1afb916727068c402389508917b64dc82b", "api/variable_adxl345__transport__types_8h_1a33db1da8d46f8ca17619d8f3176708ae", "api/variable_adxl345__transport__types_8h_1a40396861b44e4f4de864b5bb22f69cca", "api/variable_adxl345__transport__types_8h_1a40f6375cb41616bdb50a00d3864dc3ef", "api/variable_adxl345__transport__types_8h_1a4aedb463ae74780f786bfd4a86bb7659", "api/variable_adxl345__transport__types_8h_1a59dbeb525fc7eeb57fe437a87b495a71", "api/variable_adxl345__transport__types_8h_1a663e034d477c50096d18f4384c53a78c", "api/variable_adxl345__transport__types_8h_1a95cde0d00f61c5f6c1f2349807717cca", "api/variable_adxl345__transport__types_8h_1aba591f724855d567a5da5832797c5d8f", "api/variable_adxl345__transport__types_8h_1abd938edbea27ed4f351dc19d69039222", "api/variable_adxl345__transport__types_8h_1ae1c2d516777e6b42af0d281c9ecc7375", "api/variable_adxl345__transport__types_8h_1aecc137c3b81bbba3ef8af885f966196a", "api/variable_adxl345__transport__types_8h_1af77b1a54442f2443cf64a4766f916bcd", "api/variable_controller__impl_8c_1a0101c712ca279fbf03f282d62b3b61d4", "api/variable_controller__impl_8c_1a39216c9e6e4fb47623e07bd6d66d49e7", "api/variable_controller__impl_8c_1a3acb0dee90a133ab0ce3b566a9a5da63", "api/variable_controller__impl_8c_1a5d3f1ea9386237fcc79eea2647e808f9", "api/variable_controller__impl_8c_1a671da16d0358339c993f4ad04da9e616", "api/variable_controller__impl_8c_1a6b1f2d72702bb2bb2c3d5072fcbae9fa", "api/variable_controller__impl_8c_1a7b038d75e0abe4eed60070914677ee73", "api/variable_controller__impl_8c_1a7bec0fed17edfcb64950f5d06bd2a005", "api/variable_controller__impl_8c_1a84fe37258413abba127b115521aebed9", "api/variable_controller__impl_8c_1a87462955bf03d8174675e67e95010fab", "api/variable_controller__impl_8c_1a895a28596514d13d23e8e7c282cc4b76", "api/variable_controller__impl_8c_1a8ffa4b52c49fc859a7142a3f64ac9aa5", "api/variable_controller__impl_8c_1a927bf38d871c85f0d1e0ee9eaa1351d0", "api/variable_controller__impl_8c_1aadd7a9adc675bc15aa20fb8ba2935402", "api/variable_controller__impl_8c_1ab0a6c321e93f7f315e38a82d7235acab", "api/variable_controller__impl_8c_1ab56ab2a03c4aa0c3ae17befc6a6f7afe", "api/variable_controller__impl_8c_1ae5f021b6cf2bb304ad61a6a3c3791b61", "api/variable_controller__impl_8c_1af327710382584c99df792b222881c0d7", "api/variable_controller__impl_8h_1a927bf38d871c85f0d1e0ee9eaa1351d0", "api/variable_host__transport__impl_8c_1a927bf38d871c85f0d1e0ee9eaa1351d0", "api/variable_host__transport__types_8h_1a00c54fad5fef8d31eb75c1163468005b", "api/variable_host__transport__types_8h_1a091d1bce163f98989b9b2fdfea535308", "api/variable_host__transport__types_8h_1a0aaf886a4e4afb1771c9774703859d5c", "api/variable_host__transport__types_8h_1a0b760b6cc534589862d9c871c107ccd8", "api/variable_host__transport__types_8h_1a1690465050dce4f1cf0cafd7880f7a41", "api/variable_host__transport__types_8h_1a18255b9548a3be025fb38341aab3ff28", "api/variable_host__transport__types_8h_1a1876d2a2a995a89d1ae36b070d01e466", "api/variable_host__transport__types_8h_1a18e8da580464a6ec8b8947a53740093c", "api/variable_host__transport__types_8h_1a199357a0869b4d3117d8d21a4cd818e7", "api/variable_host__transport__types_8h_1a1af577436c0e4a90d7b84d9f1658798f", "api/variable_host__transport__types_8h_1a1d9850472cc852e0884b276ac2131a4e", "api/variable_host__transport__types_8h_1a20ed0fb1e9a2b4e0c3ae40fc5e348962", "api/variable_host__transport__types_8h_1a21a580e681a5f26e8e5fe75dfdbc8a5a", "api/variable_host__transport__types_8h_1a22bb34790f05eda025ff6ec569a38893", "api/variable_host__transport__types_8h_1a23ea3f828418c5295d37031944da4dc4", "api/variable_host__transport__types_8h_1a2643d0396638e7b2337cbb1074bb0bce", "api/variable_host__transport__types_8h_1a2a5c3e7bd006c058342d46b4a0dcf654", "api/variable_host__transport__types_8h_1a30ce5a792a73cde28c6eabc0d3bfb1c3", "api/variable_host__transport__types_8h_1a32054bbd4957faf54027c3806f0572d9", "api/variable_host__transport__types_8h_1a369f86e0d4bf8513c48e692f6f093e58", "api/variable_host__transport__types_8h_1a3875c02c7867a24afd72c07a8e836d0c", "api/variable_host__transport__types_8h_1a3c0035a602dd728ded865b9d6ef15294", "api/variable_host__transport__types_8h_1a3c16a252ddd5788c1117d24e795ed229", "api/variable_host__transport__types_8h_1a3f2aefc49acb5eb231469ddc39fedf44", "api/variable_host__transport__types_8h_1a47c2854e80e0bdcf6627a28d8d84bb10", "api/variable_host__transport__types_8h_1a4a3828d9a5b6768a573e1bead3e2d2ff", "api/variable_host__transport__types_8h_1a4d33c777e50886258b7f902cab478d0f", "api/variable_host__transport__types_8h_1a4e673e766b82998f915b4af85e5d7704", "api/variable_host__transport__types_8h_1a4edf0db215fb7c5e9a9b0fa7908a4c4f", "api/variable_host__transport__types_8h_1a4eef206282513dee7159851c609bc485", "api/variable_host__transport__types_8h_1a5189cd3671dace2454c818487957edcf", "api/variable_host__transport__types_8h_1a539fade4288db3f9773404189cec9d04", "api/variable_host__transport__types_8h_1a5468707ba0cf05d846b544d6ec5698ab", "api/variable_host__transport__types_8h_1a57831df9d6b0fc0b56f277d97399c5ab", "api/variable_host__transport__types_8h_1a596a95e1a93ab06f074222ab18f95920", "api/variable_host__transport__types_8h_1a5bd4e4c943762926c8f653b6224cced2", "api/variable_host__transport__types_8h_1a5c47aa5e6c52d974ca243117937d1e4b", "api/variable_host__transport__types_8h_1a616c0a72f0e4af38b93c736773ac7210", "api/variable_host__transport__types_8h_1a6215da7f38ae96ed447bb6277fe48150", "api/variable_host__transport__types_8h_1a646dea9dddb9a73346683381aca53f42", "api/variable_host__transport__types_8h_1a67b4a66a95e3d5dc5050f60d150280d9", "api/variable_host__transport__types_8h_1a6855bc5e18ebc269c18919a044eccace", "api/variable_host__transport__types_8h_1a6cd216ab4f7b652797fef14382ed17c7", "api/variable_host__transport__types_8h_1a7092625ebce4006ef4775bf3417f3f42", "api/variable_host__transport__types_8h_1a72a394e847080e277ff32248ebb7133e", "api/variable_host__transport__types_8h_1a7539b8b6c9a4574a3ca913254c9f4f42", "api/variable_host__transport__types_8h_1a75512796c04cb0ccbc6b6dee9d05a330", "api/variable_host__transport__types_8h_1a7b901b2ed436c9b8a5485f518cda5e02", "api/variable_host__transport__types_8h_1a852b86a2eaee9852ada7a43e61e311a2", "api/variable_host__transport__types_8h_1a86257c49aea65b6e107dc85f39306d36", "api/variable_host__transport__types_8h_1a87b83b4ee285085422bbd7df9c9840b8", "api/variable_host__transport__types_8h_1a8a2ae78da974aa7027479922d2a4ed5b", "api/variable_host__transport__types_8h_1a8ab014894ee593ada228c8818c805a4d", "api/variable_host__transport__types_8h_1a8d2ec4d8224fab4223a6ce5fc880c88d", "api/variable_host__transport__types_8h_1a8f226ce7aa0c4a47706b2a629f1cf5ce", "api/variable_host__transport__types_8h_1a8fb2926c1358556d1058310c1d227952", "api/variable_host__transport__types_8h_1a95a9dd3cb2f96cd681020c4175f5902c", "api/variable_host__transport__types_8h_1a9631d2b89caebed04c53e43e98201aad", "api/variable_host__transport__types_8h_1a9edcde0584b2ab6c4a7b49eaec49d237", "api/variable_host__transport__types_8h_1aa3169da96d07ddb56442e1f0219ee59d", "api/variable_host__transport__types_8h_1aa3f8ec4fce5cd7645a4127ff548590e5", "api/variable_host__transport__types_8h_1aa6fa942a4aba55e671401efab0301f68", "api/variable_host__transport__types_8h_1aaa2b01a5565390d6b8b8c7d4ee0ce0f1", "api/variable_host__transport__types_8h_1aae75aa115123d74b76fa6949898584df", "api/variable_host__transport__types_8h_1aafbd65a18c302f1f153b181db80ba8fa", "api/variable_host__transport__types_8h_1ab0f4f73bd1e609a0b0392110aa6c4464", "api/variable_host__transport__types_8h_1ab164ff21553b40079f884e7adaaab71d", "api/variable_host__transport__types_8h_1ab2c6b8aaf5dd07f6847367f8a3cc672a", "api/variable_host__transport__types_8h_1ab51e73071fda70a7ca13ad49de54eecb", "api/variable_host__transport__types_8h_1ab616bd38ef9b5bce0700f2f719982afe", "api/variable_host__transport__types_8h_1ab80ee75e48bcff60590ab85dc2ba2e4d", "api/variable_host__transport__types_8h_1abd938edbea27ed4f351dc19d69039222", "api/variable_host__transport__types_8h_1ac27141d7b944f1726d103e1d70bfa42c", "api/variable_host__transport__types_8h_1ac3cae26f5f4fd77505c5cc684f000f8b", "api/variable_host__transport__types_8h_1ac53569ade48ebfbf6590f1a188c8ee3d", "api/variable_host__transport__types_8h_1ac6b9dfb6a3df289aea5e75fed74f8ccd", "api/variable_host__transport__types_8h_1ac921e372c73f74e47f9df8105d6c832e", "api/variable_host__transport__types_8h_1acb3a6c3ab101017407767420a55c7bce", "api/variable_host__transport__types_8h_1acb54ffe6a95d10689128b03eb2a77f42", "api/variable_host__transport__types_8h_1ad0c6e0653d68ec75dcc18d34b1986578", "api/variable_host__transport__types_8h_1ad29f0fac76adc64bdbcded7ac12ce9c4", "api/variable_host__transport__types_8h_1ad2e989c2ea23725ced9541f9197d765e", "api/variable_host__transport__types_8h_1ad7b7907f64bd95e2b8283658736eca43", "api/variable_host__transport__types_8h_1ad81494366a13a54bd6e83460780941f1", "api/variable_host__transport__types_8h_1ad861ce2862ef9cba24b3b950b4dd37e2", "api/variable_host__transport__types_8h_1ad9b66a7dcec99e0385035d4188cb45ce", "api/variable_host__transport__types_8h_1adac81cc43b06ba05d7073c02622fc9ae", "api/variable_host__transport__types_8h_1add2e75a6243ec44bd1c9f647932d0807", "api/variable_host__transport__types_8h_1addb6b9f37d6d12114c447e56d7a94910", "api/variable_host__transport__types_8h_1ade1fc93f9f2ad74d50761aabcbb8c58f", "api/variable_host__transport__types_8h_1ae0f29bf62bce92bee634f1f921b9f01e", "api/variable_host__transport__types_8h_1ae1c2d516777e6b42af0d281c9ecc7375", "api/variable_host__transport__types_8h_1ae2ce2ef8f1ae200a09f2d551d634f569", "api/variable_host__transport__types_8h_1ae2f416b0a34b7beb4ed3873d791ac393", "api/variable_host__transport__types_8h_1ae6ee9be053cfc09d38936dada346162d", "api/variable_host__transport__types_8h_1aedecacea95ee55904c265c09a71a6b4c", "api/variable_host__transport__types_8h_1af5029fb6db797d8d8aebb7a15533c0d0", "api/variable_host__transport__types_8h_1af62d06fba8293c51e03074d4cb7e4585", "api/variable_host__transport__types_8h_1af6a306b725a13c587236e4a61d4ea050", "api/variable_host__transport__types_8h_1af77b1a54442f2443cf64a4766f916bcd", "api/variable_host__transport__types_8h_1afc30d1e053db2002729a8af7567f1e8a", "api/variable_host__transport__types_8h_1afd33b8606c3e10d7d0d0f5ebbe2b75ac", "api/variable_host__transport__types_8h_1afda2aefc18d59926341018e82d875229", "api/variable_ringbuffer__impl_8c_1aca726e74f3e7708930749e2813deb9bd", "api/variable_ringbuffer__impl_8h_1a778026c0adaede26aff919edf6aa1de2", "api/variable_sampling__impl_8c_1a927bf38d871c85f0d1e0ee9eaa1351d0", "api/variable_sampling__types_8h_1a41f6ba40d43e75548e08865d412b1ef4", "api/variable_sampling__types_8h_1abd938edbea27ed4f351dc19d69039222", "api/variable_sampling__types_8h_1ae1c2d516777e6b42af0d281c9ecc7375", "api/variable_sampling__types_8h_1af77b1a54442f2443cf64a4766f916bcd", "api/variable_test_8c_1a325819a8e492ac69542e8b31705af6e9", "index", "readme", "readme-wireshark"], "filenames": ["api/define_adxl345_8h_1a1a3b84c4d742fe051f12eb8e9d7db58c.rst", "api/define_adxl345_8h_1a593282de5e819f216c6bec6abbdc8c3a.rst", "api/define_adxl345__transport__impl_8h_1acdec8c760a17d588444cd50899420e75.rst", "api/define_controller__impl_8c_1a2da97cdb974bd8ee7a33fe39e255feb1.rst", "api/define_controller__impl_8c_1ab0975b1538786e46b8e4b5fa869e7fcd.rst", "api/define_controller__impl_8c_1ab1832f23d06d7eadbdb5e9370e4454a5.rst", "api/define_controller__impl_8c_1ad8047974c1ca16e65db118ef91ebfc7e.rst", "api/define_debug_8h_1a236cbb0238bec6b69565a156e8c3ad53.rst", "api/define_debug_8h_1a646e5c6a686c1e4cc559a7cc68bc005d.rst", "api/define_debug_8h_1a72ec92f727e507f8ed89b2496451f25b.rst", "api/define_debug_8h_1a7d82fab60f7c4d9259508ddeefe6860f.rst", "api/define_debug_8h_1a80d1d47668a4caa45de6559e1970b397.rst", "api/define_debug_8h_1add553479c72b1bad9cdb870d84a81aa1.rst", "api/define_host__transport_8h_1a52448fbad12ce1c5f682a6bce5141d49.rst", "api/define_host__transport__types_8h_1abc3544aae2ae0f78650ee7c49ed2c83e.rst", "api/define_led_8h_1a948ea3bd7e3719f0a67d06fc396cd260.rst", "api/define_led_8h_1ab9762c7920a3a458f5281a9c8513e9b8.rst", "api/define_led_8h_1afbf9ff806df4edcc06b11991c7353cfc.rst", "api/define_ringbuffer__impl_8h_1a018e3f6206f28db535e27ce850a65cb3.rst", "api/define_ringbuffer__impl_8h_1a1973b18f985517b2dd4328bb7ad4ab62.rst", "api/define_ringbuffer__impl_8h_1a466d94c34710afcd889fc18809cf96c0.rst", "api/define_ringbuffer__impl_8h_1a7b169c21c38fba69b8b43ef5d9ca47bb.rst", "api/define_ringbuffer__impl_8h_1ab678e1a5f5ebc9c4d79a2115a2bca497.rst", "api/define_sampling__types_8h_1a6f7f6b56470de805df7b77526191beba.rst", "api/define_test_8c_1a1c97847f645d2639ee866c7565da562d.rst", "api/define_test_8c_1a2f3ded3810aad4f1117ac7aac095feda.rst", "api/define_test_8c_1a31e7ef6ab3db961f1691a459e3c9718a.rst", "api/define_to__host__transport_8h_1a88f66998421f186a13c59a27c011e76f.rst", "api/define_unity__config_8h_1a1ef6780dec5ea37eea810e22e1a4c632.rst", "api/define_version_8h_1a1a53b724b6de666faa8a9e0d06d1055f.rst", "api/define_version_8h_1a1c6d5de492ac61ad29aec7aa9a436bbf.rst", "api/define_version_8h_1a901edadf17488bb6be1ac9a1e3cfea7a.rst", "api/define_version_8h_1ae0cb52afb79b185b1bf82c7e235f682b.rst", "api/dir__home_runner_work_controller_controller_Inc.rst", "api/dir__home_runner_work_controller_controller_Inc_fw.rst", "api/dir__home_runner_work_controller_controller_Src.rst", "api/dir__home_runner_work_controller_controller_Src_fw.rst", "api/dir__home_runner_work_controller_controller_lib.rst", "api/dir__home_runner_work_controller_controller_lib_adxl345.rst", "api/dir__home_runner_work_controller_controller_lib_adxl345_src.rst", "api/dir__home_runner_work_controller_controller_lib_controller.rst", "api/dir__home_runner_work_controller_controller_lib_controller_src.rst", "api/dir__home_runner_work_controller_controller_lib_host_transport.rst", "api/dir__home_runner_work_controller_controller_lib_host_transport_src.rst", "api/dir__home_runner_work_controller_controller_lib_ringbuffer.rst", "api/dir__home_runner_work_controller_controller_lib_ringbuffer_src.rst", "api/dir__home_runner_work_controller_controller_lib_sampling.rst", "api/dir__home_runner_work_controller_controller_lib_sampling_src.rst", "api/dir__home_runner_work_controller_controller_test.rst", "api/dir__home_runner_work_controller_controller_test_test_ringbuffer.rst", "api/dir__home_runner_work_controller_controller_test_utils.rst", "api/enum_adxl345__flags_8h_1a114643033e2c653158c202adb14dc8e1.rst", "api/enum_adxl345__flags_8h_1a1e836097ed4058fabf46a7f857155356.rst", "api/enum_adxl345__flags_8h_1a23a3530e3e870d9c68f5acdfa7311eeb.rst", "api/enum_adxl345__flags_8h_1a2481a6a199a4e74aa7999fe071c74267.rst", "api/enum_adxl345__flags_8h_1a2aa33b523bebdd04a462df505f4a9701.rst", "api/enum_adxl345__flags_8h_1a3e2eb079d34790a2c5e6d53c26e5226c.rst", "api/enum_adxl345__flags_8h_1a42c672b534e460edb56fd7730b297406.rst", "api/enum_adxl345__flags_8h_1a4db2ee2c4eb68481d38218393a5decbd.rst", "api/enum_adxl345__flags_8h_1a50dedcae134fbae0db34ad030ae97d5e.rst", "api/enum_adxl345__flags_8h_1a56079b83c6d7f874e4b36c2771903a5c.rst", "api/enum_adxl345__flags_8h_1a5852f46c4668a2e61dc6078ecdb1ee5e.rst", "api/enum_adxl345__flags_8h_1a5ae3e155c2d6fc97a1ac318cd6738c43.rst", "api/enum_adxl345__flags_8h_1a646668c76f062cdfef18123e259bef39.rst", "api/enum_adxl345__flags_8h_1a834927807771e1ed63ea46e924eff48a.rst", "api/enum_adxl345__flags_8h_1a838f78356395fdc86a710a285d296b7d.rst", "api/enum_adxl345__flags_8h_1a8ab4704ccbb33a382957f3501304ba50.rst", "api/enum_adxl345__flags_8h_1a8af7ef886711ec1e36a925cccfdf0c2f.rst", "api/enum_adxl345__flags_8h_1a8d417b16f0f93744f8af80d51c38ffeb.rst", "api/enum_adxl345__flags_8h_1a9192278eea0272a4b3b92006ca33cb99.rst", "api/enum_adxl345__flags_8h_1a988b140122294db70bdbe2c685e8883e.rst", "api/enum_adxl345__flags_8h_1aa7fe91945feaf0cf4983c46963607b53.rst", "api/enum_adxl345__flags_8h_1aaa53a6429862365058e9f0d6df90680f.rst", "api/enum_adxl345__flags_8h_1ab51a3bca87c0c3b2f22f00d72736ed78.rst", "api/enum_adxl345__flags_8h_1aba371ae2c1ac7d30978c9dc01b2d0302.rst", "api/enum_adxl345__flags_8h_1ad7e7ca6a5a84e87e2e0dc2c382e88f5e.rst", "api/enum_adxl345__flags_8h_1ad8a1bc51f25f37bb47d8333fc80579e7.rst", "api/enum_adxl345__flags_8h_1ad9bb53ea03849579da4b0f85e6970812.rst", "api/enum_adxl345__flags_8h_1addec4913908fc06c3bfafda7d8dbd778.rst", "api/enum_adxl345__flags_8h_1ae12a87f38a260cd1395fa95b65210e96.rst", "api/enum_adxl345__flags_8h_1ae2234c612a44b8351fd51db6638e5a37.rst", "api/enum_adxl345__flags_8h_1aea113fb35a8964a5862746ef41d4b8c2.rst", "api/enum_adxl345__flags_8h_1aeacaafb4990ff34e9fc4199e0e3ef82a.rst", "api/enum_adxl345__flags_8h_1af90caf8b105f26e06969e5c6da63610b.rst", "api/enum_adxl345__spi__types_8h_1a724c46636785edc1a58e7171c17e7a0c.rst", "api/enum_adxl345__spi__types_8h_1afd6c640f316d87383ac8ee42831eb63c.rst", "api/enum_host__transport_8h_1a74f8ebfaa5c7c50589f432fc564cf13e.rst", "api/enum_host__transport__types_8h_1a09588d2abff7c25824fe338a4cfafe63.rst", "api/enum_host__transport__types_8h_1a0f8fc7d8d585dcd04d9142be969268e5.rst", "api/enum_host__transport__types_8h_1ac83eafa94c9dfa2280f83ef8dc077a19.rst", "api/enum_host__transport__types_8h_1acdd6c68eea248e81eff3eb8f547f5204.rst", "api/enum_host__transport__types_8h_1aef31738b236562c4f0a18348be10fa81.rst", "api/file__home_runner_work_controller_controller_Inc_fw_adxl345_transport_impl.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_controller_impl.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_debug.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_host_transport_impl.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_led.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_ringbuffer_impl.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_sampling_impl.h.rst", "api/file__home_runner_work_controller_controller_Inc_fw_version.h.rst", "api/file__home_runner_work_controller_controller_Src_fw_adxl345_transport_impl.c.rst", "api/file__home_runner_work_controller_controller_Src_fw_controller_impl.c.rst", "api/file__home_runner_work_controller_controller_Src_fw_host_transport_impl.c.rst", "api/file__home_runner_work_controller_controller_Src_fw_ringbuffer_impl.c.rst", "api/file__home_runner_work_controller_controller_Src_fw_sampling_impl.c.rst", "api/file__home_runner_work_controller_controller_Src_fw_version.c.rst", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.c.rst", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.h.rst", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_flags.h.rst", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_register.h.rst", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_spi_types.h.rst", "api/file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_transport_types.h.rst", "api/file__home_runner_work_controller_controller_lib_controller_src_controller.c.rst", "api/file__home_runner_work_controller_controller_lib_controller_src_controller.h.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.c.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.h.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.c.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.h.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_host_transport_types.h.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.c.rst", "api/file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.h.rst", "api/file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.c.rst", "api/file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.h.rst", "api/file__home_runner_work_controller_controller_lib_sampling_src_sampling.c.rst", "api/file__home_runner_work_controller_controller_lib_sampling_src_sampling.h.rst", "api/file__home_runner_work_controller_controller_lib_sampling_src_sampling_types.h.rst", "api/file__home_runner_work_controller_controller_test_test_ringbuffer_test.c.rst", "api/file__home_runner_work_controller_controller_test_unity_config.h.rst", "api/file__home_runner_work_controller_controller_test_utils_run-tests.h.rst", "api/function_adxl345_8c_1a0ef617ec05f613283d155d0de4d37e53.rst", "api/function_adxl345_8c_1a3460885ccd5cf674d0a8b1ec161114ce.rst", "api/function_adxl345_8c_1a5605a71e07edcc370b027a668f393615.rst", "api/function_adxl345_8c_1a5a7d68a9a5e045ed6f5ae88e277fc133.rst", "api/function_adxl345_8c_1a67d00841116cfecf53a7ca6352209df4.rst", "api/function_adxl345_8c_1a901e7705ca34646d41fe7db11c8b2ba6.rst", "api/function_adxl345_8c_1a92f47a5a55daaa4f0b7c0952fef0a2d1.rst", "api/function_adxl345_8c_1ab61b3d92785c6a11acb64cb5b1b9d630.rst", "api/function_adxl345_8c_1ab9baf97a44fa18d98ba816b1ba85f680.rst", "api/function_adxl345_8c_1ad38f932fb6fbb6056e9258b9179abdbd.rst", "api/function_adxl345_8c_1aec1396797b012df335ff8c96955932e2.rst", "api/function_adxl345_8c_1af238689828fad86568f32caac567fc01.rst", "api/function_adxl345_8h_1a0ef617ec05f613283d155d0de4d37e53.rst", "api/function_adxl345_8h_1a3460885ccd5cf674d0a8b1ec161114ce.rst", "api/function_adxl345_8h_1a5605a71e07edcc370b027a668f393615.rst", "api/function_adxl345_8h_1a67d00841116cfecf53a7ca6352209df4.rst", "api/function_adxl345_8h_1a92f47a5a55daaa4f0b7c0952fef0a2d1.rst", "api/function_adxl345_8h_1ab61b3d92785c6a11acb64cb5b1b9d630.rst", "api/function_adxl345_8h_1ab9baf97a44fa18d98ba816b1ba85f680.rst", "api/function_adxl345_8h_1ad38f932fb6fbb6056e9258b9179abdbd.rst", "api/function_adxl345_8h_1aec1396797b012df335ff8c96955932e2.rst", "api/function_adxl345_8h_1af238689828fad86568f32caac567fc01.rst", "api/function_adxl345__register_8h_1acc02190e97ec034a25eca812c23b98d6.rst", "api/function_adxl345__transport__impl_8c_1a17e93b852aca31ef8d8f495fcfaadc31.rst", "api/function_adxl345__transport__impl_8c_1a86ca88b3cd7279573f1ee5107019e73c.rst", "api/function_adxl345__transport__impl_8c_1aa14a3171c0d0175bb4da9e60add284f5.rst", "api/function_adxl345__transport__impl_8c_1ac054c297b066d074bdbd72919dda4f4d.rst", "api/function_adxl345__transport__impl_8c_1af0e573e93c966e33fd642d5771e0d072.rst", "api/function_adxl345__transport__impl_8h_1aa14a3171c0d0175bb4da9e60add284f5.rst", "api/function_adxl345__transport__impl_8h_1af0e573e93c966e33fd642d5771e0d072.rst", "api/function_adxl345__transport__types_8h_1a1880fcedd9961d4e738b565207231a04.rst", "api/function_controller__impl_8c_1a22cb33c193020641a0b8be69deb13546.rst", "api/function_controller__impl_8c_1a2ee729cc36a6cda22ee6ddfb5129aba9.rst", "api/function_controller__impl_8c_1a372e46bbe50ec2e0aa793ed5bafa3257.rst", "api/function_controller__impl_8c_1a3cc3a5ce4a78ca23e9b994dda2c89637.rst", "api/function_controller__impl_8c_1a4774f44ed0c59c6419ac85c2785617ea.rst", "api/function_controller__impl_8c_1a49fc3195b070e4905bb67597d6cfea70.rst", "api/function_controller__impl_8c_1a4ec7e05708eabb0c4b421911b947e8f9.rst", "api/function_controller__impl_8c_1a5836fa9015aac1fba7d702bdc6493d8a.rst", "api/function_controller__impl_8c_1a649d2c598862d77ddb0b08efdd88a740.rst", "api/function_controller__impl_8c_1a66048ba7308a1ff1f0db78dc160c5360.rst", "api/function_controller__impl_8c_1a66c51aa031796dbb5efb4f0717146e44.rst", "api/function_controller__impl_8c_1a686368da9cd9160885612d45ff18930b.rst", "api/function_controller__impl_8c_1a73449c33b8e903c9b6e9de4d16be0064.rst", "api/function_controller__impl_8c_1a7482fe02c4be77534060addf3a93ee31.rst", "api/function_controller__impl_8c_1a755320ba0c169d3697009b13d3d99e87.rst", "api/function_controller__impl_8c_1a7652251f5077fd27a96f519aac4c29ce.rst", "api/function_controller__impl_8c_1a791c278018effd03c2d785f4f0c25d61.rst", "api/function_controller__impl_8c_1a88fe47f4a0a879b25e03c39c2297f312.rst", "api/function_controller__impl_8c_1a894fc5e10c664f2bc59e4852680c2902.rst", "api/function_controller__impl_8c_1a89b1d736b2d2afc3d37552260579c0d1.rst", "api/function_controller__impl_8c_1a8e2c4873bd3748d4efcd610b113f203d.rst", "api/function_controller__impl_8c_1a8f394894ddf5ffcb0699b352b4095f53.rst", "api/function_controller__impl_8c_1a8fc86217766450df200f8c3cfe1da74e.rst", "api/function_controller__impl_8c_1a9ace065330cb7cedcef975583b11c0ff.rst", "api/function_controller__impl_8c_1a9c1bde924f90fffba888f4e323c1346b.rst", "api/function_controller__impl_8c_1a9df7ad7339bfa68bc2fd90bfbb2ee326.rst", "api/function_controller__impl_8c_1aa4859365e6ad62258d64537030a92cf4.rst", "api/function_controller__impl_8c_1aa6fc1a711ac0cda42f023ddfe9ded04d.rst", "api/function_controller__impl_8c_1ab479e2e5d14e4185269d967fe17ddc45.rst", "api/function_controller__impl_8c_1ab4cac79cff838678a94ab8fc5f28d2b8.rst", "api/function_controller__impl_8c_1ab4fe78e742d301249bf03da3c58eb442.rst", "api/function_controller__impl_8c_1abef59c1b09c873e25dcf7cd2296ba2d4.rst", "api/function_controller__impl_8c_1ac40697a0744d47795ebe700126afc962.rst", "api/function_controller__impl_8c_1ac8d926da4731b4d105f3e8f07c61577a.rst", "api/function_controller__impl_8c_1acb0c07a81f605dfc5c00031018e8f757.rst", "api/function_controller__impl_8c_1ada37b4670349e284523369e4980833c2.rst", "api/function_controller__impl_8c_1adbaedf7e92176b7b33afc0ff2fed9a19.rst", "api/function_controller__impl_8c_1add5d5708782076868b58766b5b2fbc99.rst", "api/function_controller__impl_8c_1ae2b7bd69ad57ae7b4634f7cd1672ff72.rst", "api/function_controller__impl_8c_1ae5507b8d85d6929ffb2c4f70698ef8a4.rst", "api/function_controller__impl_8c_1af128666cf06641bc21734e78ee596d90.rst", "api/function_controller__impl_8c_1af209ccce35a98bf6f271478cd8ea3c68.rst", "api/function_controller__impl_8c_1af9e9572b6249611db186b7647b71babb.rst", "api/function_from__host__transport_8c_1a45016b6d4eea9bccca2a7f6c0de95921.rst", "api/function_from__host__transport_8h_1a45016b6d4eea9bccca2a7f6c0de95921.rst", "api/function_host__transport_8c_1a0c9e0a9338f700b262689280eca75ae4.rst", "api/function_host__transport_8h_1a0c9e0a9338f700b262689280eca75ae4.rst", "api/function_host__transport__impl_8c_1a10b705c106c1c95a4433aa6b9e1139e3.rst", "api/function_host__transport__impl_8c_1ab795a4b8753590b3d78b7cee07c04d21.rst", "api/function_host__transport__impl_8c_1afad186c595d91ebd30b58106d767de5b.rst", "api/function_host__transport__impl_8h_1a10b705c106c1c95a4433aa6b9e1139e3.rst", "api/function_host__transport__impl_8h_1ab795a4b8753590b3d78b7cee07c04d21.rst", "api/function_host__transport__impl_8h_1afad186c595d91ebd30b58106d767de5b.rst", "api/function_host__transport__types_8h_1a8b868bbd21ba7df4a6635a0f147da9ea.rst", "api/function_host__transport__types_8h_1ac79abf6004596fe72a9b87b36132f2ef.rst", "api/function_ringbuffer_8c_1a0bcd7705c6aae413215637f1d01920ae.rst", "api/function_ringbuffer_8c_1a0ce8c6dc9462bb767de1ee11f8594ada.rst", "api/function_ringbuffer_8c_1a14cd7a193ec80b52d8439be928a38ac5.rst", "api/function_ringbuffer_8c_1a30a19998fb065e7ba6662562848cad83.rst", "api/function_ringbuffer_8c_1a58c877992b59b998ff9af09cd10639fe.rst", "api/function_ringbuffer_8c_1a6f9ad21c75ef81abc716c9d88e7eb292.rst", "api/function_ringbuffer_8c_1a74f72afe4e6c93f662bec40387730db2.rst", "api/function_ringbuffer_8c_1a778c373c85d06d09fd2412d5a5636dee.rst", "api/function_ringbuffer_8c_1a89583e71625a19f29d0da9a42928358b.rst", "api/function_ringbuffer_8c_1a90df506fa5d1412690f7045a2a714755.rst", "api/function_ringbuffer_8c_1ab9f317616d0bd9274f0a5d6e0f1f3f9a.rst", "api/function_ringbuffer_8c_1acaf0d7eaba25e09488f0b1b91646b094.rst", "api/function_ringbuffer_8c_1ae056628ebdf9afba084c147520922074.rst", "api/function_ringbuffer_8c_1ae6714bfe881444624c8636e334e0ef42.rst", "api/function_ringbuffer_8c_1af9eabc252f5224d6f9403d54be3f8340.rst", "api/function_ringbuffer_8h_1a0bcd7705c6aae413215637f1d01920ae.rst", "api/function_ringbuffer_8h_1a0ce8c6dc9462bb767de1ee11f8594ada.rst", "api/function_ringbuffer_8h_1a14cd7a193ec80b52d8439be928a38ac5.rst", "api/function_ringbuffer_8h_1a30a19998fb065e7ba6662562848cad83.rst", "api/function_ringbuffer_8h_1a58c877992b59b998ff9af09cd10639fe.rst", "api/function_ringbuffer_8h_1a6f9ad21c75ef81abc716c9d88e7eb292.rst", "api/function_ringbuffer_8h_1a74f72afe4e6c93f662bec40387730db2.rst", "api/function_ringbuffer_8h_1a89583e71625a19f29d0da9a42928358b.rst", "api/function_ringbuffer_8h_1a90df506fa5d1412690f7045a2a714755.rst", "api/function_ringbuffer_8h_1ab9f317616d0bd9274f0a5d6e0f1f3f9a.rst", "api/function_ringbuffer_8h_1ae6714bfe881444624c8636e334e0ef42.rst", "api/function_ringbuffer_8h_1af9eabc252f5224d6f9403d54be3f8340.rst", "api/function_run-tests_8h_1a3c04138a5bfe5d72780bb7e82a18e627.rst", "api/function_sampling_8c_1a2c1b5634e93306c67c78add49d3bf175.rst", "api/function_sampling_8c_1a578e25edef9c83506a63206379af7a25.rst", "api/function_sampling_8c_1a5abc5903ad31d2108b55d8d8283b0e5f.rst", "api/function_sampling_8c_1a6b3fd546e3ce118d97afba306bb1f1a3.rst", "api/function_sampling_8c_1a6fad96b836dc0437c29b2d425e057e91.rst", "api/function_sampling_8c_1a73bc9b85a2c1ec7b6204215d2728414e.rst", "api/function_sampling_8c_1a9f656201a21eeecd5486f3e754ff64be.rst", "api/function_sampling_8c_1ab1af2cb7e7cc632823338b6428c912d9.rst", "api/function_sampling_8c_1aba2a1f3f45bb7f04876c1bc160de3623.rst", "api/function_sampling_8c_1ac0f2c3c25b7af10cef5f51041ff3c05b.rst", "api/function_sampling_8c_1ad2b7e3f32490d7cd596cf2d90cfddf2f.rst", "api/function_sampling_8h_1a2c1b5634e93306c67c78add49d3bf175.rst", "api/function_sampling_8h_1a6b3fd546e3ce118d97afba306bb1f1a3.rst", "api/function_sampling_8h_1a73bc9b85a2c1ec7b6204215d2728414e.rst", "api/function_sampling_8h_1ab1af2cb7e7cc632823338b6428c912d9.rst", "api/function_sampling_8h_1aba2a1f3f45bb7f04876c1bc160de3623.rst", "api/function_sampling_8h_1ac0f2c3c25b7af10cef5f51041ff3c05b.rst", "api/function_sampling_8h_1ad2b7e3f32490d7cd596cf2d90cfddf2f.rst", "api/function_sampling__impl_8c_1a0de7f15197d79f90ae4d0ae89147cccd.rst", "api/function_sampling__impl_8h_1a0de7f15197d79f90ae4d0ae89147cccd.rst", "api/function_sampling__types_8h_1a7cad04f2ac26baf73b6284554ea1112d.rst", "api/function_test_8c_1a0040b31a2648820e75882b52c2790efa.rst", "api/function_test_8c_1a02d49f00cf3ba207510146567e1d6174.rst", "api/function_test_8c_1a06d373c6c15d33187ebaf9c09c64ed12.rst", "api/function_test_8c_1a216ac4bd968ec1d4a1b645d5f608b06d.rst", "api/function_test_8c_1a5dba4d349dffe4a1e8bde8f035fc74e4.rst", "api/function_test_8c_1a63326a1b70b6e3f070e51687798e02de.rst", "api/function_test_8c_1aac1ea17cbc3f1bfe2e87b452072de95f.rst", "api/function_test_8c_1aad8df19b8a0a922fb33a49b1b8d0f2d5.rst", "api/function_test_8c_1ab804e0f66def63262c1d6b4e3d2a2bd7.rst", "api/function_test_8c_1abb7e479e02c07d9528d45f35846711bc.rst", "api/function_test_8c_1ac3892e844d173d328e6cdeb06540a86d.rst", "api/function_test_8c_1ac6ad356c992638ab5658944dc6ae71c1.rst", "api/function_test_8c_1ad29f62dda14b7954a6995e922821fa05.rst", "api/function_test_8c_1ad99934803afa00f470f0a37273290a13.rst", "api/function_test_8c_1adde4b4dd76ebe9500b29125a809f2ee6.rst", "api/function_test_8c_1ade4a4f2120bc7efcc6fdb527256943e1.rst", "api/function_test_8c_1ae53c39223316e02dff7bb6b9b54c88f7.rst", "api/function_to__host__transport_8c_1a0d70e117d6d861a5496ae5518d2cfc27.rst", "api/function_to__host__transport_8c_1a2e2dd9eec895bc7adbd99deed3462165.rst", "api/function_to__host__transport_8c_1a35faef7d47e8b565eb9b3832dfa1651b.rst", "api/function_to__host__transport_8c_1a4cd9e88c2bdeba254ef1633e2840e860.rst", "api/function_to__host__transport_8c_1a534fd48fd518d57461e15771a0ccc190.rst", "api/function_to__host__transport_8c_1a54d844925874214e816e4a1764f1d0b6.rst", "api/function_to__host__transport_8c_1a5dfd39a11af0cd8ee1af33868ecc3c1e.rst", "api/function_to__host__transport_8c_1a5f8d17e2509d7151ac7418af87684bb4.rst", "api/function_to__host__transport_8c_1a63afd5a4ee612c2f1e1ce9851016ffb4.rst", "api/function_to__host__transport_8c_1a6859b85810ea85ce8d95bd3a58c9f982.rst", "api/function_to__host__transport_8c_1a8754e0a5c57a604a9960aa1014ecbd81.rst", "api/function_to__host__transport_8c_1a91f7f7c7d66cec64faa2616b43a1d90f.rst", "api/function_to__host__transport_8c_1a9b676e279b904bfd8efbe13f1e1da5e1.rst", "api/function_to__host__transport_8c_1a9ec2cd757757b00d2b675ea07e249476.rst", "api/function_to__host__transport_8c_1acb0715f9c958a78a3ab6271072b65299.rst", "api/function_to__host__transport_8c_1acf08bba3589d9124a20243e8b43152e4.rst", "api/function_to__host__transport_8c_1ad27e19bcc1d967a5874090674313d98f.rst", "api/function_to__host__transport_8c_1ad4f08c75259c008b3529aaa18438beaa.rst", "api/function_to__host__transport_8c_1ada092c361a17f3eb06a5814803fa5578.rst", "api/function_to__host__transport_8c_1adb072a78e3865c691623afadd15c31f3.rst", "api/function_to__host__transport_8c_1aec41b705a2eb5738eae994b4e91e1296.rst", "api/function_to__host__transport_8h_1a0d70e117d6d861a5496ae5518d2cfc27.rst", "api/function_to__host__transport_8h_1a2e2dd9eec895bc7adbd99deed3462165.rst", "api/function_to__host__transport_8h_1a4cd9e88c2bdeba254ef1633e2840e860.rst", "api/function_to__host__transport_8h_1a534fd48fd518d57461e15771a0ccc190.rst", "api/function_to__host__transport_8h_1a54d844925874214e816e4a1764f1d0b6.rst", "api/function_to__host__transport_8h_1a5dfd39a11af0cd8ee1af33868ecc3c1e.rst", "api/function_to__host__transport_8h_1a5f8d17e2509d7151ac7418af87684bb4.rst", "api/function_to__host__transport_8h_1a63afd5a4ee612c2f1e1ce9851016ffb4.rst", "api/function_to__host__transport_8h_1a8754e0a5c57a604a9960aa1014ecbd81.rst", "api/function_to__host__transport_8h_1a91f7f7c7d66cec64faa2616b43a1d90f.rst", "api/function_to__host__transport_8h_1acb0715f9c958a78a3ab6271072b65299.rst", "api/function_to__host__transport_8h_1acf08bba3589d9124a20243e8b43152e4.rst", "api/function_to__host__transport_8h_1ad27e19bcc1d967a5874090674313d98f.rst", "api/function_to__host__transport_8h_1ad4f08c75259c008b3529aaa18438beaa.rst", "api/function_to__host__transport_8h_1adb072a78e3865c691623afadd15c31f3.rst", "api/function_to__host__transport_8h_1aec41b705a2eb5738eae994b4e91e1296.rst", "api/library_root.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_adxl345_transport_impl.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_controller_impl.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_debug.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_host_transport_impl.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_led.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_ringbuffer_impl.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_sampling_impl.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Inc_fw_version.h.rst", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_adxl345_transport_impl.c.rst", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_controller_impl.c.rst", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_host_transport_impl.c.rst", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_ringbuffer_impl.c.rst", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_sampling_impl.c.rst", "api/program_listing_file__home_runner_work_controller_controller_Src_fw_version.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_flags.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_register.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_spi_types.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_adxl345_src_adxl345_transport_types.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_controller_src_controller.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_controller_src_controller.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_from_host_transport.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_host_transport.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_host_transport_types.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_host_transport_src_to_host_transport.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_ringbuffer_src_ringbuffer.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_sampling_src_sampling.c.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_sampling_src_sampling.h.rst", "api/program_listing_file__home_runner_work_controller_controller_lib_sampling_src_sampling_types.h.rst", "api/program_listing_file__home_runner_work_controller_controller_test_test_ringbuffer_test.c.rst", "api/program_listing_file__home_runner_work_controller_controller_test_unity_config.h.rst", "api/program_listing_file__home_runner_work_controller_controller_test_utils_run-tests.h.rst", "api/structAdxl345Register__BwRate.rst", "api/structAdxl345Register__DataFormat.rst", "api/structAdxl345Register__FifoCtl.rst", "api/structAdxl345Register__FifoStatus.rst", "api/structAdxl345Register__IntEnable.rst", "api/structAdxl345Register__IntMap.rst", "api/structAdxl345Register__PowerCtl.rst", "api/structAdxl345Transport__Acceleration.rst", "api/structAdxl345Transport__DataPaddedRegister.rst", "api/structAdxl345__Handle.rst", "api/structController__Handle.rst", "api/structController__Host.rst", "api/structController__Sampling.rst", "api/structController__Sensor.rst", "api/structFoo.rst", "api/structHostTransport__FromHostApi.rst", "api/structHostTransport__Handle.rst", "api/structHostTransport__ToHostApi.rst", "api/structRingbuffer.rst", "api/structRingbuffer__Index.rst", "api/structSampling__Acceleration.rst", "api/structSampling__Handle.rst", "api/structSampling__State.rst", "api/structTransportFrame.rst", "api/structTransportRx__DeviceReboot.rst", "api/structTransportRx__GetBufferStatus.rst", "api/structTransportRx__GetDeviceSetup.rst", "api/structTransportRx__GetFirmwareVersion.rst", "api/structTransportRx__GetOutputDataRate.rst", "api/structTransportRx__GetRange.rst", "api/structTransportRx__GetScale.rst", "api/structTransportRx__GetUptime.rst", "api/structTransportRx__SamplingStart.rst", "api/structTransportRx__SamplingStop.rst", "api/structTransportRx__SetOutputDataRate.rst", "api/structTransportRx__SetRange.rst", "api/structTransportRx__SetScale.rst", "api/structTransportTx__Acceleration.rst", "api/structTransportTx__BufferOverflow.rst", "api/structTransportTx__BufferStatus.rst", "api/structTransportTx__DeviceSetup.rst", "api/structTransportTx__Fault.rst", "api/structTransportTx__FifoOverflow.rst", "api/structTransportTx__FirmwareVersion.rst", "api/structTransportTx__OutputDataRate.rst", "api/structTransportTx__Range.rst", "api/structTransportTx__SamplingAborted.rst", "api/structTransportTx__SamplingFinished.rst", "api/structTransportTx__SamplingStarted.rst", "api/structTransportTx__SamplingStopped.rst", "api/structTransportTx__Scale.rst", "api/structTransportTx__TransmissionError.rst", "api/structTransportTx__Uptime.rst", "api/structTransport__Acceleration.rst", "api/structTransport__Header.rst", "api/structTransport__ResponseFlags.rst", "api/structTwoBytes.rst", "api/unabridged_orphan.rst", "api/unionAdxl345Register.rst", "api/unionAdxl345Transport__RxFrame.rst", "api/unionAdxl345Transport__TxFrame.rst", "api/unionTransportRxFrame.rst", "api/unionTransportTxFrame.rst", "api/variable_adxl345__register_8h_1a14425184ac354135e844ac0557667f41.rst", "api/variable_adxl345__register_8h_1a14cb75436545b3d993304c28feaeebd9.rst", "api/variable_adxl345__register_8h_1a1558e28e9bd987127aa73bebbc1f59f8.rst", "api/variable_adxl345__register_8h_1a15c1d3def8ea37e52de9ed0db8dc30cd.rst", "api/variable_adxl345__register_8h_1a1c7dfe6bdcd6993494b6e94993ef5607.rst", "api/variable_adxl345__register_8h_1a20ed0fb1e9a2b4e0c3ae40fc5e348962.rst", "api/variable_adxl345__register_8h_1a3420c8f78425c8970b2868d78abbce2e.rst", "api/variable_adxl345__register_8h_1a3585201b190b39d2d702daa9192323a3.rst", "api/variable_adxl345__register_8h_1a401a1c7bc3fea1c7fbc21fd378f68376.rst", "api/variable_adxl345__register_8h_1a47b1d0dc45f9b7da2092fffb11a5b6e0.rst", "api/variable_adxl345__register_8h_1a4d876947d880a19cf85d11ce818b579a.rst", "api/variable_adxl345__register_8h_1a5372599aeb847c2b1f1b56b5270e8e76.rst", "api/variable_adxl345__register_8h_1a5b3fdb1d6accca0c21fbf4ae06912074.rst", "api/variable_adxl345__register_8h_1a6223f169ec7f986bb2b5c822270d94e7.rst", "api/variable_adxl345__register_8h_1a6c4505263fab9a43d25826a97795031a.rst", "api/variable_adxl345__register_8h_1a6e314e6949fce335374afdcc02e518f9.rst", "api/variable_adxl345__register_8h_1a6e4be064ea971273c6259af76bb9a32d.rst", "api/variable_adxl345__register_8h_1a74cbe59d5c067e7dec7b2bf0957f002b.rst", "api/variable_adxl345__register_8h_1a7bafb935dc96b0d6ef23c35d57ec98d5.rst", "api/variable_adxl345__register_8h_1a80cb95696b39a93fbf3ff70a453383e5.rst", "api/variable_adxl345__register_8h_1a93b0907ea07c3b6be23444e0dec73760.rst", "api/variable_adxl345__register_8h_1a9a6b60dd9a65d1af54f4b12a1a3d77c5.rst", "api/variable_adxl345__register_8h_1a9edcde0584b2ab6c4a7b49eaec49d237.rst", "api/variable_adxl345__register_8h_1aae0908816800863313ff083c84c903df.rst", "api/variable_adxl345__register_8h_1aaf3f0e48a6284f3dcc2f8c18566277ae.rst", "api/variable_adxl345__register_8h_1aaff90b525f34bedcce6c6e69a26541e1.rst", "api/variable_adxl345__register_8h_1abc3b103dde8dc5818d978805495a8a73.rst", "api/variable_adxl345__register_8h_1ac492110d02c2421f1638fb8626c0c712.rst", "api/variable_adxl345__register_8h_1ac4eaa5de8ee14643f71be6145e82524b.rst", "api/variable_adxl345__register_8h_1ac5ba7b0d7a3f41805b050c35e17d0bbb.rst", "api/variable_adxl345__register_8h_1acdfd9f6432ec3eee8e7be7efb1a2dec8.rst", "api/variable_adxl345__register_8h_1acf9bcc20052a8187846fb82935e9b45a.rst", "api/variable_adxl345__register_8h_1ad47e9b879c95a25ce124bd5611ff9497.rst", "api/variable_adxl345__register_8h_1ad704111a3ed0809de990087ed155569d.rst", "api/variable_adxl345__register_8h_1aea542246eb60ba1d3d083ceae4e5e2ce.rst", "api/variable_adxl345__register_8h_1af90c0732bf1a59f6f8291714c18cb1cd.rst", "api/variable_adxl345__register_8h_1afb916727068c402389508917b64dc82b.rst", "api/variable_adxl345__transport__types_8h_1a33db1da8d46f8ca17619d8f3176708ae.rst", "api/variable_adxl345__transport__types_8h_1a40396861b44e4f4de864b5bb22f69cca.rst", "api/variable_adxl345__transport__types_8h_1a40f6375cb41616bdb50a00d3864dc3ef.rst", "api/variable_adxl345__transport__types_8h_1a4aedb463ae74780f786bfd4a86bb7659.rst", "api/variable_adxl345__transport__types_8h_1a59dbeb525fc7eeb57fe437a87b495a71.rst", "api/variable_adxl345__transport__types_8h_1a663e034d477c50096d18f4384c53a78c.rst", "api/variable_adxl345__transport__types_8h_1a95cde0d00f61c5f6c1f2349807717cca.rst", "api/variable_adxl345__transport__types_8h_1aba591f724855d567a5da5832797c5d8f.rst", "api/variable_adxl345__transport__types_8h_1abd938edbea27ed4f351dc19d69039222.rst", "api/variable_adxl345__transport__types_8h_1ae1c2d516777e6b42af0d281c9ecc7375.rst", "api/variable_adxl345__transport__types_8h_1aecc137c3b81bbba3ef8af885f966196a.rst", "api/variable_adxl345__transport__types_8h_1af77b1a54442f2443cf64a4766f916bcd.rst", "api/variable_controller__impl_8c_1a0101c712ca279fbf03f282d62b3b61d4.rst", "api/variable_controller__impl_8c_1a39216c9e6e4fb47623e07bd6d66d49e7.rst", "api/variable_controller__impl_8c_1a3acb0dee90a133ab0ce3b566a9a5da63.rst", "api/variable_controller__impl_8c_1a5d3f1ea9386237fcc79eea2647e808f9.rst", "api/variable_controller__impl_8c_1a671da16d0358339c993f4ad04da9e616.rst", "api/variable_controller__impl_8c_1a6b1f2d72702bb2bb2c3d5072fcbae9fa.rst", "api/variable_controller__impl_8c_1a7b038d75e0abe4eed60070914677ee73.rst", "api/variable_controller__impl_8c_1a7bec0fed17edfcb64950f5d06bd2a005.rst", "api/variable_controller__impl_8c_1a84fe37258413abba127b115521aebed9.rst", "api/variable_controller__impl_8c_1a87462955bf03d8174675e67e95010fab.rst", "api/variable_controller__impl_8c_1a895a28596514d13d23e8e7c282cc4b76.rst", "api/variable_controller__impl_8c_1a8ffa4b52c49fc859a7142a3f64ac9aa5.rst", "api/variable_controller__impl_8c_1a927bf38d871c85f0d1e0ee9eaa1351d0.rst", "api/variable_controller__impl_8c_1aadd7a9adc675bc15aa20fb8ba2935402.rst", "api/variable_controller__impl_8c_1ab0a6c321e93f7f315e38a82d7235acab.rst", "api/variable_controller__impl_8c_1ab56ab2a03c4aa0c3ae17befc6a6f7afe.rst", "api/variable_controller__impl_8c_1ae5f021b6cf2bb304ad61a6a3c3791b61.rst", "api/variable_controller__impl_8c_1af327710382584c99df792b222881c0d7.rst", "api/variable_controller__impl_8h_1a927bf38d871c85f0d1e0ee9eaa1351d0.rst", "api/variable_host__transport__impl_8c_1a927bf38d871c85f0d1e0ee9eaa1351d0.rst", "api/variable_host__transport__types_8h_1a00c54fad5fef8d31eb75c1163468005b.rst", "api/variable_host__transport__types_8h_1a091d1bce163f98989b9b2fdfea535308.rst", "api/variable_host__transport__types_8h_1a0aaf886a4e4afb1771c9774703859d5c.rst", "api/variable_host__transport__types_8h_1a0b760b6cc534589862d9c871c107ccd8.rst", "api/variable_host__transport__types_8h_1a1690465050dce4f1cf0cafd7880f7a41.rst", "api/variable_host__transport__types_8h_1a18255b9548a3be025fb38341aab3ff28.rst", "api/variable_host__transport__types_8h_1a1876d2a2a995a89d1ae36b070d01e466.rst", "api/variable_host__transport__types_8h_1a18e8da580464a6ec8b8947a53740093c.rst", "api/variable_host__transport__types_8h_1a199357a0869b4d3117d8d21a4cd818e7.rst", "api/variable_host__transport__types_8h_1a1af577436c0e4a90d7b84d9f1658798f.rst", "api/variable_host__transport__types_8h_1a1d9850472cc852e0884b276ac2131a4e.rst", "api/variable_host__transport__types_8h_1a20ed0fb1e9a2b4e0c3ae40fc5e348962.rst", "api/variable_host__transport__types_8h_1a21a580e681a5f26e8e5fe75dfdbc8a5a.rst", "api/variable_host__transport__types_8h_1a22bb34790f05eda025ff6ec569a38893.rst", "api/variable_host__transport__types_8h_1a23ea3f828418c5295d37031944da4dc4.rst", "api/variable_host__transport__types_8h_1a2643d0396638e7b2337cbb1074bb0bce.rst", "api/variable_host__transport__types_8h_1a2a5c3e7bd006c058342d46b4a0dcf654.rst", "api/variable_host__transport__types_8h_1a30ce5a792a73cde28c6eabc0d3bfb1c3.rst", "api/variable_host__transport__types_8h_1a32054bbd4957faf54027c3806f0572d9.rst", "api/variable_host__transport__types_8h_1a369f86e0d4bf8513c48e692f6f093e58.rst", "api/variable_host__transport__types_8h_1a3875c02c7867a24afd72c07a8e836d0c.rst", "api/variable_host__transport__types_8h_1a3c0035a602dd728ded865b9d6ef15294.rst", "api/variable_host__transport__types_8h_1a3c16a252ddd5788c1117d24e795ed229.rst", "api/variable_host__transport__types_8h_1a3f2aefc49acb5eb231469ddc39fedf44.rst", "api/variable_host__transport__types_8h_1a47c2854e80e0bdcf6627a28d8d84bb10.rst", "api/variable_host__transport__types_8h_1a4a3828d9a5b6768a573e1bead3e2d2ff.rst", "api/variable_host__transport__types_8h_1a4d33c777e50886258b7f902cab478d0f.rst", "api/variable_host__transport__types_8h_1a4e673e766b82998f915b4af85e5d7704.rst", "api/variable_host__transport__types_8h_1a4edf0db215fb7c5e9a9b0fa7908a4c4f.rst", "api/variable_host__transport__types_8h_1a4eef206282513dee7159851c609bc485.rst", "api/variable_host__transport__types_8h_1a5189cd3671dace2454c818487957edcf.rst", "api/variable_host__transport__types_8h_1a539fade4288db3f9773404189cec9d04.rst", "api/variable_host__transport__types_8h_1a5468707ba0cf05d846b544d6ec5698ab.rst", "api/variable_host__transport__types_8h_1a57831df9d6b0fc0b56f277d97399c5ab.rst", "api/variable_host__transport__types_8h_1a596a95e1a93ab06f074222ab18f95920.rst", "api/variable_host__transport__types_8h_1a5bd4e4c943762926c8f653b6224cced2.rst", "api/variable_host__transport__types_8h_1a5c47aa5e6c52d974ca243117937d1e4b.rst", "api/variable_host__transport__types_8h_1a616c0a72f0e4af38b93c736773ac7210.rst", "api/variable_host__transport__types_8h_1a6215da7f38ae96ed447bb6277fe48150.rst", "api/variable_host__transport__types_8h_1a646dea9dddb9a73346683381aca53f42.rst", "api/variable_host__transport__types_8h_1a67b4a66a95e3d5dc5050f60d150280d9.rst", "api/variable_host__transport__types_8h_1a6855bc5e18ebc269c18919a044eccace.rst", "api/variable_host__transport__types_8h_1a6cd216ab4f7b652797fef14382ed17c7.rst", "api/variable_host__transport__types_8h_1a7092625ebce4006ef4775bf3417f3f42.rst", "api/variable_host__transport__types_8h_1a72a394e847080e277ff32248ebb7133e.rst", "api/variable_host__transport__types_8h_1a7539b8b6c9a4574a3ca913254c9f4f42.rst", "api/variable_host__transport__types_8h_1a75512796c04cb0ccbc6b6dee9d05a330.rst", "api/variable_host__transport__types_8h_1a7b901b2ed436c9b8a5485f518cda5e02.rst", "api/variable_host__transport__types_8h_1a852b86a2eaee9852ada7a43e61e311a2.rst", "api/variable_host__transport__types_8h_1a86257c49aea65b6e107dc85f39306d36.rst", "api/variable_host__transport__types_8h_1a87b83b4ee285085422bbd7df9c9840b8.rst", "api/variable_host__transport__types_8h_1a8a2ae78da974aa7027479922d2a4ed5b.rst", "api/variable_host__transport__types_8h_1a8ab014894ee593ada228c8818c805a4d.rst", "api/variable_host__transport__types_8h_1a8d2ec4d8224fab4223a6ce5fc880c88d.rst", "api/variable_host__transport__types_8h_1a8f226ce7aa0c4a47706b2a629f1cf5ce.rst", "api/variable_host__transport__types_8h_1a8fb2926c1358556d1058310c1d227952.rst", "api/variable_host__transport__types_8h_1a95a9dd3cb2f96cd681020c4175f5902c.rst", "api/variable_host__transport__types_8h_1a9631d2b89caebed04c53e43e98201aad.rst", "api/variable_host__transport__types_8h_1a9edcde0584b2ab6c4a7b49eaec49d237.rst", "api/variable_host__transport__types_8h_1aa3169da96d07ddb56442e1f0219ee59d.rst", "api/variable_host__transport__types_8h_1aa3f8ec4fce5cd7645a4127ff548590e5.rst", "api/variable_host__transport__types_8h_1aa6fa942a4aba55e671401efab0301f68.rst", "api/variable_host__transport__types_8h_1aaa2b01a5565390d6b8b8c7d4ee0ce0f1.rst", "api/variable_host__transport__types_8h_1aae75aa115123d74b76fa6949898584df.rst", "api/variable_host__transport__types_8h_1aafbd65a18c302f1f153b181db80ba8fa.rst", "api/variable_host__transport__types_8h_1ab0f4f73bd1e609a0b0392110aa6c4464.rst", "api/variable_host__transport__types_8h_1ab164ff21553b40079f884e7adaaab71d.rst", "api/variable_host__transport__types_8h_1ab2c6b8aaf5dd07f6847367f8a3cc672a.rst", "api/variable_host__transport__types_8h_1ab51e73071fda70a7ca13ad49de54eecb.rst", "api/variable_host__transport__types_8h_1ab616bd38ef9b5bce0700f2f719982afe.rst", "api/variable_host__transport__types_8h_1ab80ee75e48bcff60590ab85dc2ba2e4d.rst", "api/variable_host__transport__types_8h_1abd938edbea27ed4f351dc19d69039222.rst", "api/variable_host__transport__types_8h_1ac27141d7b944f1726d103e1d70bfa42c.rst", "api/variable_host__transport__types_8h_1ac3cae26f5f4fd77505c5cc684f000f8b.rst", "api/variable_host__transport__types_8h_1ac53569ade48ebfbf6590f1a188c8ee3d.rst", "api/variable_host__transport__types_8h_1ac6b9dfb6a3df289aea5e75fed74f8ccd.rst", "api/variable_host__transport__types_8h_1ac921e372c73f74e47f9df8105d6c832e.rst", "api/variable_host__transport__types_8h_1acb3a6c3ab101017407767420a55c7bce.rst", "api/variable_host__transport__types_8h_1acb54ffe6a95d10689128b03eb2a77f42.rst", "api/variable_host__transport__types_8h_1ad0c6e0653d68ec75dcc18d34b1986578.rst", "api/variable_host__transport__types_8h_1ad29f0fac76adc64bdbcded7ac12ce9c4.rst", "api/variable_host__transport__types_8h_1ad2e989c2ea23725ced9541f9197d765e.rst", "api/variable_host__transport__types_8h_1ad7b7907f64bd95e2b8283658736eca43.rst", "api/variable_host__transport__types_8h_1ad81494366a13a54bd6e83460780941f1.rst", "api/variable_host__transport__types_8h_1ad861ce2862ef9cba24b3b950b4dd37e2.rst", "api/variable_host__transport__types_8h_1ad9b66a7dcec99e0385035d4188cb45ce.rst", "api/variable_host__transport__types_8h_1adac81cc43b06ba05d7073c02622fc9ae.rst", "api/variable_host__transport__types_8h_1add2e75a6243ec44bd1c9f647932d0807.rst", "api/variable_host__transport__types_8h_1addb6b9f37d6d12114c447e56d7a94910.rst", "api/variable_host__transport__types_8h_1ade1fc93f9f2ad74d50761aabcbb8c58f.rst", "api/variable_host__transport__types_8h_1ae0f29bf62bce92bee634f1f921b9f01e.rst", "api/variable_host__transport__types_8h_1ae1c2d516777e6b42af0d281c9ecc7375.rst", "api/variable_host__transport__types_8h_1ae2ce2ef8f1ae200a09f2d551d634f569.rst", "api/variable_host__transport__types_8h_1ae2f416b0a34b7beb4ed3873d791ac393.rst", "api/variable_host__transport__types_8h_1ae6ee9be053cfc09d38936dada346162d.rst", "api/variable_host__transport__types_8h_1aedecacea95ee55904c265c09a71a6b4c.rst", "api/variable_host__transport__types_8h_1af5029fb6db797d8d8aebb7a15533c0d0.rst", "api/variable_host__transport__types_8h_1af62d06fba8293c51e03074d4cb7e4585.rst", "api/variable_host__transport__types_8h_1af6a306b725a13c587236e4a61d4ea050.rst", "api/variable_host__transport__types_8h_1af77b1a54442f2443cf64a4766f916bcd.rst", "api/variable_host__transport__types_8h_1afc30d1e053db2002729a8af7567f1e8a.rst", "api/variable_host__transport__types_8h_1afd33b8606c3e10d7d0d0f5ebbe2b75ac.rst", "api/variable_host__transport__types_8h_1afda2aefc18d59926341018e82d875229.rst", "api/variable_ringbuffer__impl_8c_1aca726e74f3e7708930749e2813deb9bd.rst", "api/variable_ringbuffer__impl_8h_1a778026c0adaede26aff919edf6aa1de2.rst", "api/variable_sampling__impl_8c_1a927bf38d871c85f0d1e0ee9eaa1351d0.rst", "api/variable_sampling__types_8h_1a41f6ba40d43e75548e08865d412b1ef4.rst", "api/variable_sampling__types_8h_1abd938edbea27ed4f351dc19d69039222.rst", "api/variable_sampling__types_8h_1ae1c2d516777e6b42af0d281c9ecc7375.rst", "api/variable_sampling__types_8h_1af77b1a54442f2443cf64a4766f916bcd.rst", "api/variable_test_8c_1a325819a8e492ac69542e8b31705af6e9.rst", "index.rst", "readme.md", "readme-wireshark.md"], "titles": ["Define ADXL345_WATERMARK_LEVEL", "Define ADXL345_FIFO_ENTRIES", "Define ADXL345_HANDLE_INITIALIZER", "Define HOSTTRANSPORT_DECLARE_INITIALIZER", "Define MYSTRINGIZE0", "Define SAMPLING_DECLARE_INITIALIZER", "Define MYSTRINGIZE", "Define USER_DEBUG0_LOW", "Define USER_DEBUG1_TOGGLE", "Define USER_DEBUG0_HIGH", "Define USER_DEBUG1_LOW", "Define USER_DEBUG0_TOGGLE", "Define USER_DEBUG1_HIGH", "Define TRANSPORTTX_TRANSMIT_TX_DATA_CHUNK_BUFFER_BYTES", "Define SIZEOF_HEADER_INCL_PAYLOAD", "Define USER_LED0_OFF", "Define USER_LED0_ON", "Define USER_LED0_TOGGLE", "Define RINGBUFFER_STORAGE_ITEM_SIZE_BYTES", "Define RINGBUFFER_DECLARE_INITIALIZER", "Define RINGBUFFER_STORAGE_SIZE_BYTES", "Define RINGBUFFER_INDEX_INITIALIZER", "Define RINGBUFFER_INITIALIZER", "Define SAMPLING_NUM_SAMPLES_READ_AT_ONCE", "Define DECLARE_BUFFER_CAPACITY3", "Define DECLARE_BUFFER_CAPACITY65535", "Define DECLARE_BUFFER_CAPACITY1", "Define TRANSPORTTX_TRANSMIT_ACCELERATION_BUFFER_BYTES", "Define UNITY_INCLUDE_EXEC_TIME", "Define VERSION_MAJOR", "Define VERSION", "Define VERSION_PATCH", "Define VERSION_MINOR", "Directory Inc", "Directory fw", "Directory Src", "Directory fw", "Directory lib", "Directory adxl345", "Directory src", "Directory controller", "Directory src", "Directory host_transport", "Directory src", "Directory ringbuffer", "Directory src", "Directory sampling", "Directory src", "Directory test", "Directory test_ringbuffer", "Directory utils", "Enum Adxl345Flags_IntEnable_Inactivity", "Enum Adxl345Flags_FifoStatus_FifoTrig", "Enum Adxl345Flags_DataFormat_FullResBit", "Enum Adxl345Flags_IntEnable_Overrun", "Enum Adxl345Flags_FifoCtl_Trigger", "Enum Adxl345Flags_IntMap_SingleTap", "Enum Adxl345Flags_PowerCtl_AutoSleep", "Enum Adxl345Flags_PowerCtl_Link", "Enum Adxl345Flags_IntMap_DoubleTap", "Enum Adxl345Flags_IntMap_Inactivity", "Enum Adxl345Flags_IntMap_DataReady", "Enum Adxl345Flags_BwRate_LowPower", "Enum Adxl345Flags_DataFormat_IntInvert", "Enum Adxl345Flags_FifoCtl_FifoMode", "Enum Adxl345Flags_PowerCtl_Wakeup", "Enum Adxl345Flags_IntMap_FreeFall", "Enum Adxl345Flags_DataFormat_Range", "Enum Adxl345Flags_IntEnable_DoubleTap", "Enum Adxl345Flags_BwRate_Rate", "Enum Adxl345Flags_IntMap_Activity", "Enum Adxl345Flags_IntEnable_Watermark", "Enum Adxl345Flags_DataFormat_SelfTest", "Enum Adxl345Flags_IntEnable_DataReady", "Enum Adxl345Flags_IntEnable_SingleTap", "Enum Adxl345Flags_IntMap_Watermark", "Enum Adxl345Flags_IntEnable_Activity", "Enum Adxl345Flags_IntMap_Overrun", "Enum Adxl345Flags_PowerCtl_Sleep", "Enum Adxl345Flags_PowerCtl_Measure", "Enum Adxl345Flags_DataFormat_Justify", "Enum Adxl345Flags_IntEnable_FreeFall", "Enum Adxl345Flags_DataFormat_SpiBit", "Enum Adxl345Flags_Address", "Enum Adxl345Spi_Cs", "Enum Adxl345Spi_RwFlags", "Enum HostTransport_Status", "Enum TransportRx_SetOutputDataRate_Rate", "Enum TransportRx_SetScale_Scale", "Enum TransportTx_FaultCode", "Enum Transport_HeaderId", "Enum TransportRx_SetRange_Range", "File adxl345_transport_impl.h", "File controller_impl.h", "File debug.h", "File host_transport_impl.h", "File led.h", "File ringbuffer_impl.h", "File sampling_impl.h", "File version.h", "File adxl345_transport_impl.c", "File controller_impl.c", "File host_transport_impl.c", "File ringbuffer_impl.c", "File sampling_impl.c", "File version.c", "File adxl345.c", "File adxl345.h", "File adxl345_flags.h", "File adxl345_register.h", "File adxl345_spi_types.h", "File adxl345_transport_types.h", "File controller.c", "File controller.h", "File from_host_transport.c", "File from_host_transport.h", "File host_transport.c", "File host_transport.h", "File host_transport_types.h", "File to_host_transport.c", "File to_host_transport.h", "File ringbuffer.c", "File ringbuffer.h", "File sampling.c", "File sampling.h", "File sampling_types.h", "File test.c", "File unity_config.h", "File run-tests.h", "Function Adxl345_setPowerCtlMeasure(struct Adxl345_Handle *)", "Function Adxl345_setRange(struct Adxl345_Handle *, uint8_t)", "Function Adxl345_getAcceleration(struct Adxl345_Handle *, struct Adxl345Transport_Acceleration *)", "Function writeRegister", "Function Adxl345_getRange(struct Adxl345_Handle *, enum Adxl345Flags_DataFormat_Range *)", "Function readRegister", "Function Adxl345_init(struct Adxl345_Handle *)", "Function Adxl345_setPowerCtlStandby(struct Adxl345_Handle *)", "Function Adxl345_setScale(struct Adxl345_Handle *, uint8_t)", "Function Adxl345_setOutputDataRate(struct Adxl345_Handle *, uint8_t)", "Function Adxl345_getScale(struct Adxl345_Handle *, enum Adxl345Flags_DataFormat_FullResBit *)", "Function Adxl345_getOutputDataRate(struct Adxl345_Handle *, enum Adxl345Flags_BwRate_Rate *)", "Function Adxl345_setPowerCtlMeasure(struct Adxl345_Handle *)", "Function Adxl345_setRange(struct Adxl345_Handle *, uint8_t)", "Function Adxl345_getAcceleration(struct Adxl345_Handle *, struct Adxl345Transport_Acceleration *)", "Function Adxl345_getRange(struct Adxl345_Handle *, enum Adxl345Flags_DataFormat_Range *)", "Function Adxl345_init(struct Adxl345_Handle *)", "Function Adxl345_setPowerCtlStandby(struct Adxl345_Handle *)", "Function Adxl345_setScale(struct Adxl345_Handle *, uint8_t)", "Function Adxl345_setOutputDataRate(struct Adxl345_Handle *, uint8_t)", "Function Adxl345_getScale(struct Adxl345_Handle *, enum Adxl345Flags_DataFormat_FullResBit *)", "Function Adxl345_getOutputDataRate(struct Adxl345_Handle *, enum Adxl345Flags_BwRate_Rate *)", "Function __attribute__((packed))", "Function ncsClear", "Function receiveFrame", "Function Adxl345TransportImpl_doTransmitFrameImpl(const union Adxl345Transport_TxFrame *, uint8_t, enum Adxl345Spi_Cs, enum Adxl345Spi_RwFlags)", "Function ncsSet", "Function Adxl345TransportImpl_doTransmitReceiveFrameImpl(const union Adxl345Transport_TxFrame *, union Adxl345Transport_RxFrame *, uint8_t)", "Function Adxl345TransportImpl_doTransmitFrameImpl(const union Adxl345Transport_TxFrame *, uint8_t, enum Adxl345Spi_Cs, enum Adxl345Spi_RwFlags)", "Function Adxl345TransportImpl_doTransmitReceiveFrameImpl(const union Adxl345Transport_TxFrame *, union Adxl345Transport_RxFrame *, uint8_t)", "Function __attribute__((packed))", "Function sampling_onBufferOverflowCb", "Function sampling_onSamplingFinishedCb", "Function sampling_doEnableSensorImpl", "Function host_onRequestGetUptime", "Function host_onRequestGetBufferStatus", "Function fault_onNmiFaultHandler", "Function sampling_doDisableSensorImpl", "Function ControllerImpl_init", "Function sampling_onFifoOverflowCb", "Function sampling_doForwardAccelerationBufferImpl", "Function sampling_clearFifoWatermark", "Function ControllerImpl_transmitPendingResponses", "Function host_onRequestSetRange", "Function sampling_setFifoOverflow", "Function sampling_on5usTimerExpired", "Function host_onRequestSamplingStart", "Function sensor_doGetOutputDataRateImpl", "Function sensor_doInitImpl", "Function sensor_doGetScaleImpl", "Function sensor_doGetRangeImpl", "Function fault_onErrorHandler", "Function host_onRequestGetOutputDataRate", "Function fault_onBusFaultHandler", "Function sampling_onSamplingStoppedCb", "Function host_doTakeBytes", "Function host_onRequestSetOutputDatatRate", "Function host_onRequestSamplingStop", "Function host_onRequestGetScale", "Function __attribute__((packed))", "Function ControllerImpl_device_checkReboot", "Function ControllerImpl_loop", "Function ControllerImpl_device_requestAsyncReboot", "Function host_onRequestGetRange", "Function fault_onUsageFaultHandler", "Function fault_onHardFaultHandler", "Function sampling_onTransmissionErrorCb", "Function sampling_doFetchSensorAccelerationImpl", "Function sampling_onSamplingStartedCb", "Function sampling_onSamplingAbortedCb", "Function host_onRequestGetFirmwareVersion", "Function host_onRequestGetDeviceSetup", "Function host_onRequestSetScale", "Function sampling_setFifoWatermark", "Function TransportRx_Process(struct HostTransport_Handle *, const uint8_t *, uint16_t)", "Function TransportRx_Process(struct HostTransport_Handle *, const uint8_t *, uint16_t)", "Function Transport_resetBuffer(struct HostTransport_Handle *)", "Function Transport_resetBuffer(struct HostTransport_Handle *)", "Function HostTransportImpl_doTransmitImpl(uint8_t *, uint16_t)", "Function HostTransportImpl_onTakeReceivedImpl(const uint8_t *)", "Function HostTransportImpl_isTransmitBusyImpl()", "Function HostTransportImpl_doTransmitImpl(uint8_t *, uint16_t)", "Function HostTransportImpl_onTakeReceivedImpl(const uint8_t *)", "Function HostTransportImpl_isTransmitBusyImpl()", "Function __attribute__((__packed__))", "Function __attribute__((packed))", "Function Ringbuffer_init(struct Ringbuffer *, uint8_t *, uint16_t, uint8_t)", "Function Ringbuffer_reset(struct Ringbuffer *)", "Function Ringbuffer_maxCapacityUsed(const struct Ringbuffer *)", "Function Ringbuffer_take(struct Ringbuffer *, void *)", "Function Ringbuffer_isFull(const struct Ringbuffer *)", "Function Ringbuffer_itemSizeBytes(const struct Ringbuffer *)", "Function Ringbuffer_takeCount(const struct Ringbuffer *)", "Function advanceBegin", "Function RingbufferIndex_init(struct Ringbuffer_Index *, uint16_t, uint8_t)", "Function Ringbuffer_isEmpty(const struct Ringbuffer *)", "Function Ringbuffer_put(struct Ringbuffer *, const void *)", "Function advanceEnd", "Function itemAtIndex", "Function Ringbuffer_itemsCount(const struct Ringbuffer *)", "Function Ringbuffer_putCount(const struct Ringbuffer *)", "Function Ringbuffer_init(struct Ringbuffer *, uint8_t *, uint16_t, uint8_t)", "Function Ringbuffer_reset(struct Ringbuffer *)", "Function Ringbuffer_maxCapacityUsed(const struct Ringbuffer *)", "Function Ringbuffer_take(struct Ringbuffer *, void *)", "Function Ringbuffer_isFull(const struct Ringbuffer *)", "Function Ringbuffer_itemSizeBytes(const struct Ringbuffer *)", "Function Ringbuffer_takeCount(const struct Ringbuffer *)", "Function RingbufferIndex_init(struct Ringbuffer_Index *, uint16_t, uint8_t)", "Function Ringbuffer_isEmpty(const struct Ringbuffer *)", "Function Ringbuffer_put(struct Ringbuffer *, const void *)", "Function Ringbuffer_itemsCount(const struct Ringbuffer *)", "Function Ringbuffer_putCount(const struct Ringbuffer *)", "Function main", "Function Sampling_fetchForward(struct Sampling_Handle *)", "Function checkStartRequest", "Function transmitPending", "Function Sampling_setFifoWatermark(struct Sampling_Handle *)", "Function isNSamplesReadEnabled", "Function Sampling_clearFifoWatermark(struct Sampling_Handle *)", "Function checkStopRequest", "Function Sampling_start(struct Sampling_Handle *, uint16_t)", "Function Sampling_stop(struct Sampling_Handle *)", "Function Sampling_on5usTimerExpired(struct Sampling_Handle *)", "Function Sampling_setFifoOverflow(struct Sampling_Handle *)", "Function Sampling_fetchForward(struct Sampling_Handle *)", "Function Sampling_setFifoWatermark(struct Sampling_Handle *)", "Function Sampling_clearFifoWatermark(struct Sampling_Handle *)", "Function Sampling_start(struct Sampling_Handle *, uint16_t)", "Function Sampling_stop(struct Sampling_Handle *)", "Function Sampling_on5usTimerExpired(struct Sampling_Handle *)", "Function Sampling_setFifoOverflow(struct Sampling_Handle *)", "Function SamplingImpl_doWaitDelay5usImpl(struct Sampling_Handle *)", "Function SamplingImpl_doWaitDelay5usImpl(struct Sampling_Handle *)", "Function __attribute__((packed))", "Function tests", "Function __attribute__((packed))", "Function test_cap3_overflow", "Function test_cap1_empty_isEmptyNotFull", "Function test_cap3_full_isNotEmptyButFull", "Function setUp", "Function test_cap3_putAndOverflow", "Function test_cap3_empty_takeItem", "Function tearDown", "Function test_cap65535_movingWindowBeyondLimits", "Function test_cap3_notEmptyNotFull_takeItem", "Function test_cap65535_beyondLimitsAndAbove", "Function test_cap3_notEmptyNotFull_isNotEmptyNotFull", "Function test_cap3_full_takeItem", "Function test_cap3_putAndTakeNoOverflow", "Function test_cap3_empty_isEmptyNotFull", "Function test_cap1_full", "Function TransportTx_TxOutputDataRate(struct HostTransport_Handle *, uint8_t)", "Function TransportTx_TxFifoOverflow(struct HostTransport_Handle *)", "Function pushToRingbuffer", "Function TransportTx_TxBufferOverflow(struct HostTransport_Handle *)", "Function TransportTx_TxSamplingFinished(struct HostTransport_Handle *)", "Function TransportTx_TxSamplingAborted(struct HostTransport_Handle *)", "Function TransportTx_TxAccelerationBuffer(struct HostTransport_Handle *, const struct Transport_Acceleration *, uint8_t, uint16_t)", "Function TransportTx_TxScale(struct HostTransport_Handle *, uint8_t)", "Function TransportTx_TxTransmissionError(struct HostTransport_Handle *)", "Function transmitAccelerationBuffered", "Function TransportTx_TxUptime(struct HostTransport_Handle *, uint32_t)", "Function TransportTx_TxSamplingSetup(struct HostTransport_Handle *, uint8_t, uint8_t, uint8_t)", "Function isTransmitBusy", "Function transmit", "Function TransportTx_TxFirmwareVersion(struct HostTransport_Handle *, uint8_t, uint8_t, uint8_t)", "Function TransportTx_TxSamplingStopped(struct HostTransport_Handle *)", "Function TransportTx_TxFault(struct HostTransport_Handle *, enum TransportTx_FaultCode)", "Function TransportTx_TxSamplingStarted(struct HostTransport_Handle *, uint16_t)", "Function popDataFromRingbuffer", "Function TransportTx_TxBufferStatus(struct HostTransport_Handle *, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t)", "Function TransportTx_TxRange(struct HostTransport_Handle *, uint8_t)", "Function TransportTx_TxOutputDataRate(struct HostTransport_Handle *, uint8_t)", "Function TransportTx_TxFifoOverflow(struct HostTransport_Handle *)", "Function TransportTx_TxBufferOverflow(struct HostTransport_Handle *)", "Function TransportTx_TxSamplingFinished(struct HostTransport_Handle *)", "Function TransportTx_TxSamplingAborted(struct HostTransport_Handle *)", "Function TransportTx_TxAccelerationBuffer(struct HostTransport_Handle *, const struct Transport_Acceleration *, uint8_t, uint16_t)", "Function TransportTx_TxScale(struct HostTransport_Handle *, uint8_t)", "Function TransportTx_TxTransmissionError(struct HostTransport_Handle *)", "Function TransportTx_TxUptime(struct HostTransport_Handle *, uint32_t)", "Function TransportTx_TxSamplingSetup(struct HostTransport_Handle *, uint8_t, uint8_t, uint8_t)", "Function TransportTx_TxFirmwareVersion(struct HostTransport_Handle *, uint8_t, uint8_t, uint8_t)", "Function TransportTx_TxSamplingStopped(struct HostTransport_Handle *)", "Function TransportTx_TxFault(struct HostTransport_Handle *, enum TransportTx_FaultCode)", "Function TransportTx_TxSamplingStarted(struct HostTransport_Handle *, uint16_t)", "Function TransportTx_TxBufferStatus(struct HostTransport_Handle *, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t)", "Function TransportTx_TxRange(struct HostTransport_Handle *, uint8_t)", "Library API", "Program Listing for File adxl345_transport_impl.h", "Program Listing for File controller_impl.h", "Program Listing for File debug.h", "Program Listing for File host_transport_impl.h", "Program Listing for File led.h", "Program Listing for File ringbuffer_impl.h", "Program Listing for File sampling_impl.h", "Program Listing for File version.h", "Program Listing for File adxl345_transport_impl.c", "Program Listing for File controller_impl.c", "Program Listing for File host_transport_impl.c", "Program Listing for File ringbuffer_impl.c", "Program Listing for File sampling_impl.c", "Program Listing for File version.c", "Program Listing for File adxl345.c", "Program Listing for File adxl345.h", "Program Listing for File adxl345_flags.h", "Program Listing for File adxl345_register.h", "Program Listing for File adxl345_spi_types.h", "Program Listing for File adxl345_transport_types.h", "Program Listing for File controller.c", "Program Listing for File controller.h", "Program Listing for File from_host_transport.c", "Program Listing for File from_host_transport.h", "Program Listing for File host_transport.c", "Program Listing for File host_transport.h", "Program Listing for File host_transport_types.h", "Program Listing for File to_host_transport.c", "Program Listing for File to_host_transport.h", "Program Listing for File ringbuffer.c", "Program Listing for File ringbuffer.h", "Program Listing for File sampling.c", "Program Listing for File sampling.h", "Program Listing for File sampling_types.h", "Program Listing for File test.c", "Program Listing for File unity_config.h", "Program Listing for File run-tests.h", "Struct Adxl345Register_BwRate", "Struct Adxl345Register_DataFormat", "Struct Adxl345Register_FifoCtl", "Struct Adxl345Register_FifoStatus", "Struct Adxl345Register_IntEnable", "Struct Adxl345Register_IntMap", "Struct Adxl345Register_PowerCtl", "Struct Adxl345Transport_Acceleration", "Struct Adxl345Transport_DataPaddedRegister", "Struct Adxl345_Handle", "Struct Controller_Handle", "Struct Controller_Host", "Struct Controller_Sampling", "Struct Controller_Sensor", "Struct Foo", "Struct HostTransport_FromHostApi", "Struct HostTransport_Handle", "Struct HostTransport_ToHostApi", "Struct Ringbuffer", "Struct Ringbuffer_Index", "Struct Sampling_Acceleration", "Struct Sampling_Handle", "Struct Sampling_State", "Struct TransportFrame", "Struct TransportRx_DeviceReboot", "Struct TransportRx_GetBufferStatus", "Struct TransportRx_GetDeviceSetup", "Struct TransportRx_GetFirmwareVersion", "Struct TransportRx_GetOutputDataRate", "Struct TransportRx_GetRange", "Struct TransportRx_GetScale", "Struct TransportRx_GetUptime", "Struct TransportRx_SamplingStart", "Struct TransportRx_SamplingStop", "Struct TransportRx_SetOutputDataRate", "Struct TransportRx_SetRange", "Struct TransportRx_SetScale", "Struct TransportTx_Acceleration", "Struct TransportTx_BufferOverflow", "Struct TransportTx_BufferStatus", "Struct TransportTx_DeviceSetup", "Struct TransportTx_Fault", "Struct TransportTx_FifoOverflow", "Struct TransportTx_FirmwareVersion", "Struct TransportTx_OutputDataRate", "Struct TransportTx_Range", "Struct TransportTx_SamplingAborted", "Struct TransportTx_SamplingFinished", "Struct TransportTx_SamplingStarted", "Struct TransportTx_SamplingStopped", "Struct TransportTx_Scale", "Struct TransportTx_TransmissionError", "Struct TransportTx_Uptime", "Struct Transport_Acceleration", "Struct Transport_Header", "Struct Transport_ResponseFlags", "Struct TwoBytes", "Full API", "Union Adxl345Register", "Union Adxl345Transport_RxFrame", "Union Adxl345Transport_TxFrame", "Union TransportRxFrame", "Union TransportTxFrame", "Variable lowPower", "Variable wakeup", "Variable asPowerControl", "Variable asFifoCtl", "Variable link", "Variable rate", "Variable _zeroD4", "Variable watermark", "Variable fifoMode", "Variable asBwRate", "Variable spi", "Variable _zeroD7", "Variable inactivity", "Variable dataReady", "Variable measure", "Variable justify", "Variable _zeroD6", "Variable singleTap", "Variable freeFall", "Variable autoSleep", "Variable activity", "Variable overrun", "Variable range", "Variable asDataFormat", "Variable fifoTrig", "Variable intInvert", "Variable doubleTap", "Variable selfTest", "Variable asFifoStatus", "Variable asIntMap", "Variable _zeroD5", "Variable asIntEnable", "Variable trigger", "Variable sleep", "Variable samples", "Variable entries", "Variable fullRes", "Variable byte2", "Variable byte1", "Variable asWord", "Variable asPaddedRegister", "Variable asRegister", "Variable asAddress", "Variable _padding8", "Variable asBytes", "Variable z", "Variable x", "Variable asAcceleration", "Variable y", "Variable sampling_responseBufferOverflow", "Variable pendingResponses", "Variable host_responseGetOutputDataRate", "Variable sampling_responseSamplingStopped", "Variable host_responseGetUptime", "Variable host_responseGetBufferStatus", "Variable sampling_responseFifoOverflow", "Variable rebootRequested", "Variable sampling_responseSamplingFinished", "Variable host_responseGetScale", "Variable sampling_responseSamplingAborted", "Variable _reserved_1", "Variable controllerHandle", "Variable host_responseGetRange", "Variable sampling_responseTransmissionError", "Variable _reserved_0", "Variable host_responseGetFirmwareVersion", "Variable host_responseGetDeviceSetup", "Variable controllerHandle", "Variable controllerHandle", "Variable patch", "Variable TransportRx_SetOutputDataRate_Rate3200", "Variable asGetBufferStatus", "Variable Transport_HeaderId_Rx_SetRange", "Variable TransportRx_SetScale_Scale_full4mg", "Variable Transport_HeaderId_Tx_Uptime", "Variable TransportRx_SetOutputDataRate_Rate_800", "Variable Transport_HeaderId_Rx_GetUptime", "Variable TransportRx_SetRange_Range_16g", "Variable asSamplingStarted", "Variable asFirmwareVersion", "Variable rate", "Variable Transport_HeaderId_Tx_SamplingAborted", "Variable Transport_HeaderId_Rx_DeviceReboot", "Variable Transport_HeaderId_Rx_GetFirmwareVersion", "Variable sizeBytes", "Variable Transport_HeaderId_Tx_SamplingFinished", "Variable asSamplingStopped", "Variable Transport_HeaderId_Tx_Acceleration", "Variable Transport_HeaderId_Rx_SamplingStart", "Variable asAcceleration", "Variable TransportRx_SetOutputDataRate_Rate_400", "Variable largestTxChunkBytes", "Variable Transport_HeaderId_Tx_BufferOverflow", "Variable asBufferStatus", "Variable Transport_HeaderId_Tx_Range", "Variable asSamplingFinished", "Variable TransportRx_SetOutputDataRate_Rate_100", "Variable Transport_HeaderId_Rx_GetScale", "Variable Transport_HeaderId_Rx_SamplingStop", "Variable asFifoOverflow", "Variable code", "Variable asDeviceSetup", "Variable asGetRange", "Variable Transport_HeaderId_Tx_FifoOverflow", "Variable major", "Variable TransportTx_FaultCode_ErrorHandler", "Variable scale", "Variable outputDataRate", "Variable TransportRx_SetScale_Scale_10bit", "Variable putCount", "Variable TransportRx_SetRange_Range_8g", "Variable asSetRange", "Variable max_samples_count", "Variable asRxFrame", "Variable TransportTx_FaultCode_NmiHandler", "Variable TransportRx_SetRange_Range_2g", "Variable asSamplingAborted", "Variable index", "Variable Transport_HeaderId_Tx_SamplingStarted", "Variable TransportTx_FaultCode_UsageFaultHandler", "Variable Transport_HeaderId_Tx_Fault", "Variable TransportTx_FaultCode_HardFaultHandler", "Variable asRange", "Variable Transport_HeaderId_Rx_GetBufferStatus", "Variable asSamplingStart", "Variable Transport_HeaderId_Tx_FirmwareVersion", "Variable asFault", "Variable range", "Variable asSetScale", "Variable asTransmissionError", "Variable asDeviceReboot", "Variable id", "Variable Transport_HeaderId_Tx_OutputDataRate", "Variable asTxFrame", "Variable Transport_HeaderId_Tx_Scale", "Variable asOutputDataRate", "Variable takeCount", "Variable Transport_HeaderId_Rx_SetScale", "Variable asScale", "Variable TransportRx_SetOutputDataRate_Rate1600", "Variable z", "Variable capacityUsedMax", "Variable &#64;2", "Variable Transport_HeaderId_Tx_BufferStatus", "Variable Transport_HeaderId_Tx_TransmissionError", "Variable asSamplingStop", "Variable capacityTotal", "Variable Transport_HeaderId_Rx_SetOutputDataRate", "Variable asGetScale", "Variable asGetUptime", "Variable Transport_HeaderId_Tx_SamplingStopped", "Variable Transport_HeaderId_Rx_GetDeviceSetup", "Variable asUptime", "Variable asSetOutputDataRate", "Variable TransportRx_SetRange_Range_4g", "Variable Transport_HeaderId_Rx_GetOutputDataRate", "Variable asGetDeviceSetup", "Variable TransportRx_SetOutputDataRate_Rate_50", "Variable header", "Variable Transport_HeaderId_Tx_DeviceSetup", "Variable x", "Variable asGetFirmwareVersion", "Variable minor", "Variable maxSamples", "Variable Transport_HeaderId_Rx_GetRange", "Variable elapsedMs", "Variable asGetOutputDataRate", "Variable values", "Variable y", "Variable asBufferOverflow", "Variable TransportTx_FaultCode_BusFaultHandler", "Variable TransportRx_SetOutputDataRate_Rate_200", "Variable ringbufferStorage", "Variable ringbufferStorage", "Variable controllerHandle", "Variable __attribute__", "Variable z", "Variable x", "Variable y", "Variable data", "Welcome to 3dpaxxel firmware documentation!", "Introduction", "Wireshark Dissector for 3DP Axxel"], "terms": {"sphinx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "pyproject": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "brows": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "repositori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600], "adxl345": [0, 1, 37, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 92, 100, 101, 113, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 154, 157, 319, 327, 328, 335, 336, 337, 338, 340, 345, 350, 352, 356, 357, 358, 359, 360, 361, 362, 363, 365, 413, 600], "h": [0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 32, 34, 39, 41, 43, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 114, 116, 119, 121, 123, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 204, 206, 210, 211, 212, 213, 214, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 254, 255, 256, 257, 258, 259, 260, 262, 263, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 327, 328, 329, 330, 331, 332, 333, 341, 343, 346, 348, 350, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 594, 595, 596, 597], "about": [0, 1, 324, 334, 346, 354], "75": [0, 1, 334], "fifo": [0, 1, 23, 124, 131, 143, 243, 246, 248, 253, 254, 255, 256, 260, 282, 303, 333, 334, 345, 347, 350, 351, 352, 398], "32": [1, 334, 354], "x": [1, 111, 118, 125, 318, 328, 334, 338, 345, 346, 352, 363, 376, 409], "y": [1, 111, 118, 125, 318, 328, 334, 338, 345, 346, 352, 363, 376, 409], "z": [1, 111, 118, 125, 318, 328, 334, 338, 345, 346, 352, 363, 376, 409], "2": [1, 118, 318, 333, 334, 336, 338, 345, 346, 353, 354, 412], "byte": [1, 85, 220, 235, 300, 316, 328, 334, 337, 338, 345, 346, 347, 349, 363, 375, 395, 412, 415, 416, 503], "each": [1, 90, 328, 334, 335, 345, 354, 600], "coordin": [1, 334], "watermark": [1, 23, 109, 124, 243, 246, 248, 254, 255, 256, 318, 328, 333, 334, 336, 350, 351, 352, 360, 361, 600], "configur": [1, 23, 136, 139, 146, 149, 292, 311, 334, 347, 352, 354, 600], "sensor": [1, 23, 107, 111, 113, 124, 133, 135, 136, 144, 145, 146, 243, 254, 281, 288, 292, 301, 302, 308, 311, 317, 318, 328, 333, 334, 335, 336, 338, 340, 345, 347, 351, 352, 363, 365, 366, 382, 384, 385, 386, 390, 391, 392, 400, 401, 405, 406, 409, 464, 465, 467, 559, 579, 587, 595, 596, 597, 600], "provid": [1, 334, 336, 338, 354, 412, 414, 600], "entri": [1, 109, 318, 334, 336, 359], "recommend": [1, 334, 354], "level": [1, 23, 328, 334, 352], "i": [1, 133, 139, 144, 149, 151, 154, 157, 159, 188, 203, 204, 205, 206, 213, 214, 218, 219, 224, 225, 233, 234, 238, 239, 243, 250, 254, 257, 263, 265, 287, 307, 319, 327, 328, 334, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 373, 374, 403, 405, 510, 600, 601], "set": [1, 154, 156, 157, 158, 243, 246, 250, 253, 254, 255, 257, 260, 319, 327, 328, 334, 345, 351, 354, 382, 390, 391, 392, 396, 600], "too": [1, 334], "high": [1, 327, 334, 350], "might": [1, 135, 145, 334, 354], "leav": [1, 84, 334, 337, 354], "littl": [1, 334], "room": [1, 334], "buffer": [1, 23, 203, 204, 207, 208, 210, 211, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 250, 251, 257, 258, 287, 300, 307, 316, 322, 327, 328, 329, 334, 341, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 373, 374, 375, 381, 395, 503, 565], "until": [1, 250, 257, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 334, 344, 346, 347, 348, 351, 373], "respect": [1, 246, 248, 252, 253, 255, 256, 259, 260, 328, 334, 336, 345, 351, 414, 417, 418], "routin": [1, 334, 354], "clear": [1, 154, 156, 157, 158, 248, 252, 256, 259, 319, 327, 328, 334, 348, 350, 351], "thi": [1, 154, 156, 157, 158, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 328, 334, 340, 344, 345, 346, 347, 354, 366, 373, 379, 403, 405, 600], "increas": [1, 334], "probabl": [1, 334], "overflow": [1, 243, 254, 282, 303, 334, 345, 347, 351, 353, 405], "which": [1, 133, 144, 328, 334, 354, 600], "assert": [1, 107, 110, 111, 118, 334, 337, 338, 345, 353, 354, 600], "anywai": [1, 334], "adxl345_transport_impl": [2, 34, 36, 101, 110, 111, 152, 153, 154, 155, 156, 157, 158, 328, 413], "controller_impl": [3, 4, 5, 6, 34, 36, 92, 95, 96, 97, 98, 99, 107, 108, 111, 113, 115, 118, 120, 124, 125, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 411, 413, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486], "c": [3, 4, 5, 6, 24, 25, 26, 36, 39, 41, 43, 45, 47, 49, 92, 94, 95, 96, 97, 98, 99, 107, 108, 110, 111, 113, 115, 117, 118, 120, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 336, 338, 345, 351, 354, 370, 411, 413, 414, 415, 417, 418, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 591, 593, 598, 600], "doxygendefin": [3, 4, 5, 6, 24, 25, 26], "cannot": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "find": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 346, 469, 475], "doxygen": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "xml": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "output": [3, 4, 5, 6, 24, 25, 26, 87, 132, 134, 140, 150, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 218, 222, 226, 227, 233, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 290, 292, 293, 294, 299, 302, 311, 334, 335, 345, 347, 349, 354, 469, 475, 600], "project": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 354, 469, 475, 600], "my": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "proj": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "from": [3, 4, 5, 6, 23, 24, 25, 26, 111, 114, 115, 119, 120, 124, 131, 132, 134, 143, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 218, 222, 226, 227, 233, 243, 244, 245, 247, 249, 254, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 327, 328, 334, 338, 341, 342, 345, 346, 347, 349, 350, 351, 352, 354, 363, 365, 395, 405, 409, 464, 465, 467, 469, 475, 559, 579, 587, 595, 596, 597, 600, 601], "directori": [3, 4, 5, 6, 24, 25, 26, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "_gen_doxygen_doc": [3, 4, 5, 6, 24, 25, 26, 132, 134, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 222, 226, 227, 244, 245, 247, 249, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299, 469, 475], "debug": [7, 8, 9, 10, 11, 12, 34, 119, 346, 413, 600], "0": [9, 16, 154, 156, 157, 158, 218, 225, 228, 233, 239, 240, 243, 250, 254, 257, 287, 307, 319, 321, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 337, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 379, 527], "pin": [9, 12, 94, 96, 321, 323, 350], "pa1": [9, 321, 600], "1": [12, 151, 159, 188, 213, 214, 263, 265, 321, 326, 327, 328, 333, 336, 345, 346, 348, 353, 354], "pb0": [12, 321, 600], "host_transport": [13, 37, 43, 86, 102, 113, 122, 205, 206, 329, 340, 341, 342, 345, 346, 347, 371, 372, 373, 413], "host_transport_typ": [14, 43, 87, 88, 89, 90, 91, 97, 101, 102, 114, 119, 213, 214, 324, 328, 329, 341, 346, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 417, 418, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590], "payloadtyp": [14, 345], "comput": [14, 345], "size": [14, 154, 156, 157, 158, 220, 235, 287, 300, 307, 316, 319, 327, 328, 344, 345, 347, 349, 354, 373, 375, 395, 503, 510], "packag": [14, 90, 203, 204, 282, 285, 286, 296, 298, 303, 305, 306, 313, 315, 342, 345, 347, 379, 403, 405, 410, 600, 601], "name": [14, 151, 159, 188, 213, 214, 263, 265, 345], "header": [14, 90, 118, 203, 204, 318, 329, 341, 342, 345, 346, 354, 379, 410], "type": [14, 90, 111, 328, 336, 338, 345, 346, 349, 354, 374, 414, 415, 417, 418], "led": [15, 16, 17, 34, 101, 328, 413], "pc13": [16, 323, 600], "ringbuffer_impl": [18, 19, 20, 21, 22, 34, 36, 101, 118, 328, 413, 591, 592], "capac": [21, 22, 217, 219, 223, 232, 234, 237, 300, 316, 318, 324, 345, 347, 348, 349, 374, 375, 395, 565], "item_size_byt": [21, 22, 324], "storage_nam": [22, 324], "sampling_typ": [23, 47, 101, 104, 107, 113, 123, 263, 328, 331, 340, 350, 376, 377, 378, 413, 594, 595, 596, 597], "how": [23, 352, 354], "mani": [23, 352], "sampl": [23, 37, 47, 98, 101, 109, 113, 205, 206, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 285, 286, 296, 298, 300, 305, 306, 313, 315, 316, 318, 325, 328, 333, 336, 340, 344, 345, 346, 347, 352, 358, 366, 368, 373, 388, 389, 393, 395, 402, 403, 404, 405, 407, 409, 413, 510, 560, 600], "can": [23, 328, 346, 352, 354, 600], "maxim": [23, 352], "read": [23, 85, 131, 143, 154, 156, 157, 158, 243, 254, 319, 328, 334, 337, 350, 351, 352, 365, 600], "onc": [23, 300, 316, 319, 320, 321, 322, 323, 324, 325, 326, 328, 334, 335, 336, 337, 338, 340, 342, 344, 345, 347, 349, 351, 352, 355, 373, 395, 510], "must": [23, 90, 203, 204, 328, 338, 342, 344, 345, 346, 349, 350, 352, 354, 373, 374, 379, 600], "less": [23, 352, 354], "than": [23, 352, 354], "equal": [23, 352, 354], "beyond": [23, 352], "test": [24, 25, 26, 49, 50, 122, 219, 224, 234, 238, 242, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 318, 349, 354, 370, 413, 598, 600], "to_host_transport": [27, 43, 94, 101, 117, 118, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 328, 413], "unity_config": [28, 48, 413], "version": [29, 31, 32, 34, 36, 101, 295, 312, 318, 328, 345, 347, 383, 399, 413, 488, 523, 581], "path": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 354], "home": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 413, 600], "runner": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 413], "work": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 413, 600], "control": [33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 366, 367, 368, 369, 380, 413, 600, 601], "fw": [33, 35, 119, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 346, 413], "parent": [34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "inc": [34, 319, 320, 321, 322, 323, 324, 325, 326, 413], "host_transport_impl": [34, 36, 101, 113, 117, 118, 207, 208, 209, 210, 211, 212, 328, 413, 487], "sampling_impl": [34, 36, 101, 113, 125, 261, 262, 328, 413, 593], "src": [36, 38, 40, 42, 44, 46, 126, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 413], "ringbuff": [37, 45, 117, 126, 205, 206, 222, 223, 226, 227, 237, 318, 324, 328, 343, 344, 345, 346, 353, 373, 375, 394, 413, 536], "lib": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 126, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 413], "adxl345_flag": [39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 101, 106, 328, 333, 413], "adxl345_regist": [39, 111, 151, 338, 356, 357, 358, 359, 360, 361, 362, 413, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "adxl345_spi_typ": [39, 84, 85, 92, 100, 106, 319, 327, 333, 413], "adxl345_transport_typ": [39, 92, 100, 101, 106, 109, 159, 319, 327, 328, 333, 363, 364, 412, 413, 415, 416, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "from_host_transport": [43, 101, 102, 113, 116, 117, 118, 119, 203, 204, 328, 413], "test_ringbuff": [48, 353, 413], "util": [48, 126, 217, 232, 300, 316, 344, 345, 347, 349, 353, 355, 373, 395, 413, 560, 600], "run": [50, 99, 105, 126, 242, 287, 307, 326, 332, 345, 347, 353, 354, 393, 413, 600], "defin": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 321, 323, 324, 326, 328, 334, 344, 345, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "regist": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 108, 109, 335, 336, 338, 345, 350, 354, 356, 357, 358, 359, 360, 361, 362, 364, 414, 415, 416], "flag": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 91, 108, 154, 157, 246, 248, 252, 253, 255, 256, 259, 260, 319, 328, 335, 337, 345, 351, 354], "see": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 99, 105, 243, 254, 319, 326, 327, 328, 332, 334, 335, 336, 340, 344, 345, 351, 354, 356, 357, 358, 359, 360, 361, 362, 453, 600], "section": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 335, 336, 345, 356, 357, 358, 359, 360, 361, 362, 600], "map": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 333, 335, 336, 345, 349, 356, 357, 358, 359, 360, 361, 362, 374], "data": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 111, 114, 115, 119, 120, 124, 126, 140, 150, 156, 158, 203, 204, 225, 239, 243, 254, 281, 287, 292, 302, 307, 311, 318, 319, 327, 328, 333, 334, 335, 336, 338, 341, 342, 345, 346, 347, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 370, 374, 405, 414, 415, 416, 600], "sheet": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 335, 336, 345, 356, 357, 358, 359, 360, 361, 362], "rev": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 335, 336, 345, 350, 356, 357, 358, 359, 360, 361, 362], "g": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 91, 335, 336, 345, 350, 356, 357, 358, 359, 360, 361, 362, 601], "pp": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 335, 336, 345, 356, 357, 358, 359, 360, 361, 362], "24": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 335, 336, 345, 356, 357, 358, 359, 360, 361, 362], "28": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 88, 91, 335, 336, 345, 356, 357, 358, 359, 360, 361, 362], "valu": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 118, 318, 345, 346, 354, 393, 409, 600], "enumer": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "adxl345flags_intenable_inactivity_dis": [51, 318, 333, 335], "adxl345flags_intenable_inactivity_en": [51, 318, 335], "adxl345flags_fifostatus_fifotrig_trigg": [52, 318, 335], "adxl345flags_fifostatus_fifotrig_nottrigg": [52, 318, 335], "adxl345flags_dataformat_fullresbit_10bit": [53, 318, 333, 335], "adxl345flags_dataformat_fullresbit_fullres_4mg": [53, 318, 333, 335], "adxl345flags_intenable_overrun_dis": [54, 318, 335], "adxl345flags_intenable_overrun_en": [54, 318, 333, 335], "adxl345flags_fifoctl_trigger_int1": [55, 318, 333, 335], "adxl345flags_fifoctl_trigger_int2": [55, 318, 335], "adxl345flags_intmap_singletap_int1": [56, 318, 333, 335], "adxl345flags_intmap_singletap_int2": [56, 318, 335], "adxl345flags_powerctl_autosleep_dis": [57, 318, 333, 335], "adxl345flags_powerctl_autosleep_funct": [57, 318, 335], "adxl345flags_powerctl_link_concurr": [58, 318, 333, 335], "adxl345flags_powerctl_link_seri": [58, 318, 335], "adxl345flags_intmap_doubletap_int1": [59, 318, 333, 335], "adxl345flags_intmap_doubletap_int2": [59, 318, 335], "adxl345flags_intmap_inactivity_int1": [60, 318, 333, 335], "adxl345flags_intmap_inactivity_int2": [60, 318, 335], "adxl345flags_intmap_dataready_int1": [61, 318, 333, 335], "adxl345flags_intmap_dataready_int2": [61, 318, 335], "adxl345flags_bwrate_lowpower_norm": [62, 318, 333, 335], "adxl345flags_bwrate_lowpower_reduc": [62, 318, 335], "adxl345flags_dataformat_intinvert_activehigh": [63, 318, 333, 335], "adxl345flags_dataformat_intinvert_activelow": [63, 318, 335], "adxl345flags_fifoctl_fifomode_bypass": [64, 318, 335], "adxl345flags_fifoctl_fifomode_fifo": [64, 318, 333, 335], "adxl345flags_fifoctl_fifomode_stream": [64, 318, 335], "adxl345flags_fifoctl_fifomode_trigg": [64, 318, 335], "adxl345flags_powerctl_wakeup_8hz": [65, 318, 333, 335], "adxl345flags_powerctl_wakeup_4hz": [65, 318, 335], "adxl345flags_powerctl_wakeup_2hz": [65, 318, 335], "adxl345flags_powerctl_wakeup_1hz": [65, 318, 335], "adxl345flags_intmap_freefall_int1": [66, 318, 333, 335], "adxl345flags_intmap_freefall_int2": [66, 318, 335], "adxl345flags_dataformat_range_2g": [67, 318, 333, 335], "adxl345flags_dataformat_range_4g": [67, 318, 333, 335], "adxl345flags_dataformat_range_8g": [67, 318, 333, 335], "adxl345flags_dataformat_range_16g": [67, 318, 333, 335], "adxl345flags_intenable_doubletap_dis": [68, 318, 333, 335], "adxl345flags_intenable_doubletap_en": [68, 318, 335], "adxl345flags_bwrate_rate_normalpowerodr3200": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr1600": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr800": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr400": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr200": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr100": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr50": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr25": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr12_5": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr6_25": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr3_13": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr1_56": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr0_78": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr0_39": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr0_20": [69, 318, 333, 335], "adxl345flags_bwrate_rate_normalpowerodr0_10": [69, 318, 333, 335], "adxl345flags_bwrate_rate_reducedpowerodr400": [69, 318, 335], "adxl345flags_bwrate_rate_reducedpowerodr200": [69, 318, 335], "adxl345flags_bwrate_rate_reducedpowerodr100": [69, 318, 335], "adxl345flags_bwrate_rate_reducedpowerodr50": [69, 318, 335], "adxl345flags_bwrate_rate_reducedpowerodr25": [69, 318, 335], "adxl345flags_bwrate_rate_reducedpowerodr12_5": [69, 318, 335], "adxl345flags_intmap_activity_int1": [70, 318, 333, 335], "adxl345flags_intmap_activity_int2": [70, 318, 335], "adxl345flags_intenable_watermark_dis": [71, 318, 335], "adxl345flags_intenable_watermark_en": [71, 318, 333, 335], "adxl345flags_dataformat_selftest_disableforc": [72, 318, 333, 335], "adxl345flags_dataformat_selftest_enableforc": [72, 318, 335], "adxl345flags_intenable_dataready_dis": [73, 318, 333, 335], "adxl345flags_intenable_dataready_en": [73, 318, 335], "adxl345flags_intenable_singletap_dis": [74, 318, 333, 335], "adxl345flags_intenable_singletap_en": [74, 318, 335], "adxl345flags_intmap_watermark_int1": [75, 318, 333, 335], "adxl345flags_intmap_watermark_int2": [75, 318, 335], "adxl345flags_intenable_activity_dis": [76, 318, 333, 335], "adxl345flags_intenable_activity_en": [76, 318, 335], "adxl345flags_intmap_overrun_int1": [77, 318, 335], "adxl345flags_intmap_overrun_int2": [77, 318, 333, 335], "adxl345flags_powerctl_sleep_normalmod": [78, 318, 333, 335], "adxl345flags_powerctl_sleep_sleepmod": [78, 318, 335], "adxl345flags_powerctl_measure_standbi": [79, 318, 333, 335], "adxl345flags_powerctl_measure_measur": [79, 318, 333, 335], "adxl345flags_dataformat_justify_lsbright": [80, 318, 333, 335], "intuit": [80, 335], "order": [80, 335, 354], "adxl345flags_dataformat_justify_msbleft": [80, 318, 335], "left": [80, 335, 354], "align": [80, 328, 335, 348], "adxl345flags_intenable_freefall_dis": [81, 318, 333, 335], "adxl345flags_intenable_freefall_en": [81, 318, 335], "adxl345flags_dataformat_spibit_3wir": [82, 318, 335], "adxl345flags_dataformat_spibit_4wir": [82, 318, 333, 335], "address": [83, 108, 335, 350], "list": [83, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 413], "p": [83, 335], "23": [83, 335], "adxl345flags_address_devid": [83, 318, 335], "adxl345flags_address_reserved_01": [83, 318, 335], "adxl345flags_address_reserved_1c": [83, 318, 335], "adxl345flags_address_threstap": [83, 318, 335], "adxl345flags_address_offsx": [83, 318, 335], "adxl345flags_address_offsi": [83, 318, 335], "adxl345flags_address_offsz": [83, 318, 335], "adxl345flags_address_dur": [83, 318, 335], "adxl345flags_address_lat": [83, 318, 335], "adxl345flags_address_window": [83, 318, 335], "adxl345flags_address_thresact": [83, 318, 335], "adxl345flags_address_thresinact": [83, 318, 335], "adxl345flags_address_timeinact": [83, 318, 335], "adxl345flags_address_actinactctl": [83, 318, 335], "adxl345flags_address_thresff": [83, 318, 335], "adxl345flags_address_timeff": [83, 318, 335], "adxl345flags_address_tapax": [83, 318, 335], "adxl345flags_address_acttapstatu": [83, 318, 335], "adxl345flags_address_bwr": [83, 318, 333, 335], "adxl345flags_address_powerctl": [83, 318, 333, 335], "adxl345flags_address_inten": [83, 318, 333, 335], "adxl345flags_address_intmap": [83, 318, 333, 335], "adxl345flags_address_intsourc": [83, 318, 335], "adxl345flags_address_dataformat": [83, 318, 333, 335], "adxl345flags_address_datax0": [83, 318, 333, 335], "adxl345flags_address_datax1": [83, 318, 335], "adxl345flags_address_datay0": [83, 318, 335], "adxl345flags_address_datay1": [83, 318, 335], "adxl345flags_address_dataz0": [83, 318, 335], "adxl345flags_address_dataz1": [83, 318, 335], "adxl345flags_address_fifoctl": [83, 318, 333, 335], "adxl345flags_address_fifostatu": [83, 318, 335], "chip": [84, 327, 337], "select": [84, 327, 337], "spi": [84, 85, 100, 109, 110, 154, 157, 318, 319, 327, 333, 334, 336, 337, 357, 365, 600], "commun": [84, 85, 328, 334, 337, 344, 365, 372, 600], "adxl345spi_cs_modifi": [84, 318, 327, 333, 337], "modifi": [84, 337, 340, 346, 366, 600], "line": [84, 327, 337, 354, 600], "befor": [84, 154, 156, 157, 158, 319, 327, 337, 346], "after": [84, 135, 145, 154, 156, 157, 158, 319, 327, 334, 337], "transact": [84, 154, 156, 157, 158, 319, 337], "adxl345spi_cs_untouch": [84, 318, 327, 337], "untouch": [84, 337, 346], "write": [85, 154, 157, 319, 337, 346], "adxl345spi_rwflags_read": [85, 318, 327, 333, 337], "indic": [85, 154, 157, 216, 231, 319, 328, 337, 345, 349, 394, 398, 402, 403, 404, 405], "adxl345spi_rwflags_writ": [85, 318, 333, 337], "adxl345spi_rwflags_multibyt": [85, 318, 327, 337], "multibyt": [85, 327, 337], "transfer": [85, 337, 345, 403], "adxl345spi_rwflags_singlebyt": [85, 318, 327, 337], "singl": [85, 154, 157, 319, 337, 354], "statu": [86, 300, 316, 344, 345, 346, 347, 381, 395], "return": [86, 154, 156, 157, 158, 203, 204, 217, 218, 219, 220, 221, 224, 225, 228, 229, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 254, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 365, 373, 600], "hosttransport_handl": [86, 114, 115, 116, 117, 119, 120, 318, 340, 341, 342, 343, 344, 346, 347, 367, 373], "transmit": [86, 119, 156, 158, 281, 282, 285, 286, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 328, 344, 345, 346, 347, 373, 407, 510, 601], "uint8_t": [86, 92, 95, 100, 102, 106, 107, 114, 115, 119, 120, 121, 122, 250, 251, 257, 258, 318, 319, 322, 324, 327, 328, 329, 330, 333, 334, 336, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357, 358, 359, 360, 361, 362, 364, 365, 367, 370, 371, 373, 374, 375, 396, 399, 411, 412, 416, 419, 420, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 461, 462, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 488, 499, 523, 526, 546, 581, 591, 592, 598], "uint16_t": [86, 95, 102, 114, 115, 119, 120, 121, 122, 123, 124, 217, 220, 221, 228, 229, 232, 235, 236, 240, 241, 243, 251, 254, 258, 318, 322, 328, 329, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 367, 373, 374, 375, 377, 378, 388, 393, 395, 404, 415, 416, 458, 503, 510, 528, 531, 555, 560, 565, 582], "hosttransport_status_ok": [86, 318, 329, 344], "hosttransport_status_busi": [86, 318, 329, 344, 346, 373], "hosttransport_status_fail": [86, 318, 329, 344, 346], "hosttransport_status_undefin": [86, 318, 329, 344], "rate": [87, 109, 118, 138, 140, 148, 150, 281, 292, 302, 311, 318, 329, 333, 334, 336, 345, 346, 347, 356, 390, 400, 600], "describ": [87, 88, 91, 345, 354, 600], "scale": [88, 118, 137, 139, 147, 149, 288, 292, 308, 311, 318, 328, 329, 333, 334, 335, 345, 346, 347, 386, 392, 396, 406, 600], "code": [89, 118, 297, 314, 318, 326, 332, 345, 346, 347, 349, 354, 397, 600], "sent": [89, 287, 300, 307, 316, 345, 346, 347, 395, 402, 403, 405], "host": [89, 95, 102, 113, 114, 115, 119, 120, 203, 204, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322, 328, 329, 340, 341, 342, 344, 345, 346, 347, 366, 367, 372, 403, 600], "case": [89, 328, 329, 333, 341, 345, 354], "error": [89, 151, 154, 156, 157, 158, 159, 188, 213, 214, 263, 265, 297, 314, 319, 327, 328, 334, 338, 345, 346, 347, 354, 397, 403, 405, 407], "tx": [90, 110, 154, 156, 157, 158, 287, 307, 319, 337, 338, 345, 346, 347, 379, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 418], "rx": [90, 110, 156, 158, 319, 327, 328, 337, 338, 345, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 410, 417], "id": [90, 118, 203, 204, 318, 329, 341, 342, 345, 346, 354, 410, 600], "": [90, 124, 338, 345, 346, 351, 354, 363, 382, 384, 385, 386, 390, 391, 392, 400, 401, 406, 464, 465, 467, 559, 579, 587, 595, 596, 597, 600], "one": [90, 154, 157, 203, 204, 218, 225, 233, 239, 319, 342, 345, 348, 349, 354, 375], "rang": [91, 109, 118, 130, 133, 142, 144, 292, 301, 311, 317, 318, 328, 329, 333, 334, 335, 336, 345, 346, 347, 357, 385, 391, 396, 401, 600], "program": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 413], "hardwar": [92, 95, 100, 102, 319, 320, 322, 327, 328, 329, 346], "specif": [92, 95, 100, 102, 319, 320, 322, 327, 328, 329, 340, 352, 354, 367, 368, 377, 600], "implement": [92, 98, 100, 102, 107, 112, 114, 119, 121, 124, 319, 320, 325, 327, 328, 329, 333, 334, 339, 340, 341, 346, 348, 349, 350, 352, 365, 366, 377], "api": [92, 98, 100, 107, 112, 113, 115, 120, 319, 320, 325, 327, 328, 334, 339, 340, 342, 347, 366, 367, 368, 599, 600], "inttyp": [92, 95, 97, 107, 109, 110, 111, 113, 115, 117, 118, 120, 122, 124, 125, 126, 319, 322, 324, 334, 336, 337, 338, 340, 342, 344, 345, 347, 349, 351, 352, 353], "adxl345transportimpl_dotransmitframeimpl": [92, 100, 318, 319, 327], "const": [92, 95, 100, 102, 114, 115, 119, 120, 121, 122, 318, 319, 320, 322, 324, 327, 328, 329, 330, 331, 333, 334, 340, 341, 342, 344, 346, 347, 348, 349, 350, 352, 353, 365, 366, 367, 368, 369, 371, 373, 377], "union": [92, 100, 319, 327, 333, 334, 336, 338, 345, 364, 365, 379, 413, 460, 532, 552, 561, 594], "adxl345transport_txfram": [92, 100, 111, 318, 319, 327, 333, 334, 338, 365, 459, 461], "enum": [92, 100, 106, 107, 119, 120, 207, 210, 319, 322, 324, 326, 327, 328, 329, 333, 334, 335, 337, 340, 344, 345, 346, 347, 352, 365, 367, 373, 390, 391, 392, 397, 400, 401, 406, 410, 413, 519, 525, 550], "adxl345spi_c": [92, 100, 110, 318, 319, 327, 334, 337, 365], "adxl345spi_rwflag": [92, 100, 110, 318, 319, 327, 334, 337, 365], "adxl345transportimpl_dotransmitreceiveframeimpl": [92, 100, 318, 319, 327], "adxl345transport_rxfram": [92, 100, 111, 318, 319, 327, 333, 334, 338, 365, 458, 463, 466, 508], "adxl345_handle_initi": [92, 318, 319, 328], "controllerhandl": [93, 101, 102, 104, 318, 320, 328, 329, 331], "macro": [94, 96, 321, 323, 324, 326, 334, 344, 347, 352, 354], "conveni": [94, 96, 321, 323, 336, 338, 345, 364, 412, 414, 415, 416, 417, 418, 600], "gpio": [94, 96, 100, 321, 323, 327], "manipul": [94, 96, 107, 321, 323, 328, 333, 334, 600], "main": [94, 96, 101, 128, 243, 254, 318, 321, 323, 328, 334, 340, 344, 345, 351, 352, 355, 365, 366, 369, 373, 377, 378, 524, 582], "user_debug0_high": [94, 318, 321], "user_debug0_low": [94, 318, 321], "user_debug0_toggl": [94, 318, 321], "user_debug1_high": [94, 318, 321], "user_debug1_low": [94, 318, 321], "user_debug1_toggl": [94, 318, 321], "transport": [95, 102, 111, 113, 119, 120, 203, 204, 282, 285, 286, 287, 292, 295, 296, 298, 303, 305, 306, 307, 311, 312, 313, 315, 322, 328, 329, 338, 340, 342, 345, 346, 347, 366, 367, 393, 395, 396, 397, 399, 408, 409], "IN": [95, 102, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 322, 329, 345, 346, 347], "usb": [95, 102, 243, 254, 287, 307, 322, 328, 329, 344, 345, 346, 347, 351, 373, 600], "endpoint": [95, 102, 203, 204, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 322, 329, 342, 345, 346, 347], "stdbool": [95, 113, 114, 122, 124, 125, 126, 322, 340, 341, 349, 351, 352, 353], "hosttransportimpl_dotransmitimpl": [95, 102, 318, 322, 328, 329], "hosttransportimpl_istransmitbusyimpl": [95, 102, 318, 322, 328, 329], "hosttransportimpl_ontakereceivedimpl": [95, 102, 318, 322, 328, 329], "user_led0_off": [96, 318, 323, 328], "user_led0_on": [96, 318, 323, 328], "user_led0_toggl": [96, 318, 323], "ringbuffer_declare_initi": [97, 318, 324, 328], "ringbuffer_index_initi": [97, 318, 324], "ringbuffer_initi": [97, 318, 324], "ringbuffer_storage_item_size_byt": [97, 318, 324], "ringbuffer_storage_size_byt": [97, 318, 324, 328, 330], "ringbufferstorag": [97, 103, 318, 324, 330], "samplingimpl_dowaitdelay5usimpl": [98, 104, 318, 325, 328, 331], "struct": [98, 101, 104, 106, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 319, 320, 324, 325, 328, 329, 331, 333, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 414, 415, 416, 417, 418, 421, 422, 428, 442, 447, 448, 450, 459, 463, 466, 480, 486, 487, 490, 497, 498, 505, 508, 512, 514, 518, 520, 521, 530, 535, 536, 541, 543, 545, 547, 548, 549, 554, 557, 564, 565, 567, 568, 571, 572, 575, 577, 580, 585, 586, 588, 591, 592, 593], "sampling_handl": [98, 104, 123, 124, 125, 318, 325, 331, 340, 350, 351, 352, 368], "auto": [99, 105, 326, 332, 354, 600], "gener": [99, 105, 112, 326, 328, 332, 339, 345, 349, 374, 379, 600], "crate": [99, 105, 326, 332], "poetri": [99, 105, 326, 332, 600], "versionbump": [99, 105, 326, 332], "also": [99, 105, 326, 332, 354, 600], "exampl": [99, 105, 139, 149, 326, 328, 332, 334, 346, 349, 354, 374], "poetryversionpatch": [99, 105], "poetryrunversionbump": [99, 105], "version_major": [99, 318, 326, 328], "version_minor": [99, 318, 326, 328], "version_patch": [99, 318, 326, 328], "errno": [100, 101, 102, 106, 114, 119, 121, 123, 126, 327, 328, 329, 333, 341, 346, 348, 350, 353], "ncsclear": [100, 318, 327], "ncsset": [100, 318, 327], "receivefram": [100, 318, 327], "stm32f4xx_hal": [101, 328], "transport_responseflag": [101, 318, 328, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485], "__attribute__": [101, 109, 111, 118, 125, 126, 318, 328, 336, 338, 345, 352, 353, 354, 379], "pack": [101, 109, 111, 118, 125, 126, 318, 328, 336, 338, 345, 346, 352, 353, 379], "controllerimpl_device_checkreboot": [101, 318, 328], "controllerimpl_device_requestasyncreboot": [101, 318, 328], "controllerimpl_init": [101, 318, 328], "controllerimpl_loop": [101, 318, 328], "controllerimpl_transmitpendingrespons": [101, 318, 328], "fault_onbusfaulthandl": [101, 318, 328, 340, 366], "fault_onerrorhandl": [101, 318, 328, 340, 366], "fault_onhardfaulthandl": [101, 318, 328, 340, 366], "fault_onnmifaulthandl": [101, 318, 328, 340, 366], "fault_onusagefaulthandl": [101, 318, 328, 340, 366], "host_dotakebyt": [101, 318, 328], "host_onrequestgetbufferstatu": [101, 318, 328], "host_onrequestgetdevicesetup": [101, 318, 328], "host_onrequestgetfirmwarevers": [101, 318, 328], "host_onrequestgetoutputdatar": [101, 318, 328], "host_onrequestgetrang": [101, 318, 328], "host_onrequestgetscal": [101, 318, 328], "host_onrequestgetuptim": [101, 318, 328], "host_onrequestsamplingstart": [101, 318, 328], "host_onrequestsamplingstop": [101, 318, 328], "host_onrequestsetoutputdatatr": [101, 318, 328], "host_onrequestsetrang": [101, 318, 328], "host_onrequestsetscal": [101, 318, 328], "sampling_clearfifowatermark": [101, 123, 124, 318, 328, 350, 351], "sampling_dodisablesensorimpl": [101, 318, 328], "sampling_doenablesensorimpl": [101, 318, 328], "sampling_dofetchsensoraccelerationimpl": [101, 318, 328], "sampling_doforwardaccelerationbufferimpl": [101, 318, 328], "sampling_on5ustimerexpir": [101, 123, 124, 318, 328, 350, 351], "sampling_onbufferoverflowcb": [101, 318, 328], "sampling_onfifooverflowcb": [101, 318, 328], "sampling_onsamplingabortedcb": [101, 318, 328], "sampling_onsamplingfinishedcb": [101, 318, 328], "sampling_onsamplingstartedcb": [101, 318, 328], "sampling_onsamplingstoppedcb": [101, 318, 328], "sampling_ontransmissionerrorcb": [101, 318, 328], "sampling_setfifooverflow": [101, 123, 124, 318, 328, 350, 351], "sampling_setfifowatermark": [101, 123, 124, 318, 328, 350, 351], "sensor_dogetoutputdatarateimpl": [101, 318, 328], "sensor_dogetrangeimpl": [101, 318, 328], "sensor_dogetscaleimpl": [101, 318, 328], "sensor_doinitimpl": [101, 318, 328], "hosttransport_declare_initi": [101, 318, 328], "mystring": [101, 318, 328], "mystringize0": [101, 318, 328], "sampling_declare_initi": [101, 318, 328], "_reserved_0": [101, 318, 328, 411], "_reserved_1": [101, 318, 328, 411], "host_responsegetbufferstatu": [101, 318, 328, 411], "host_responsegetdevicesetup": [101, 318, 328, 411], "host_responsegetfirmwarevers": [101, 318, 328, 411], "host_responsegetoutputdatar": [101, 318, 328, 411], "host_responsegetrang": [101, 318, 328, 411], "host_responsegetscal": [101, 318, 328, 411], "host_responsegetuptim": [101, 318, 328, 411], "pendingrespons": [101, 318, 328], "rebootrequest": [101, 318, 328], "sampling_responsebufferoverflow": [101, 318, 328, 411], "sampling_responsefifooverflow": [101, 318, 328, 411], "sampling_responsesamplingabort": [101, 318, 328, 411], "sampling_responsesamplingfinish": [101, 318, 328, 411], "sampling_responsesamplingstop": [101, 318, 328, 411], "sampling_responsetransmissionerror": [101, 318, 328, 411], "usbd_cdc_if": [102, 329], "tim": [104, 331], "adxl345_getacceler": [106, 107, 318, 328, 333, 334], "adxl345_handl": [106, 107, 318, 319, 333, 334, 340, 369], "adxl345transport_acceler": [106, 107, 111, 318, 328, 333, 334, 338, 415, 464, 465, 466, 467, 508, 559, 579, 587, 595, 596, 597], "adxl345_getoutputdatar": [106, 107, 318, 328, 333, 334], "adxl345flags_bwrate_r": [106, 107, 108, 318, 328, 333, 334, 335], "adxl345_getrang": [106, 107, 318, 328, 333, 334], "adxl345flags_dataformat_rang": [106, 107, 108, 318, 328, 333, 334, 335], "adxl345_getscal": [106, 107, 318, 328, 333, 334], "adxl345flags_dataformat_fullresbit": [106, 107, 108, 318, 328, 333, 334, 335], "adxl345_init": [106, 107, 318, 328, 333, 334], "adxl345_setoutputdatar": [106, 107, 318, 328, 333, 334], "adxl345_setpowerctlmeasur": [106, 107, 318, 328, 333, 334], "adxl345_setpowerctlstandbi": [106, 107, 318, 328, 333, 334], "adxl345_setrang": [106, 107, 318, 328, 333, 334], "adxl345_setscal": [106, 107, 318, 328, 333, 334], "readregist": [106, 318, 333], "writeregist": [106, 318, 333], "acceleromet": [107, 333, 334, 600, 601], "adxl345_fifo_entri": [107, 318, 334, 350], "adxl345_watermark_level": [107, 318, 328, 333, 334], "adxl345flags_address": [108, 318, 333, 335], "adxl345flags_bwrate_lowpow": [108, 318, 335], "adxl345flags_dataformat_intinvert": [108, 318, 335], "adxl345flags_dataformat_justifi": [108, 318, 335], "adxl345flags_dataformat_selftest": [108, 318, 335], "adxl345flags_dataformat_spibit": [108, 318, 335], "adxl345flags_fifoctl_fifomod": [108, 318, 335], "adxl345flags_fifoctl_trigg": [108, 318, 335], "adxl345flags_fifostatus_fifotrig": [108, 318, 335], "adxl345flags_intenable_act": [108, 318, 335], "adxl345flags_intenable_datareadi": [108, 318, 335], "adxl345flags_intenable_doubletap": [108, 318, 335], "adxl345flags_intenable_freefal": [108, 318, 335], "adxl345flags_intenable_inact": [108, 318, 335], "adxl345flags_intenable_overrun": [108, 318, 335], "adxl345flags_intenable_singletap": [108, 318, 335], "adxl345flags_intenable_watermark": [108, 318, 335], "adxl345flags_intmap_act": [108, 318, 335], "adxl345flags_intmap_datareadi": [108, 318, 335], "adxl345flags_intmap_doubletap": [108, 318, 335], "adxl345flags_intmap_freefal": [108, 318, 335], "adxl345flags_intmap_inact": [108, 318, 335], "adxl345flags_intmap_overrun": [108, 318, 335], "adxl345flags_intmap_singletap": [108, 318, 335], "adxl345flags_intmap_watermark": [108, 318, 335], "adxl345flags_powerctl_autosleep": [108, 318, 335], "adxl345flags_powerctl_link": [108, 318, 335], "adxl345flags_powerctl_measur": [108, 318, 335], "adxl345flags_powerctl_sleep": [108, 318, 335], "adxl345flags_powerctl_wakeup": [108, 318, 335], "adxl345register_bwr": [109, 318, 336, 414, 419, 424, 428, 430, 435, 449, 499], "adxl345register_dataformat": [109, 318, 336, 414, 425, 429, 434, 441, 442, 444, 446, 455, 546], "adxl345register_fifoctl": [109, 318, 336, 414, 422, 427, 451, 453], "adxl345register_fifostatu": [109, 318, 336, 414, 443, 447, 454], "adxl345register_inten": [109, 318, 336, 414, 426, 431, 432, 436, 437, 439, 440, 445, 450], "adxl345register_intmap": [109, 318, 336, 414, 448], "adxl345register_powerctl": [109, 318, 336, 414, 420, 421, 423, 433, 438, 452], "adxl345regist": [109, 318, 333, 336, 338, 364, 415, 421, 422, 428, 442, 447, 448, 450, 460], "_zerod4": [109, 318, 333, 336, 357], "_zerod5": [109, 318, 333, 336, 356], "_zerod6": [109, 318, 333, 336, 356, 359, 362], "_zerod7": [109, 318, 333, 336, 356, 362], "activ": [109, 318, 327, 333, 336, 360, 361], "asbwrat": [109, 318, 333, 336, 414], "asdataformat": [109, 318, 333, 336, 414], "asfifoctl": [109, 318, 333, 336, 414], "asfifostatu": [109, 318, 336, 414], "asinten": [109, 318, 333, 336, 414], "asintmap": [109, 318, 333, 336, 414], "aspowercontrol": [109, 318, 333, 336, 414], "autosleep": [109, 318, 333, 336, 362], "datareadi": [109, 318, 333, 336, 360, 361], "doubletap": [109, 318, 333, 336, 360, 361], "fifomod": [109, 318, 333, 336, 358], "fifotrig": [109, 318, 336, 359], "freefal": [109, 318, 333, 336, 360, 361], "fullr": [109, 318, 333, 336, 357], "inact": [109, 318, 327, 333, 336, 360, 361], "intinvert": [109, 318, 333, 336, 357], "justifi": [109, 318, 333, 336, 357], "link": [109, 318, 333, 336, 362], "lowpow": [109, 318, 333, 336, 356], "measur": [109, 133, 136, 144, 146, 318, 333, 334, 336, 362, 600], "overrun": [109, 124, 253, 260, 318, 333, 336, 345, 351, 360, 361, 394, 398, 600], "selftest": [109, 318, 333, 336, 357], "singletap": [109, 318, 333, 336, 360, 361], "sleep": [109, 318, 333, 336, 362], "trigger": [109, 287, 307, 318, 333, 336, 347, 358], "wakeup": [109, 318, 333, 336, 362], "constant": [110, 125, 337, 349, 352, 600], "adxl345transport_datapaddedregist": [111, 318, 338, 416, 459, 460, 462], "twobyt": [111, 318, 338, 415, 416, 456, 457, 463], "_padding8": [111, 318, 338, 364], "asacceler": [111, 118, 318, 333, 338, 345, 346, 415, 418], "asaddress": [111, 318, 327, 333, 338, 416], "asbyt": [111, 318, 338, 415, 416], "aspaddedregist": [111, 318, 333, 338, 416], "asregist": [111, 318, 333, 338, 364, 415], "asword": [111, 318, 327, 338, 415, 416], "byte1": [111, 318, 338, 412], "byte2": [111, 318, 338, 412], "part": [112, 339], "The": [113, 133, 139, 144, 149, 334, 340, 344, 346, 350, 354, 365, 373, 600, 601], "modul": [113, 124, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 328, 340, 350, 351, 352, 367, 368, 377, 378, 599], "aim": [113, 340, 354], "abstract": [113, 340], "whole": [113, 203, 204, 340, 342, 346], "devic": [113, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 291, 297, 300, 310, 314, 316, 328, 336, 340, 345, 346, 347, 351, 352, 366, 367, 368, 377, 396, 405, 600], "consist": [113, 340, 354], "follow": [113, 340, 345, 346, 354, 379, 600], "controller_handl": [113, 318, 320, 328, 329, 331, 340, 480, 486, 487, 593], "controller_host": [113, 318, 340, 366], "controller_sampl": [113, 318, 340, 366], "controller_sensor": [113, 318, 340, 366], "process": [114, 115, 203, 204, 328, 341, 342], "transportrx_process": [114, 115, 250, 251, 257, 258, 318, 328, 341, 342, 351], "transport_resetbuff": [116, 117, 318, 328, 343, 344], "hosttransport_fromhostapi": [117, 318, 344, 372], "hosttransport_tohostapi": [117, 318, 344, 346, 372, 510], "hosttransport_statu": [117, 207, 210, 318, 322, 329, 344, 347, 373], "transporttx_transmit_tx_data_chunk_buffer_byt": [117, 318, 344, 346], "transport_acceler": [118, 119, 120, 318, 328, 344, 345, 346, 347, 373, 393, 586], "transport_head": [118, 318, 324, 345, 346, 379, 550, 577, 591, 592], "transportfram": [118, 318, 329, 341, 345, 346, 532, 552, 577, 594], "transportrx_devicereboot": [118, 318, 341, 345, 417, 549], "transportrx_getbufferstatu": [118, 318, 341, 345, 417, 490], "transportrx_getdevicesetup": [118, 318, 341, 345, 417, 575], "transportrx_getfirmwarevers": [118, 318, 341, 345, 417, 580], "transportrx_getoutputdatar": [118, 318, 341, 345, 417, 585], "transportrx_getrang": [118, 318, 341, 345, 417, 521], "transportrx_getscal": [118, 318, 341, 345, 417, 567], "transportrx_getuptim": [118, 318, 341, 345, 417, 568], "transportrx_samplingstart": [118, 318, 341, 345, 417, 531, 543], "transportrx_samplingstop": [118, 318, 341, 345, 417, 564], "transportrx_setoutputdatar": [118, 318, 341, 345, 417, 572], "transportrx_setrang": [118, 318, 341, 345, 417, 530], "transportrx_setscal": [118, 318, 341, 345, 417, 525, 547], "transporttx_acceler": [118, 318, 324, 345, 346, 418, 586, 591, 592], "transporttx_bufferoverflow": [118, 318, 345, 418, 588], "transporttx_bufferstatu": [118, 300, 316, 318, 345, 347, 418, 503, 512, 560, 565], "transporttx_devicesetup": [118, 292, 311, 318, 345, 347, 418, 520, 526], "transporttx_fault": [118, 318, 345, 418, 519, 545], "transporttx_fifooverflow": [118, 282, 303, 318, 345, 347, 418, 518], "transporttx_firmwarevers": [118, 295, 312, 318, 345, 347, 418, 488, 498, 523, 581], "transporttx_outputdatar": [118, 281, 302, 318, 345, 347, 418, 554], "transporttx_rang": [118, 301, 317, 318, 345, 347, 418, 541], "transporttx_samplingabort": [118, 286, 306, 318, 345, 347, 418, 535], "transporttx_samplingfinish": [118, 285, 305, 318, 345, 347, 418, 514], "transporttx_samplingstart": [118, 298, 315, 318, 345, 347, 418, 497], "transporttx_samplingstop": [118, 296, 313, 318, 345, 347, 418, 505], "transporttx_scal": [118, 288, 308, 318, 345, 347, 418, 557], "transporttx_transmissionerror": [118, 318, 345, 418, 548], "transporttx_uptim": [118, 291, 310, 318, 345, 347, 418, 571, 584], "transport_headerid": [118, 318, 345, 410, 550], "transportrx_setoutputdatarate_r": [118, 318, 328, 340, 345, 367, 390, 400], "transportrx_setrange_rang": [118, 318, 328, 340, 345, 367, 391, 401], "transportrx_setscale_scal": [118, 318, 328, 340, 345, 367, 392, 406, 525], "transporttx_faultcod": [118, 119, 120, 318, 345, 346, 347, 397, 519], "__packed__": [118, 318, 345], "sizeof_header_incl_payload": [118, 318, 341, 345, 346], "transportrxfram": [118, 318, 345, 379, 490, 521, 530, 532, 543, 547, 549, 564, 567, 568, 572, 575, 580, 585], "transporttxfram": [118, 318, 345, 379, 497, 498, 505, 512, 514, 518, 520, 535, 541, 545, 548, 552, 554, 557, 571, 588], "asbufferoverflow": [118, 318, 345, 346, 418], "asbufferstatu": [118, 318, 345, 346, 418], "asdevicereboot": [118, 318, 345, 417], "asdevicesetup": [118, 318, 345, 346, 418], "asfault": [118, 318, 345, 346, 418], "asfifooverflow": [118, 318, 345, 346, 418], "asfirmwarevers": [118, 318, 345, 346, 418], "asgetbufferstatu": [118, 318, 345, 417], "asgetdevicesetup": [118, 318, 345, 417], "asgetfirmwarevers": [118, 318, 345, 417], "asgetoutputdatar": [118, 318, 345, 417], "asgetrang": [118, 318, 345, 417], "asgetscal": [118, 318, 345, 417], "asgetuptim": [118, 318, 345, 417], "asoutputdatar": [118, 318, 345, 346, 418], "asrang": [118, 318, 345, 346, 418], "asrxfram": [118, 318, 329, 345, 379], "assamplingabort": [118, 318, 345, 346, 418], "assamplingfinish": [118, 318, 345, 346, 418], "assamplingstart": [118, 318, 329, 345, 346, 417, 418], "assamplingstop": [118, 318, 345, 346, 417, 418], "asscal": [118, 318, 345, 346, 418], "assetoutputdatar": [118, 318, 329, 345, 417], "assetrang": [118, 318, 329, 345, 417], "assetscal": [118, 318, 329, 345, 417], "astransmissionerror": [118, 318, 345, 346, 418], "astxfram": [118, 318, 345, 346, 379], "asuptim": [118, 318, 345, 346, 418], "capacitytot": [118, 300, 316, 318, 345, 346, 347, 395], "capacityusedmax": [118, 300, 316, 318, 345, 346, 347, 395], "elapsedm": [118, 318, 345, 346, 408], "index": [118, 223, 237, 287, 307, 318, 324, 345, 346, 347, 348, 349, 353, 374, 375, 393, 599], "largesttxchunkbyt": [118, 300, 316, 318, 328, 343, 344, 345, 346, 347, 373, 395], "major": [118, 295, 312, 318, 345, 346, 347, 399], "max_samples_count": [118, 318, 329, 345, 388], "maxsampl": [118, 250, 257, 318, 328, 345, 346, 350, 351, 352, 378, 404], "minor": [118, 295, 312, 318, 345, 346, 347, 399], "outputdatar": [118, 318, 345, 346, 396], "patch": [118, 295, 312, 318, 326, 332, 345, 346, 347, 399, 600], "putcount": [118, 300, 316, 318, 345, 346, 347, 348, 349, 375, 395], "sizebyt": [118, 300, 316, 318, 345, 346, 347, 395], "takecount": [118, 300, 316, 318, 345, 346, 347, 348, 349, 375, 395], "transport_headerid_rx_devicereboot": [118, 318, 329, 341, 345], "transport_headerid_rx_getbufferstatu": [118, 318, 329, 341, 345], "transport_headerid_rx_getdevicesetup": [118, 318, 329, 341, 345], "transport_headerid_rx_getfirmwarevers": [118, 318, 329, 341, 345], "transport_headerid_rx_getoutputdatar": [118, 318, 329, 341, 345], "transport_headerid_rx_getrang": [118, 318, 329, 341, 345], "transport_headerid_rx_getscal": [118, 318, 329, 341, 345], "transport_headerid_rx_getuptim": [118, 318, 329, 341, 345], "transport_headerid_rx_samplingstart": [118, 318, 329, 341, 345], "transport_headerid_rx_samplingstop": [118, 318, 329, 341, 345], "transport_headerid_rx_setoutputdatar": [118, 318, 329, 341, 345], "transport_headerid_rx_setrang": [118, 318, 329, 341, 345], "transport_headerid_rx_setscal": [118, 318, 329, 341, 345], "transport_headerid_tx_acceler": [118, 318, 345, 346], "transport_headerid_tx_bufferoverflow": [118, 318, 345, 346], "transport_headerid_tx_bufferstatu": [118, 318, 345, 346], "transport_headerid_tx_devicesetup": [118, 318, 345, 346], "transport_headerid_tx_fault": [118, 318, 345, 346], "transport_headerid_tx_fifooverflow": [118, 318, 345, 346], "transport_headerid_tx_firmwarevers": [118, 318, 345, 346], "transport_headerid_tx_outputdatar": [118, 318, 345, 346], "transport_headerid_tx_rang": [118, 318, 345, 346], "transport_headerid_tx_samplingabort": [118, 318, 345, 346], "transport_headerid_tx_samplingfinish": [118, 318, 345, 346], "transport_headerid_tx_samplingstart": [118, 318, 345, 346], "transport_headerid_tx_samplingstop": [118, 318, 345, 346], "transport_headerid_tx_scal": [118, 318, 345, 346], "transport_headerid_tx_transmissionerror": [118, 318, 345, 346], "transport_headerid_tx_uptim": [118, 318, 345, 346], "transportrx_setoutputdatarate_rate1600": [118, 318, 345], "transportrx_setoutputdatarate_rate3200": [118, 318, 345], "transportrx_setoutputdatarate_rate_100": [118, 318, 345], "transportrx_setoutputdatarate_rate_200": [118, 318, 345], "transportrx_setoutputdatarate_rate_400": [118, 318, 345], "transportrx_setoutputdatarate_rate_50": [118, 318, 345], "transportrx_setoutputdatarate_rate_800": [118, 318, 345], "transportrx_setrange_range_16g": [118, 318, 345], "transportrx_setrange_range_2g": [118, 318, 345], "transportrx_setrange_range_4g": [118, 318, 345], "transportrx_setrange_range_8g": [118, 318, 345], "transportrx_setscale_scale_10bit": [118, 318, 345], "transportrx_setscale_scale_full4mg": [118, 318, 345], "transporttx_faultcode_busfaulthandl": [118, 318, 328, 345], "transporttx_faultcode_errorhandl": [118, 318, 328, 345], "transporttx_faultcode_hardfaulthandl": [118, 318, 328, 345], "transporttx_faultcode_nmihandl": [118, 318, 328, 345], "transporttx_faultcode_usagefaulthandl": [118, 318, 328, 345], "istransmitbusi": [119, 318, 346], "popdatafromringbuff": [119, 318, 346], "pushtoringbuff": [119, 318, 346], "transmitaccelerationbuff": [119, 318, 346], "transporttx_txaccelerationbuff": [119, 120, 318, 328, 344, 346, 347, 373], "transporttx_txbufferoverflow": [119, 120, 318, 328, 346, 347], "transporttx_txbufferstatu": [119, 120, 318, 328, 346, 347], "transporttx_txfault": [119, 120, 318, 328, 346, 347], "transporttx_txfifooverflow": [119, 120, 318, 328, 346, 347], "transporttx_txfirmwarevers": [119, 120, 318, 328, 346, 347], "transporttx_txoutputdatar": [119, 120, 318, 328, 346, 347], "transporttx_txrang": [119, 120, 318, 328, 346, 347], "transporttx_txsamplingabort": [119, 120, 318, 328, 346, 347], "transporttx_txsamplingfinish": [119, 120, 318, 328, 346, 347], "transporttx_txsamplingsetup": [119, 120, 318, 328, 346, 347], "transporttx_txsamplingstart": [119, 120, 318, 328, 346, 347], "transporttx_txsamplingstop": [119, 120, 318, 328, 346, 347], "transporttx_txscal": [119, 120, 318, 328, 346, 347], "transporttx_txtransmissionerror": [119, 120, 318, 328, 346, 347], "transporttx_txuptim": [119, 120, 318, 328, 346, 347], "uint32_t": [119, 120, 203, 204, 318, 327, 340, 342, 344, 345, 346, 347, 353, 367, 371, 408, 584], "transporttx_transmit_acceleration_buffer_byt": [120, 318, 328, 346, 347], "simpl": [121, 203, 204, 342, 348, 354], "string": [121, 348], "advancebegin": [121, 318, 348], "advanceend": [121, 318, 348], "itematindex": [121, 318, 348], "ringbuffer_init": [121, 122, 318, 348, 349, 353, 374], "ringbuffer_isempti": [121, 122, 318, 346, 348, 349, 353], "ringbuffer_isful": [121, 122, 318, 346, 348, 349, 353], "ringbuffer_itemscount": [121, 122, 318, 348, 349, 353], "ringbuffer_itemsizebyt": [121, 122, 318, 346, 348, 349], "ringbuffer_maxcapacityus": [121, 122, 318, 328, 348, 349], "ringbuffer_put": [121, 122, 318, 346, 348, 349, 353, 374], "void": [121, 122, 129, 136, 141, 146, 205, 206, 216, 231, 246, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 281, 282, 284, 285, 286, 288, 289, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 327, 328, 331, 333, 334, 340, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 366, 367, 368, 369, 377], "ringbuffer_putcount": [121, 122, 318, 328, 348, 349], "ringbuffer_reset": [121, 122, 318, 343, 348, 349], "ringbuffer_tak": [121, 122, 318, 346, 348, 349, 353], "ringbuffer_takecount": [121, 122, 318, 328, 348, 349], "ringbufferindex_init": [121, 122, 318, 348, 349], "ringbuffer_index": [121, 122, 318, 324, 348, 349, 374, 528, 536, 555], "checkstartrequest": [123, 318, 350], "checkstoprequest": [123, 318, 350], "isnsamplesreaden": [123, 318, 350], "sampling_fetchforward": [123, 124, 318, 328, 350, 351], "sampling_start": [123, 124, 318, 328, 350, 351], "sampling_stop": [123, 124, 250, 257, 318, 328, 350, 351], "transmitpend": [123, 318, 350], "take": [124, 218, 221, 233, 236, 345, 346, 349, 351, 353, 354, 395, 600], "monitor": [124, 351], "interrupt": [124, 246, 248, 252, 253, 255, 256, 259, 260, 328, 333, 334, 340, 344, 350, 351, 352, 365, 366, 373, 378, 582], "forward": [124, 203, 204, 243, 254, 287, 307, 342, 345, 347, 350, 351, 402], "en": [124, 243, 254, 351], "bloc": [124, 243, 254, 351], "handl": [125, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 203, 204, 205, 206, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 328, 331, 333, 334, 340, 341, 342, 343, 344, 346, 347, 350, 351, 352, 354, 365, 366, 367, 368, 369, 372], "sampling_acceler": [125, 318, 328, 352, 377, 378], "sampling_st": [125, 318, 352, 377, 582], "sampling_num_samples_read_at_onc": [125, 318, 328, 350, 352], "stdio": [126, 353], "uniti": [126, 353, 354], "foo": [126, 318, 349, 353, 374, 598, 600], "setup": [126, 318, 353, 600], "teardown": [126, 318, 353], "test_cap1_empty_isemptynotful": [126, 318, 353], "test_cap1_ful": [126, 318, 353], "test_cap3_empty_isemptynotful": [126, 318, 353], "test_cap3_empty_takeitem": [126, 318, 353], "test_cap3_full_isnotemptybutful": [126, 318, 353], "test_cap3_full_takeitem": [126, 318, 353], "test_cap3_notemptynotfull_isnotemptynotful": [126, 318, 353], "test_cap3_notemptynotfull_takeitem": [126, 318, 353], "test_cap3_overflow": [126, 318, 353], "test_cap3_putandoverflow": [126, 318, 353], "test_cap3_putandtakenooverflow": [126, 318, 353], "test_cap65535_beyondlimitsandabov": [126, 318, 353], "test_cap65535_movingwindowbeyondlimit": [126, 318, 353], "declare_buffer_capacity1": [126, 318, 353], "declare_buffer_capacity3": [126, 318, 353], "declare_buffer_capacity65535": [126, 318, 353], "unity_include_exec_tim": [127, 318, 354], "int": [130, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 154, 156, 157, 158, 203, 204, 208, 211, 215, 218, 223, 225, 230, 233, 237, 239, 242, 243, 246, 248, 253, 254, 255, 256, 260, 287, 307, 319, 322, 327, 328, 329, 333, 334, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 365, 367, 371, 377, 378], "acc": [131, 143, 333, 334], "next": [131, 143, 334], "acceler": [131, 133, 139, 143, 144, 149, 287, 307, 328, 334, 338, 344, 345, 346, 347, 363, 373, 393, 409, 464, 465, 467, 559, 579, 587, 595, 596, 597, 600], "doxygenfunct": [132, 134, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 213, 214, 222, 226, 227, 244, 245, 247, 249, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 293, 294, 299], "setter": [133, 139, 140, 144, 149, 150, 334], "getter": [133, 139, 140, 144, 149, 150, 334], "specifi": [133, 144, 334, 354], "bandwidth": [133, 144, 333, 334], "go": [133, 144, 334, 350, 354], "e": [133, 144, 334, 600, 601], "4g": [133, 144, 334], "initi": [135, 145, 334, 346, 600], "shall": [135, 136, 145, 146, 203, 204, 287, 307, 334, 340, 342, 347, 366], "call": [135, 145, 203, 204, 205, 206, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 287, 307, 328, 334, 342, 344, 346, 347, 351, 354], "power": [135, 136, 145, 146, 333, 334], "cycl": [135, 145, 334], "runtim": [135, 145, 334, 340, 366], "well": [135, 145, 334, 354, 600], "mode": [136, 146, 334, 344, 354, 373, 600], "If": [136, 146, 287, 307, 334, 347, 354, 600], "should": [136, 146, 334, 346, 354], "oper": [136, 146, 334, 354, 600], "denot": [139, 149, 334], "amount": [139, 149, 221, 228, 229, 236, 240, 241, 250, 257, 334, 346, 349, 351, 375, 528, 555], "per": [139, 149, 334], "bit": [139, 149, 334, 335, 336, 338, 354, 358, 364, 416, 453], "For": [139, 149, 334, 354, 600], "1lsb": [139, 149, 334], "4mg": [139, 149, 334, 335], "adxl345register_dataformat_fullresbit_fullres_4mg": [139, 149, 334], "odr": [140, 150, 328, 334, 345, 384, 390, 400], "unabl": [151, 159, 188, 213, 214, 263, 265], "resolv": [151, 159, 188, 213, 214, 263, 265], "argument": [151, 159, 188, 203, 204, 213, 214, 263, 265, 342, 354], "could": [151, 159, 188, 213, 214, 263, 265, 354], "pars": [151, 159, 188, 213, 214, 263, 265], "eror": [151, 159, 188, 213, 214, 263, 265], "invalid": [151, 154, 156, 157, 158, 159, 188, 203, 204, 213, 214, 216, 231, 263, 265, 319, 327, 342, 349], "declar": [151, 159, 188, 213, 214, 263, 265, 328, 334, 338, 345], "expect": [151, 156, 158, 159, 188, 213, 214, 263, 265, 319, 327, 335, 346, 354], "identifi": [151, 159, 188, 213, 214, 263, 265], "nest": [151, 159, 188, 213, 214, 263, 265], "frame": [154, 156, 157, 158, 319, 327, 338, 345, 346], "numbyt": [154, 157, 319, 327], "applyc": [154, 157, 319, 327], "rwflag": [154, 157, 319, 327], "send": [154, 156, 157, 158, 243, 254, 287, 307, 319, 334, 346, 347, 351, 365], "via": [154, 157, 319, 354], "interfac": [154, 157, 319, 600], "adxl345transportimpl_transmitreceivefram": [154, 157, 319, 327], "adxl345tp_txfram": [154, 157, 319, 327], "adxl345tp_rxfram": [154, 157, 319, 327], "paramet": [154, 156, 157, 158, 203, 204, 205, 206, 216, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 327, 346, 348, 354], "payload": [154, 157, 319, 334, 338, 345, 365, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 415], "whether": [154, 157, 219, 224, 234, 238, 319, 327, 349], "nc": [154, 156, 157, 158, 319, 327], "transmiss": [154, 157, 281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 327, 344, 345, 346, 347, 350, 373, 407], "einval": [154, 156, 157, 158, 203, 204, 287, 307, 319, 327, 329, 333, 341, 342, 346, 347, 348], "arg": [154, 156, 157, 158, 319, 327], "eio": [154, 156, 157, 158, 319, 327, 346, 350], "otherwis": [154, 156, 157, 158, 203, 204, 218, 225, 233, 239, 243, 254, 287, 307, 319, 327, 342, 347, 348, 349, 351], "txframe": [156, 158, 319, 327, 333], "rxframe": [156, 158, 319, 327, 333], "numbytesrec": [156, 158, 319, 327], "receiv": [156, 158, 203, 204, 319, 327, 328, 334, 342, 345, 346, 365, 402, 601], "note": [156, 158, 319, 328, 345, 346, 379], "automat": [156, 158, 319, 354], "complet": [156, 158, 281, 282, 285, 286, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 345, 346, 347, 350, 403], "length": [203, 204, 250, 251, 257, 258, 328, 341, 342, 346, 351], "out": [203, 204, 216, 231, 342, 349, 354], "cdc_receive_f": [203, 204, 340, 342, 344, 367, 371], "buf": [203, 204, 342], "len": [203, 204, 207, 210, 322, 328, 329, 342, 346], "perform": [203, 204, 328, 342, 346], "check": [203, 204, 328, 342, 346, 354], "reciev": [203, 204, 342], "transportheader_id_rx_getfirmwarevers": [203, 204, 342], "transportheader_id_rx_getoutputdatar": [203, 204, 342], "transportheader_id_rx_setoutputdatara": [203, 204, 342], "transportheader_id_rx_getrang": [203, 204, 342], "transportheader_id_rx_setrang": [203, 204, 342], "transportheader_id_rx_getscal": [203, 204, 342], "transportheader_id_rx_setscal": [203, 204, 342], "transportheader_id_rx_getdevicesetup": [203, 204, 342], "transportheader_id_rx_devicereboot": [203, 204, 342], "transportheader_id_rx_samplingstart": [203, 204, 342], "transportheader_id_rx_samplingstop": [203, 204, 342], "pimpl": [203, 204, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 282, 285, 286, 287, 292, 295, 296, 298, 303, 305, 306, 307, 311, 312, 313, 315, 328, 340, 342, 346, 347, 351, 366, 367, 368], "fragment": [203, 204, 328, 342], "onreceiv": [203, 204, 342], "reset": [205, 206, 217, 221, 229, 232, 236, 241, 344, 349, 375, 528, 555, 600], "intern": [205, 206, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 344, 351, 352, 377, 378], "state": [205, 206, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 297, 314, 318, 328, 331, 344, 347, 350, 351, 352, 377, 378], "usual": [205, 206, 344], "when": [205, 206, 344, 345, 346, 354, 373, 402, 403], "new": [205, 206, 344, 350, 601], "stream": [205, 206, 344, 345, 373, 403, 510, 600], "start": [205, 206, 216, 231, 243, 250, 254, 257, 298, 300, 315, 316, 344, 345, 347, 349, 350, 351, 354, 373, 375, 388, 395, 404, 510, 560, 600, 601], "upon": [205, 206, 340, 344, 345, 367, 402], "user": [205, 206, 328, 344, 345, 402, 405, 600, 601], "request": [205, 206, 250, 257, 328, 329, 334, 341, 344, 345, 351, 365, 380, 388, 389, 402, 405, 501, 522, 551, 566], "bool": [209, 212, 219, 224, 234, 238, 322, 328, 329, 341, 344, 346, 348, 349, 350, 352, 373, 375, 378], "storag": [215, 230, 318, 324, 348, 349, 353, 374], "itemscount": [215, 230, 318, 324, 348, 349, 375], "itemsizebyt": [215, 223, 230, 237, 318, 324, 348, 349, 374, 375], "end": [216, 231, 318, 324, 345, 348, 349, 350, 375, 403], "without": [216, 231, 336, 338, 345, 349, 364, 379, 403, 414, 415, 416, 417, 418, 600], "zero": [216, 231, 349, 354], "maximum": [217, 232, 300, 316, 328, 334, 344, 345, 347, 349, 373, 375, 395, 510, 560], "seen": [217, 232, 338, 340, 345, 349, 363, 366, 409, 464, 465, 467, 559, 579, 587, 595, 596, 597], "sinc": [217, 221, 229, 232, 236, 241, 300, 316, 344, 345, 347, 349, 354, 373, 375, 387, 395, 408, 510, 528, 555, 560], "last": [217, 221, 229, 232, 236, 241, 345, 349, 387, 395, 408, 560, 600], "number": [217, 221, 228, 229, 232, 236, 240, 241, 287, 307, 345, 346, 347, 349, 350, 354, 375, 395], "item": [217, 218, 220, 221, 225, 228, 229, 232, 233, 235, 236, 239, 240, 241, 300, 316, 345, 346, 347, 348, 349, 353, 374, 375, 395, 528, 555, 565], "store": [217, 225, 228, 229, 232, 239, 240, 241, 346, 349, 374, 375, 528, 600], "possibl": [218, 225, 233, 239, 328, 344, 348, 349, 350, 354, 373, 510], "enodata": [218, 233, 243, 254, 287, 307, 328, 346, 347, 348, 349, 350, 351, 353], "empti": [218, 224, 233, 238, 348, 349, 353], "full": [219, 225, 234, 239, 335, 348, 349, 599], "true": [219, 224, 234, 238, 324, 328, 331, 344, 348, 349, 350, 353, 373], "exhaust": [219, 234, 346, 349], "slot": [220, 228, 235, 240, 300, 316, 347, 348, 349], "counter": [221, 229, 236, 241, 349, 350], "track": [221, 229, 236, 241, 287, 307, 344, 347, 349, 373, 375, 510], "success": [221, 229, 236, 241, 287, 307, 345, 347, 349, 395], "remov": [221, 236, 349], "attempt": [221, 229, 236, 241, 349, 354], "input": [225, 239, 349], "eoverflow": [225, 239, 243, 254, 328, 348, 349, 350, 351, 353], "us": [228, 240, 344, 348, 349, 354, 373, 600, 601], "between": [228, 240, 328, 336, 338, 349, 350, 414, 415, 600], "65535": [228, 240, 349, 353], "put": [229, 241, 345, 349, 353, 395], "argc": [242, 355], "char": [242, 353, 355], "argv": [242, 355], "stop": [243, 251, 254, 258, 296, 313, 345, 347, 351, 389, 402, 405, 600], "finish": [243, 254, 285, 305, 344, 345, 346, 347, 351, 373, 403], "abort": [243, 254, 286, 306, 345, 347, 351, 402], "messag": [243, 254, 351, 354, 601], "accordingli": [243, 254, 327, 351], "depend": [243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 328, 346, 351], "eagain": [243, 254, 346, 350, 351], "ovl": [243, 254, 351], "wa": [243, 250, 254, 257, 287, 307, 328, 345, 347, 351, 354, 402], "detect": [243, 254, 351, 354], "all": [243, 254, 287, 307, 340, 345, 346, 347, 351, 354, 366, 403, 501, 600], "sampling_startn": [243, 254, 351], "handler": [246, 248, 252, 253, 255, 256, 259, 260, 328, 351], "rise": [246, 253, 255, 260, 351], "edg": [246, 248, 253, 255, 256, 260, 351], "exti2_irqhandl": [246, 248, 255, 256, 340, 351, 368], "fall": [248, 256, 351], "up": [250, 257, 344, 351, 354, 373, 600], "n": [250, 257, 349, 351, 374], "so": [250, 251, 257, 258, 328, 351, 354, 600], "far": [250, 251, 257, 258, 351, 354], "indefinit": [250, 257, 351], "infinit": [250, 257, 351], "wait": [252, 259, 351], "timer": [252, 259, 351], "tim3_irqhandl": [252, 259, 340, 351, 368], "exti3_irqhandl": [253, 260, 340, 351, 368], "sensorodr": [281, 292, 296, 302, 311, 313, 346, 347], "block": [281, 282, 285, 286, 287, 288, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 346, 347], "count": [287, 307, 346, 347], "firstindex": [287, 307, 328, 346, 347], "busi": [287, 307, 344, 346, 347, 373], "later": [287, 307, 328, 347, 354, 600], "To": [287, 307, 347, 350, 354, 600], "consum": [287, 307, 346, 347, 353], "being": [287, 307, 347], "null": [287, 307, 327, 328, 329, 333, 341, 346, 347, 348, 350, 354], "remain": [287, 307, 346, 347, 353], "first": [287, 307, 347, 354, 600], "ebusi": [287, 307, 347], "avail": [287, 307, 347, 354], "sensorscal": [288, 292, 296, 308, 311, 313, 346, 347], "uptimem": [291, 310, 346, 347], "uptim": [291, 310, 345, 347, 387], "sensorrang": [292, 296, 301, 311, 313, 317, 346, 347], "firmwar": [295, 312, 345, 347, 383, 399, 600], "max_sampl": [298, 315, 346, 347], "total": [300, 316, 345, 347, 349, 375, 395, 528, 555], "greatest": [300, 316, 347], "largest": [300, 316, 344, 345, 347, 373, 395, 510], "chunk": [300, 316, 344, 345, 346, 347, 350, 373, 395, 510], "document": [318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 600], "dotransmitframeimpl": [318, 319, 333, 334, 365], "dotransmitreceiveframeimpl": [318, 319, 333, 334, 365], "init": [318, 328, 340, 350, 366, 369, 600], "loop": [318, 328, 340, 366], "requestreboot": [318, 328, 329, 340, 366], "onrequestgetfirmwarevers": [318, 328, 329, 340, 367], "onrequestgetoutputdatar": [318, 328, 329, 340, 367], "onrequestsetoutputdatatr": [318, 328, 329, 340, 367], "onrequestgetrang": [318, 328, 329, 340, 367], "onrequestsetrang": [318, 328, 329, 340, 367], "onrequestgetscal": [318, 328, 329, 340, 367], "onrequestsetscal": [318, 328, 329, 340, 367], "onrequestgetdevicesetup": [318, 328, 329, 340, 367], "onrequestsamplingstart": [318, 328, 329, 340, 367], "onrequestsamplingstop": [318, 328, 329, 340, 367], "onrequestuptim": [318, 328, 329, 340, 367], "onrequestbufferstatu": [318, 328, 329, 340, 367], "dotakebyt": [318, 328, 340, 367], "dosetfifowatermark": [318, 328, 340, 368], "doclearfifowatermark": [318, 328, 340, 368], "dosetfifooverflow": [318, 328, 340, 368], "doset5ustimerexpir": [318, 328, 340, 368], "dotakereceivedpacketimpl": [318, 328, 341, 344, 371], "fromhost": [318, 328, 341, 344, 372], "tohost": [318, 328, 343, 344, 346, 372], "dotransmitimpl": [318, 328, 344, 346, 373], "istransmitbusyimpl": [318, 328, 344, 346, 373], "begin": [318, 324, 348, 349, 375], "isful": [318, 324, 348, 349, 375], "isempti": [318, 324, 348, 349, 375], "maxcapacityus": [318, 348, 349, 375], "doenablesensorimpl": [318, 328, 350, 352, 377], "dodisablesensorimpl": [318, 328, 350, 352, 377], "dofetchsensoraccelerationimpl": [318, 328, 350, 352, 377], "dowaitdelay5usimpl": [318, 328, 350, 352, 377], "doforwardaccelerationbufferimpl": [318, 328, 350, 352, 377], "onsamplingstartedcb": [318, 328, 350, 352, 377], "onsamplingstoppedcb": [318, 328, 350, 352, 377], "onsamplingabortedcb": [318, 328, 350, 352, 377], "onsamplingfinishedcb": [318, 328, 350, 352, 377], "onfifooverflowcb": [318, 328, 350, 352, 377], "onbufferoverflowcb": [318, 328, 350, 352, 377], "ontransmissionerrorcb": [318, 328, 350, 352, 377], "dostart": [318, 328, 350, 352, 378], "dostop": [318, 328, 350, 352, 378], "isstart": [318, 328, 350, 352, 378], "waitfor5ustim": [318, 328, 331, 350, 352, 378], "rxbuffer": [318, 328, 350, 352, 378], "isfifooverflowset": [318, 328, 350, 352, 378], "isfifowatermarkset": [318, 328, 350, 352, 378], "transactionscount": [318, 328, 350, 352, 378], "pragma": [319, 320, 321, 322, 323, 324, 325, 326, 334, 335, 336, 337, 338, 340, 342, 344, 345, 347, 349, 351, 352, 355], "includ": [319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 379, 413, 414, 415, 416, 417, 418], "param": [319, 327, 328, 342, 344, 346, 347, 348, 349, 351], "device_impl": [320, 328], "nolintnextlin": [320, 324, 327, 328, 329, 330, 331, 334, 338, 341, 344, 345, 346, 347, 348, 350], "cppcoreguidelin": [320, 324, 328, 329, 330, 331, 350], "avoid": [320, 324, 328, 329, 330, 331, 348, 350, 354], "non": [320, 324, 328, 329, 330, 331, 601], "global": [320, 324, 328, 329, 330, 331], "variabl": [320, 324, 328, 329, 330, 331, 350, 413], "extern": [320, 324, 329, 331], "hal_gpio_writepin": [321, 323, 327], "user_debug0_gpio_port": 321, "user_debug0_pin": 321, "gpio_pin_set": [321, 323, 327], "gpio_pin_reset": [321, 323, 327], "hal_gpio_togglepin": [321, 323], "user_debug1_gpio_port": 321, "user_debug1_pin": 321, "volatil": [322, 328, 329, 340, 344, 346, 352, 366], "user_led0_gpio_port": 323, "user_led0_pin": 323, "modern": [324, 326, 334, 344, 347, 352], "sizeof": [324, 328, 333, 338, 345, 349, 353, 374, 591, 592], "stm32f401xc": 324, "ringbuffer_storage_item": [324, 328, 591, 592], "3200u": 324, "30kb": 324, "ram": 324, "elif": 324, "stm32f411xe": 324, "7260u": 324, "65kb": 324, "endif": [324, 354], "fals": [324, 328, 341, 348, 350, 353], "sh": [326, 332, 601], "endcod": [326, 332, 349], "10": [326, 327, 335, 354], "nolint": [326, 328, 352], "low": 327, "static": [327, 328, 333, 346, 348, 350], "spi1_ss_gpio_port": 327, "spi1_ss_pin": 327, "bugpron": [327, 328, 341, 346, 348], "easili": [327, 346, 348], "swappabl": [327, 346, 348], "timeoutm": 327, "hal_spi_rec": 327, "hspi1": 327, "els": [327, 353, 354], "tx_frame": [327, 333], "hal_spi_transmit": 327, "A": [328, 354, 600], "clang": [328, 334, 338, 345], "format": [328, 333, 354], "off": [328, 354], "readabl": [328, 334, 336, 338, 345, 350, 412, 414], "redund": [328, 334, 338, 345], "static_assert": [328, 334, 338, 345], "allow": [328, 334, 348, 600, 601], "transporttx": 328, "same": [328, 338, 363], "v": 328, "undef": 328, "public": [328, 340, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 404, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418], "maxsamplescount": 328, "bufferlen": 328, "fault": 328, "reboot": [328, 345, 380], "switch": [328, 329, 333, 341], "ecancel": [328, 350], "branch": [328, 341, 346], "clone": [328, 341, 600], "break": [328, 333, 341, 350], "default": [328, 329, 333, 341, 354], "nvic_systemreset": 328, "decoupl": 328, "context": [328, 334, 340, 344, 352, 365, 366, 367, 368, 369, 371, 373, 377, 378, 582], "execut": [328, 354], "isr": 328, "memset": 328, "due": [328, 348], "un": [328, 348], "issu": [328, 346, 348], "incom": 328, "unfrag": 328, "packet": [328, 344, 373], "basic": 328, "onli": [328, 344, 346, 354, 373, 600], "further": [328, 354], "dispatch": 328, "deleg": 328, "hal_gettick": 328, "adxlodr": 328, "ret": [328, 350], "adxlscal": 328, "adxlrang": 328, "ugli": [328, 354], "style": [328, 336, 338, 345, 414, 415, 417, 418], "convers": 328, "favour": 328, "match": [328, 354], "sensorsampl": 328, "most": [328, 345, 354, 396], "like": [328, 354], "anyth": [328, 354], "while": [328, 331, 345, 346, 350, 353, 354, 407], "hard": 328, "cdc_transmit_f": 329, "usbd_ok": 329, "usbd_busi": 329, "usbd_emem": 329, "usbd_fail": 329, "tim3": 331, "cnt": 331, "hal_tim_base_start_it": 331, "htim3": 331, "hal_tim_base_stop_it": 331, "addr": 333, "reg": 333, "int1": [333, 600], "int2": [333, 600], "enabl": [333, 354], "rx_frame": 333, "32u": 334, "24u": [334, 347, 352, 378], "diagnost": [334, 338, 345], "implicit": [334, 338, 345], "minimum": 334, "hw": [334, 345, 365, 403], "point": [334, 354, 365], "underli": [334, 338, 340, 346, 365, 366, 412], "bu": [334, 365], "definit": [335, 336, 354, 413], "0x00": 335, "0b11100101": 335, "0x01u": 335, "0x1cu": 335, "0x1du": 335, "0x1eu": 335, "0x1fu": 335, "0x20u": 335, "0x21u": 335, "0x22u": 335, "0x23u": 335, "0x24u": 335, "0x25u": 335, "0x26u": 335, "0x27u": 335, "0x28u": 335, "0x29u": 335, "0x2au": 335, "0x2bu": 335, "0x2cu": 335, "0x2du": 335, "0x2eu": 335, "0x2fu": 335, "0x30u": 335, "0x31u": 335, "0x32u": 335, "0x33u": 335, "0x34u": 335, "0x35u": 335, "0x36u": 335, "0x37u": 335, "0x38u": 335, "0x39u": 335, "0b00u": [335, 345, 534], "0b01u": [335, 345, 573], "0b10u": [335, 345, 529], "0b11u": [335, 345, 496], "1u": [335, 345, 492, 566], "10bit": 335, "resolut": 335, "16": [335, 349, 353, 354, 374], "maintain": 335, "lsb": 335, "0b1111u": [335, 345, 489], "0b1110u": [335, 345, 558], "0b1101u": [335, 345, 494], "0b1100u": [335, 345, 509], "0b1011u": [335, 345, 590], "0b1010u": [335, 345, 515], "0b1001u": [335, 345, 576], "0b1000u": 335, "0b0111u": 335, "0b0110u": 335, "0b0101u": 335, "0b0100u": 335, "0b0011u": 335, "0b0010u": 335, "0b0001u": 335, "0b0000u": 335, "4": [336, 345, 353, 354], "adxl345register_bwrate_r": [336, 345, 356, 396, 424, 499, 526], "adxl345register_bwrate_lowpow": [336, 356, 419], "reserv": [336, 338, 356, 357, 359, 362, 364, 425, 430, 435, 449, 462], "adxl345register_powerctl_wakeup": [336, 362, 420], "adxl345register_powerctl_sleep": [336, 362, 452], "adxl345register_powerctl_measur": [336, 362, 433], "adxl345register_powerctl_autosleep": [336, 362, 438], "adxl345register_powerctl_link": [336, 362, 423], "adxl345register_intenable_overrun": [336, 360, 440], "adxl345register_intenable_watermark": [336, 360, 426], "adxl345register_intenable_freefal": [336, 360, 437], "adxl345register_intenable_inact": [336, 360, 431], "adxl345register_intenable_act": [336, 360, 439], "adxl345register_intenable_doubletap": [336, 360, 445], "adxl345register_intenable_singletap": [336, 360, 436], "adxl345register_intenable_datareadi": [336, 360, 432], "adxl345register_intmap_overrun": [336, 361], "adxl345register_intmap_watermark": [336, 361], "adxl345register_intmap_freefal": [336, 361], "adxl345register_intmap_inact": [336, 361], "adxl345register_intmap_act": [336, 361], "adxl345register_intmap_doubletap": [336, 361], "adxl345register_intmap_singletap": [336, 361], "adxl345register_intmap_datareadi": [336, 361], "adxl345register_dataformat_rang": [336, 345, 357, 396, 441, 546], "adxl345register_dataformat_justifi": [336, 357, 434], "adxl345register_dataformat_fullr": [336, 357, 455], "adxl345register_dataformat_intinvert": [336, 357, 444], "adxl345register_dataformat_spi": [336, 357, 429], "adxl345register_dataformat_selftest": [336, 357, 446], "5": [336, 350], "tabl": [336, 358, 453], "38": [336, 358, 453], "function": [336, 346, 347, 350, 354, 358, 413, 453], "adxl345register_fifoctl_sampl": [336, 358, 453], "adxl345register_fifoctl_trigg": [336, 358, 451], "adxl345register_fifoctl_fifomod": [336, 358, 427], "6": [336, 346], "adxl345register_fifostatus_entri": [336, 359, 454], "adxl345register_fifostatus_fifotrig": [336, 359, 443], "cast": [336, 338, 345, 354, 364, 414, 415, 416, 417, 418, 421, 422, 428, 442, 447, 448, 450, 458, 459, 460, 461, 463, 466, 508], "raw": [336, 338, 345, 409, 414, 415], "0x80u": 337, "0x00u": 337, "0x40u": 337, "access": [338, 364, 412, 416], "pad": [338, 364, 416], "shift": [338, 364, 416], "magic": [338, 350, 364, 416], "word": [338, 415, 416], "adxl345datapaddedregist": [338, 416, 459], "2u": [338, 345, 574], "2b": 338, "larg": 338, "layout": [338, 363], "report": [338, 363, 600], "int16_t": [338, 345, 352, 363, 376, 409, 464, 465, 467, 559, 579, 587, 595, 596, 597], "axi": [338, 345, 363, 409, 464, 465, 467, 559, 579, 587, 595, 596, 597], "perspect": [338, 354, 363, 464, 465, 467, 559, 579, 587, 595, 596, 597], "adxl345_acceler": [338, 415, 466, 508], "callback": [340, 367], "sever": [340, 366], "pointer": [340, 348, 349, 354, 366, 374, 375], "share": [340, 366], "among": [340, 366], "henc": [340, 345, 366], "member": [340, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 388, 390, 391, 392, 393, 395, 396, 397, 399, 400, 401, 404, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418], "never": [340, 366], "field": [340, 366], "mai": [340, 354, 366, 601], "chang": [340, 354, 366], "though": [340, 354, 366], "These": [340, 354, 366], "mark": [340, 366, 600], "properli": [340, 354, 366], "synchron": [340, 366], "stm32f4xx_it": [340, 345, 366, 533, 538, 540, 589], "sizeok": 341, "2048u": 344, "circular": [344, 349, 373, 374], "outgo": [344, 373], "pile": [344, 373], "ha": [344, 345, 346, 350, 354, 373, 402, 403, 405], "postpon": [344, 373], "txbuffer": [344, 346, 373], "keep": [344, 349, 354, 373, 375, 510], "2kb": [344, 373, 510], "copi": [344, 346, 373], "over": [344, 373], "goe": [344, 373], "usbd_cdc_transport_typ": 345, "recept": 345, "ar": [345, 346, 354, 600], "compos": 345, "subsequ": [345, 346, 600], "pe": 345, "dedic": [345, 522, 551, 566], "uniqu": [345, 501, 551, 566], "respons": [345, 400, 401, 403, 406, 501, 522, 551, 566], "3u": [345, 491], "4u": [345, 583], "5u": [345, 556], "6u": [345, 516], "7u": [345, 570], "8u": [345, 502], "9u": [345, 495], "10u": [345, 542], "17u": [345, 501], "18u": [345, 507], "19u": [345, 517], "25u": [345, 551], "26u": [345, 513], "27u": [345, 553], "28u": [345, 578], "29u": [345, 544], "30u": [345, 493], "31u": [345, 562], "indirect": [345, 522], "33u": [345, 522], "34u": [345, 537], "35u": [345, 504], "36u": [345, 569], "37u": [345, 500], "38u": [345, 506], "39u": [345, 539], "40u": [345, 511], "41u": [345, 563], "unexpect": 345, "retriev": [345, 348, 350, 381, 382, 383, 384, 385, 386, 387], "mot": [345, 382], "relev": [345, 382, 396], "boot": [345, 387, 408], "occur": [345, 394, 398], "been": [345, 346, 402, 403, 405], "successfulli": [345, 349, 375, 403, 528, 555], "adxl345register_dataformat_fullresbit": [345, 396], "whatev": [345, 354, 405], "reason": [345, 346, 354, 405], "whenev": [345, 405], "gather": [345, 405], "an": [345, 354, 393, 397, 409, 600], "elaps": [345, 408], "microsecond": [345, 408], "term": [345, 395, 565], "directli": [345, 379], "space": [345, 379], "tohostapi": 346, "accelerationschunk": 346, "datacount": 346, "sizeofitem": 346, "ani": [346, 354], "idx": [346, 348, 350, 353], "enomem": [346, 350], "nextinchunk": 346, "txbuffers": 346, "poppeditemscount": 346, "pop": [346, 350], "altera": 346, "backward": 346, "nextintxbuff": 346, "either": [346, 354], "doe": [346, 354], "insist": 346, "poll": 346, "client": 346, "everi": [346, 354], "1m": 346, "lesser": 346, "even": [346, 354], "slower": 346, "weak": 346, "raspberri": 346, "pi": 346, "similar": 346, "usertxbufferf": 346, "other": [346, 354], "rpi": 346, "4b": 346, "pyseri": 346, "bottleneck": 346, "odr1600": 346, "higher": 346, "hiccup": 346, "20m": 346, "have": [346, 354], "observ": 346, "where": [346, 348, 354], "did": [346, 354], "serial": [346, 354], "turn": 346, "kernel": 346, "driver": 346, "subject": 346, "time": [346, 353, 354, 600], "tinker": 346, "python": [346, 600], "mitig": 346, "strategi": 346, "highest": 346, "cold": 346, "3200k": 346, "b": [346, 600], "28800b": 346, "pend": 346, "contain": 346, "would": [346, 354], "we": [346, 354], "bytebuff": 346, "todo": [346, 350], "enforc": 346, "txbyte": 346, "inclus": [346, 354], "sequenc": 346, "advanc": 348, "alreadi": [348, 354], "nextendindex": 348, "nextbeginindex": 348, "given": 348, "memcpi": 348, "size_t": 348, "naiv": 349, "storabl": [349, 375], "statist": [349, 375, 528, 555], "current": [349, 350, 375], "taken": [349, 375, 555], "manner": [349, 374, 600], "offset": [349, 374], "proper": [349, 374], "arithmet": [349, 374], "fetch": [350, 600], "cognit": 350, "complex": [350, 354], "retstat": 350, "rettx": 350, "rxcount": 350, "um": 350, "p21": 350, "ensur": [350, 600], "move": [350, 353], "datax": 350, "datai": 350, "dataz": 350, "least": [350, 354], "\u00b5": 350, "fifo_statu": 350, "0x39": 350, "signifi": 350, "transit": 350, "0x37": 350, "0x38": 350, "refactor": 350, "retri": 350, "option": [350, 354, 600, 601], "introduc": [350, 353], "delai": 350, "10000u": 350, "cancel": 350, "3": [353, 600], "test_assert_equ": 353, "42": 353, "item1": 353, "item2": 353, "100": 353, "msg": 353, "snprintf": 353, "d": 353, "255": 353, "expectedreturn": 353, "test_assert_equal_int_messag": 353, "expecteditemscount": 353, "65534": 353, "window": 353, "unity_begin": 353, "run_test": 353, "unity_end": 353, "As": 354, "11th": 354, "2016": 354, "throwtheswitch": 354, "commit": 354, "837c529": 354, "updat": 354, "decemb": 354, "29th": 354, "doc": [354, 600], "unityconfigurationguid": 354, "pdf": 354, "design": 354, "almost": 354, "target": [354, 600], "compil": [354, 600], "It": [354, 600], "awesom": 354, "done": 354, "some": 354, "come": 354, "close": 354, "dream": 354, "sadli": 354, "univers": 354, "you": 354, "need": 354, "coupl": 354, "thei": 354, "live": 354, "insid": 354, "unity_intern": 354, "don": 354, "t": [354, 600], "necessarili": 354, "open": 354, "unless": 354, "realli": 354, "That": 354, "proof": 354, "cross": 354, "platform": 354, "librari": [354, 599], "challeng": 354, "build": [354, 600], "more": [354, 600, 601], "posit": 354, "great": 354, "deal": 354, "central": 354, "primarili": 354, "place": [354, 600], "experi": 354, "elsewher": 354, "doesn": 354, "matter": 354, "re": 354, "simul": 354, "nativ": [354, 600], "In": 354, "ve": 354, "got": 354, "choic": 354, "becaus": 354, "pass": 354, "your": [354, 600], "through": 354, "command": [354, 600], "embed": 354, "forc": 354, "overbear": 354, "somewher": 354, "creat": 354, "custom": 354, "present": 354, "toolchain": 354, "search": 354, "do": 354, "unity_include_config_h": 354, "reli": 354, "ifndef": 354, "unity_config_h": 354, "integ": 354, "concept": 354, "vari": 354, "standard": 354, "rule": 354, "microprocessor": 354, "its": 354, "relat": 354, "anoth": 354, "64": 354, "There": 354, "compliant": 354, "c99": 354, "certainli": 354, "encount": 354, "therefor": 354, "featur": 354, "help": [354, 601], "adjust": 354, "itself": 354, "requir": [354, 600, 601], "try": 354, "guess": 354, "limit": [354, 600], "support": 354, "stdint": 354, "want": 354, "make": 354, "skip": 354, "look": 354, "uint_max": 354, "ulong_max": 354, "were": 354, "c89": 354, "unity_exclude_limits_h": 354, "second": 354, "thing": 354, "uintptr_max": 354, "learn": 354, "system": 354, "wai": 354, "know": 354, "won": 354, "unity_exclude_stdint_h": 354, "manual": [354, 600], "disabl": 354, "abov": 354, "yourself": 354, "just": 354, "hand": 354, "unity_int_width": 354, "long": 354, "autodetect": 354, "figur": 354, "what": 354, "kind": 354, "get": 354, "On": 354, "ignor": 354, "unity_long_width": 354, "warn": 354, "unity_pointer_width": 354, "width": 354, "greater": 354, "none": [354, 600], "signific": 354, "speed": 354, "impact": 354, "small": 354, "unity_include_64": 354, "float": 354, "world": 354, "uncommon": 354, "precis": 354, "abl": 354, "fly": 354, "alwai": 354, "sometim": 354, "result": 354, "By": [354, 413], "doubl": 354, "easi": 354, "exclud": 354, "here": 354, "neither": 354, "both": 354, "suit": 354, "unity_exclude_float": 354, "unity_include_doubl": 354, "unity_exclude_doubl": 354, "becom": 354, "footprint": 354, "print": [354, 600], "minimalist": 354, "eventu": 354, "chose": 354, "develop": [354, 600], "our": 354, "own": 354, "still": 354, "displai": 354, "dure": 354, "failur": 354, "actual": 354, "fail": 354, "produc": 354, "25": 354, "verbos": 354, "give": 354, "Not": 354, "within": 354, "delta": 354, "trim": 354, "binari": 354, "unity_exclude_float_print": 354, "assum": 354, "compar": 354, "specialti": 354, "overrid": 354, "behavior": 354, "unity_float_typ": 354, "float16_t": 354, "someth": 354, "unity_double_typ": 354, "gargantuan": 354, "processor": 354, "instead": 354, "unity_assert_equal_float": 354, "unity_assert_equal_doubl": 354, "guid": 354, "two": 354, "rather": [354, 600], "enough": 354, "normal": 354, "approxim": 354, "direct": 354, "00001": 354, "12": 354, "detail": [354, 413, 600, 601], "appendix": 354, "unity_float_precis": 354, "001f": 354, "unity_double_precis": 354, "miscellan": 354, "stddef": 354, "sure": 354, "unity_exclude_stddef_h": 354, "test_printf": 354, "unity_include_print_format": 354, "toolset": 354, "addit": 354, "handi": 354, "touch": 354, "certain": 354, "particularli": 354, "those": 354, "jump": 354, "extra": 354, "hoop": 354, "situat": 354, "stdout": 354, "perfectli": 354, "fine": 354, "rout": 354, "back": 354, "howev": 354, "lack": 354, "dump": 354, "unity_output_char": 354, "accept": 354, "charact": 354, "putchar": 354, "commonli": 354, "replac": 354, "sai": 354, "decid": 354, "rs232_putc": 354, "wrote": 354, "thu": 354, "unity_output_char_header_declar": 354, "unity_output_flush": 354, "rs232_flush": 354, "unity_output_flush_header_declar": 354, "unity_output_start": 354, "rs232_config": 354, "115200": 354, "8": 354, "unity_output_complet": 354, "rs232_close": 354, "transport_arduino_arch_stm32": 354, "attribut": 354, "assign": 354, "safe": [354, 600], "unity_ptr_attribut": 354, "m": 354, "unnam": [366, 367, 368], "group": [366, 367, 368], "subdirectori": 413, "descript": 413, "class": 413, "doxygenvari": [469, 475], "anonym": [561, 594], "prerequisit": 599, "workflow": 599, "connect": 599, "refer": 599, "wireshark": 599, "dissector": 599, "3dp": [599, 600], "axxel": 599, "act": 600, "proxi": 600, "real": 600, "blackpil": 600, "board": 600, "arm": 600, "stm32f401": 600, "lost": 600, "equidist": 600, "py3dpaxxel": 600, "realiz": 600, "platformio": 600, "flash": 600, "cubemx": 600, "resourc": 600, "plane": 600, "stm32pio": 600, "tool": 600, "glue": 600, "virtual": 600, "com": 600, "port": 600, "cdc": 600, "standalon": 600, "script": 600, "cli": 600, "decod": [600, 601], "tabular": 600, "separ": 600, "octoprint": 600, "plugin": 600, "io": 600, "step": 600, "instal": 600, "environ": 600, "achiev": 600, "pip": 600, "cd": 600, "shell": 600, "cubemx_cmd": 600, "ini": 600, "correctli": 600, "app": 600, "platformio_cmd": 600, "stm32cubemx": 600, "java_cmd": 600, "visibl": 600, "desir": 600, "pio": 600, "clion": 600, "edit": 600, "ioc": 600, "exist": 600, "unit": 600, "iter": 600, "upload": 600, "latest": 600, "essenti": 600, "boil": 600, "down": 600, "git": 600, "http": 600, "attach": 600, "stlink": 600, "pc": 600, "server": 600, "shovel": 600, "kei": 600, "aspect": 600, "fourier": 600, "transform": 600, "accelero": 600, "meter": 600, "post": 600, "pro": 600, "pa12": 600, "usb_otg_fs_dp": 600, "cess": 600, "pa11": 600, "usb_otg_fs_dm": 600, "exti2": 600, "pa2": 600, "exti3": 600, "pa3": 600, "pa4": 600, "pa5": 600, "scl": 600, "u": 600, "pa6": 600, "sdo": 600, "5v0": 600, "vcc": 600, "gnd": 600, "3v3": 600, "programm": 600, "swdio": 600, "pa13": 600, "swclk": 600, "pa14": 600, "user_key0": 600, "pa0": 600, "user_led0": 600, "rcc_osc32_in": 600, "pc14": 600, "rcc_osc32_out": 600, "pc15": 600, "user_debug0": 600, "user_debug1": 600, "mco": 600, "pa8": 600, "datasheet": 600, "stm32cube": 600, "framework": 600, "org": 600, "genericstm32h750vb": 600, "found": 600, "36441": 600, "lua": 601, "3dpaxxel": 601, "tshark": 601, "sudo": 601, "modprob": 601, "usbmon": 601, "superus": 601, "captur": 601, "login": 601, "restart": 601, "x11": 601, "etc": 601, "dpkg": 601, "reconfigur": 601, "common": 601, "usermod": 601, "altern": 601}, "objects": {"": [[1, 0, 1, "c.ADXL345_FIFO_ENTRIES", "ADXL345_FIFO_ENTRIES"], [2, 0, 1, "c.ADXL345_HANDLE_INITIALIZER", "ADXL345_HANDLE_INITIALIZER"], [0, 0, 1, "c.ADXL345_WATERMARK_LEVEL", "ADXL345_WATERMARK_LEVEL"], [19, 0, 1, "c.RINGBUFFER_DECLARE_INITIALIZER", "RINGBUFFER_DECLARE_INITIALIZER"], [21, 0, 1, "c.RINGBUFFER_INDEX_INITIALIZER", "RINGBUFFER_INDEX_INITIALIZER"], [22, 0, 1, "c.RINGBUFFER_INITIALIZER", "RINGBUFFER_INITIALIZER"], [18, 0, 1, "c.RINGBUFFER_STORAGE_ITEM_SIZE_BYTES", "RINGBUFFER_STORAGE_ITEM_SIZE_BYTES"], [20, 0, 1, "c.RINGBUFFER_STORAGE_SIZE_BYTES", "RINGBUFFER_STORAGE_SIZE_BYTES"], [23, 0, 1, "c.SAMPLING_NUM_SAMPLES_READ_AT_ONCE", "SAMPLING_NUM_SAMPLES_READ_AT_ONCE"], [14, 0, 1, "c.SIZEOF_HEADER_INCL_PAYLOAD", "SIZEOF_HEADER_INCL_PAYLOAD"], [27, 0, 1, "c.TRANSPORTTX_TRANSMIT_ACCELERATION_BUFFER_BYTES", "TRANSPORTTX_TRANSMIT_ACCELERATION_BUFFER_BYTES"], [13, 0, 1, "c.TRANSPORTTX_TRANSMIT_TX_DATA_CHUNK_BUFFER_BYTES", "TRANSPORTTX_TRANSMIT_TX_DATA_CHUNK_BUFFER_BYTES"], [28, 0, 1, "c.UNITY_INCLUDE_EXEC_TIME", "UNITY_INCLUDE_EXEC_TIME"], [9, 0, 1, "c.USER_DEBUG0_HIGH", "USER_DEBUG0_HIGH"], [7, 0, 1, "c.USER_DEBUG0_LOW", "USER_DEBUG0_LOW"], [11, 0, 1, "c.USER_DEBUG0_TOGGLE", "USER_DEBUG0_TOGGLE"], [12, 0, 1, "c.USER_DEBUG1_HIGH", "USER_DEBUG1_HIGH"], [10, 0, 1, "c.USER_DEBUG1_LOW", "USER_DEBUG1_LOW"], [8, 0, 1, "c.USER_DEBUG1_TOGGLE", "USER_DEBUG1_TOGGLE"], [15, 0, 1, "c.USER_LED0_OFF", "USER_LED0_OFF"], [16, 0, 1, "c.USER_LED0_ON", "USER_LED0_ON"], [17, 0, 1, "c.USER_LED0_TOGGLE", "USER_LED0_TOGGLE"], [30, 0, 1, "c.VERSION", "VERSION"], [29, 0, 1, "c.VERSION_MAJOR", "VERSION_MAJOR"], [32, 0, 1, "c.VERSION_MINOR", "VERSION_MINOR"], [31, 0, 1, "c.VERSION_PATCH", "VERSION_PATCH"], [561, 1, 1, "_CPPv4Ut1_2", "[anonymous]"], [83, 2, 1, "_CPPv420Adxl345Flags_Address", "Adxl345Flags_Address"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_actInactCtlE", "Adxl345Flags_Address::Adxl345Flags_Address_actInactCtl"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address33Adxl345Flags_Address_actTapStatusE", "Adxl345Flags_Address::Adxl345Flags_Address_actTapStatus"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_bwRateE", "Adxl345Flags_Address::Adxl345Flags_Address_bwRate"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_dataFormatE", "Adxl345Flags_Address::Adxl345Flags_Address_dataFormat"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataX0E", "Adxl345Flags_Address::Adxl345Flags_Address_dataX0"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataX1E", "Adxl345Flags_Address::Adxl345Flags_Address_dataX1"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataY0E", "Adxl345Flags_Address::Adxl345Flags_Address_dataY0"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataY1E", "Adxl345Flags_Address::Adxl345Flags_Address_dataY1"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataZ0E", "Adxl345Flags_Address::Adxl345Flags_Address_dataZ0"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataZ1E", "Adxl345Flags_Address::Adxl345Flags_Address_dataZ1"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_devIdE", "Adxl345Flags_Address::Adxl345Flags_Address_devId"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address24Adxl345Flags_Address_durE", "Adxl345Flags_Address::Adxl345Flags_Address_dur"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_fifoCtlE", "Adxl345Flags_Address::Adxl345Flags_Address_fifoCtl"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_fifoStatusE", "Adxl345Flags_Address::Adxl345Flags_Address_fifoStatus"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_intEnableE", "Adxl345Flags_Address::Adxl345Flags_Address_intEnable"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_intMapE", "Adxl345Flags_Address::Adxl345Flags_Address_intMap"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_intSourceE", "Adxl345Flags_Address::Adxl345Flags_Address_intSource"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_latentE", "Adxl345Flags_Address::Adxl345Flags_Address_latent"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsXE", "Adxl345Flags_Address::Adxl345Flags_Address_offsX"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsYE", "Adxl345Flags_Address::Adxl345Flags_Address_offsY"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsZE", "Adxl345Flags_Address::Adxl345Flags_Address_offsZ"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_powerCtlE", "Adxl345Flags_Address::Adxl345Flags_Address_powerCtl"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_reserved_01E", "Adxl345Flags_Address::Adxl345Flags_Address_reserved_01"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_reserved_1CE", "Adxl345Flags_Address::Adxl345Flags_Address_reserved_1C"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_tapAxesE", "Adxl345Flags_Address::Adxl345Flags_Address_tapAxes"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_thresActE", "Adxl345Flags_Address::Adxl345Flags_Address_thresAct"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_thresFfE", "Adxl345Flags_Address::Adxl345Flags_Address_thresFf"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_thresInactE", "Adxl345Flags_Address::Adxl345Flags_Address_thresInact"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_thresTapE", "Adxl345Flags_Address::Adxl345Flags_Address_thresTap"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_timeFfE", "Adxl345Flags_Address::Adxl345Flags_Address_timeFf"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_timeInactE", "Adxl345Flags_Address::Adxl345Flags_Address_timeInact"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_windowE", "Adxl345Flags_Address::Adxl345Flags_Address_window"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_actInactCtlE", "Adxl345Flags_Address_actInactCtl"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address33Adxl345Flags_Address_actTapStatusE", "Adxl345Flags_Address_actTapStatus"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_bwRateE", "Adxl345Flags_Address_bwRate"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_dataFormatE", "Adxl345Flags_Address_dataFormat"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataX0E", "Adxl345Flags_Address_dataX0"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataX1E", "Adxl345Flags_Address_dataX1"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataY0E", "Adxl345Flags_Address_dataY0"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataY1E", "Adxl345Flags_Address_dataY1"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataZ0E", "Adxl345Flags_Address_dataZ0"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataZ1E", "Adxl345Flags_Address_dataZ1"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_devIdE", "Adxl345Flags_Address_devId"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address24Adxl345Flags_Address_durE", "Adxl345Flags_Address_dur"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_fifoCtlE", "Adxl345Flags_Address_fifoCtl"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_fifoStatusE", "Adxl345Flags_Address_fifoStatus"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_intEnableE", "Adxl345Flags_Address_intEnable"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_intMapE", "Adxl345Flags_Address_intMap"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_intSourceE", "Adxl345Flags_Address_intSource"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_latentE", "Adxl345Flags_Address_latent"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsXE", "Adxl345Flags_Address_offsX"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsYE", "Adxl345Flags_Address_offsY"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsZE", "Adxl345Flags_Address_offsZ"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_powerCtlE", "Adxl345Flags_Address_powerCtl"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_reserved_01E", "Adxl345Flags_Address_reserved_01"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_reserved_1CE", "Adxl345Flags_Address_reserved_1C"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_tapAxesE", "Adxl345Flags_Address_tapAxes"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_thresActE", "Adxl345Flags_Address_thresAct"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_thresFfE", "Adxl345Flags_Address_thresFf"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_thresInactE", "Adxl345Flags_Address_thresInact"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_thresTapE", "Adxl345Flags_Address_thresTap"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_timeFfE", "Adxl345Flags_Address_timeFf"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_timeInactE", "Adxl345Flags_Address_timeInact"], [83, 3, 1, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_windowE", "Adxl345Flags_Address_window"], [62, 2, 1, "_CPPv428Adxl345Flags_BwRate_LowPower", "Adxl345Flags_BwRate_LowPower"], [62, 3, 1, "_CPPv4N28Adxl345Flags_BwRate_LowPower35Adxl345Flags_BwRate_LowPower_normalE", "Adxl345Flags_BwRate_LowPower::Adxl345Flags_BwRate_LowPower_normal"], [62, 3, 1, "_CPPv4N28Adxl345Flags_BwRate_LowPower36Adxl345Flags_BwRate_LowPower_reducedE", "Adxl345Flags_BwRate_LowPower::Adxl345Flags_BwRate_LowPower_reduced"], [62, 3, 1, "_CPPv4N28Adxl345Flags_BwRate_LowPower35Adxl345Flags_BwRate_LowPower_normalE", "Adxl345Flags_BwRate_LowPower_normal"], [62, 3, 1, "_CPPv4N28Adxl345Flags_BwRate_LowPower36Adxl345Flags_BwRate_LowPower_reducedE", "Adxl345Flags_BwRate_LowPower_reduced"], [69, 2, 1, "_CPPv424Adxl345Flags_BwRate_Rate", "Adxl345Flags_BwRate_Rate"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_10E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr0_10"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_20E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr0_20"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_39E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr0_39"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_78E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr0_78"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr100E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr100"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr12_5E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr12_5"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr1600E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr1600"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr1_56E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr1_56"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr200E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr200"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate41Adxl345Flags_BwRate_Rate_normalPowerOdr25E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr25"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr3200E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr3200"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr3_13E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr3_13"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr400E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr400"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate41Adxl345Flags_BwRate_Rate_normalPowerOdr50E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr50"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr6_25E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr6_25"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr800E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_normalPowerOdr800"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr100E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_reducedPowerOdr100"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate44Adxl345Flags_BwRate_Rate_reducedPowerOdr12_5E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_reducedPowerOdr12_5"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr200E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_reducedPowerOdr200"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_reducedPowerOdr25E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_reducedPowerOdr25"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr400E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_reducedPowerOdr400"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_reducedPowerOdr50E", "Adxl345Flags_BwRate_Rate::Adxl345Flags_BwRate_Rate_reducedPowerOdr50"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_10E", "Adxl345Flags_BwRate_Rate_normalPowerOdr0_10"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_20E", "Adxl345Flags_BwRate_Rate_normalPowerOdr0_20"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_39E", "Adxl345Flags_BwRate_Rate_normalPowerOdr0_39"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_78E", "Adxl345Flags_BwRate_Rate_normalPowerOdr0_78"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr100E", "Adxl345Flags_BwRate_Rate_normalPowerOdr100"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr12_5E", "Adxl345Flags_BwRate_Rate_normalPowerOdr12_5"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr1600E", "Adxl345Flags_BwRate_Rate_normalPowerOdr1600"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr1_56E", "Adxl345Flags_BwRate_Rate_normalPowerOdr1_56"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr200E", "Adxl345Flags_BwRate_Rate_normalPowerOdr200"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate41Adxl345Flags_BwRate_Rate_normalPowerOdr25E", "Adxl345Flags_BwRate_Rate_normalPowerOdr25"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr3200E", "Adxl345Flags_BwRate_Rate_normalPowerOdr3200"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr3_13E", "Adxl345Flags_BwRate_Rate_normalPowerOdr3_13"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr400E", "Adxl345Flags_BwRate_Rate_normalPowerOdr400"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate41Adxl345Flags_BwRate_Rate_normalPowerOdr50E", "Adxl345Flags_BwRate_Rate_normalPowerOdr50"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr6_25E", "Adxl345Flags_BwRate_Rate_normalPowerOdr6_25"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr800E", "Adxl345Flags_BwRate_Rate_normalPowerOdr800"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr100E", "Adxl345Flags_BwRate_Rate_reducedPowerOdr100"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate44Adxl345Flags_BwRate_Rate_reducedPowerOdr12_5E", "Adxl345Flags_BwRate_Rate_reducedPowerOdr12_5"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr200E", "Adxl345Flags_BwRate_Rate_reducedPowerOdr200"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_reducedPowerOdr25E", "Adxl345Flags_BwRate_Rate_reducedPowerOdr25"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr400E", "Adxl345Flags_BwRate_Rate_reducedPowerOdr400"], [69, 3, 1, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_reducedPowerOdr50E", "Adxl345Flags_BwRate_Rate_reducedPowerOdr50"], [53, 2, 1, "_CPPv434Adxl345Flags_DataFormat_FullResBit", "Adxl345Flags_DataFormat_FullResBit"], [53, 3, 1, "_CPPv4N34Adxl345Flags_DataFormat_FullResBit40Adxl345Flags_DataFormat_FullResBit_10bitE", "Adxl345Flags_DataFormat_FullResBit::Adxl345Flags_DataFormat_FullResBit_10bit"], [53, 3, 1, "_CPPv4N34Adxl345Flags_DataFormat_FullResBit46Adxl345Flags_DataFormat_FullResBit_fullRes_4mgE", "Adxl345Flags_DataFormat_FullResBit::Adxl345Flags_DataFormat_FullResBit_fullRes_4mg"], [53, 3, 1, "_CPPv4N34Adxl345Flags_DataFormat_FullResBit40Adxl345Flags_DataFormat_FullResBit_10bitE", "Adxl345Flags_DataFormat_FullResBit_10bit"], [53, 3, 1, "_CPPv4N34Adxl345Flags_DataFormat_FullResBit46Adxl345Flags_DataFormat_FullResBit_fullRes_4mgE", "Adxl345Flags_DataFormat_FullResBit_fullRes_4mg"], [63, 2, 1, "_CPPv433Adxl345Flags_DataFormat_IntInvert", "Adxl345Flags_DataFormat_IntInvert"], [63, 3, 1, "_CPPv4N33Adxl345Flags_DataFormat_IntInvert44Adxl345Flags_DataFormat_IntInvert_activeHighE", "Adxl345Flags_DataFormat_IntInvert::Adxl345Flags_DataFormat_IntInvert_activeHigh"], [63, 3, 1, "_CPPv4N33Adxl345Flags_DataFormat_IntInvert43Adxl345Flags_DataFormat_IntInvert_activeLowE", "Adxl345Flags_DataFormat_IntInvert::Adxl345Flags_DataFormat_IntInvert_activeLow"], [63, 3, 1, "_CPPv4N33Adxl345Flags_DataFormat_IntInvert44Adxl345Flags_DataFormat_IntInvert_activeHighE", "Adxl345Flags_DataFormat_IntInvert_activeHigh"], [63, 3, 1, "_CPPv4N33Adxl345Flags_DataFormat_IntInvert43Adxl345Flags_DataFormat_IntInvert_activeLowE", "Adxl345Flags_DataFormat_IntInvert_activeLow"], [80, 2, 1, "_CPPv431Adxl345Flags_DataFormat_Justify", "Adxl345Flags_DataFormat_Justify"], [80, 3, 1, "_CPPv4N31Adxl345Flags_DataFormat_Justify40Adxl345Flags_DataFormat_Justify_lsbRightE", "Adxl345Flags_DataFormat_Justify::Adxl345Flags_DataFormat_Justify_lsbRight"], [80, 3, 1, "_CPPv4N31Adxl345Flags_DataFormat_Justify39Adxl345Flags_DataFormat_Justify_msbLeftE", "Adxl345Flags_DataFormat_Justify::Adxl345Flags_DataFormat_Justify_msbLeft"], [80, 3, 1, "_CPPv4N31Adxl345Flags_DataFormat_Justify40Adxl345Flags_DataFormat_Justify_lsbRightE", "Adxl345Flags_DataFormat_Justify_lsbRight"], [80, 3, 1, "_CPPv4N31Adxl345Flags_DataFormat_Justify39Adxl345Flags_DataFormat_Justify_msbLeftE", "Adxl345Flags_DataFormat_Justify_msbLeft"], [67, 2, 1, "_CPPv429Adxl345Flags_DataFormat_Range", "Adxl345Flags_DataFormat_Range"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range33Adxl345Flags_DataFormat_Range_16gE", "Adxl345Flags_DataFormat_Range::Adxl345Flags_DataFormat_Range_16g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_2gE", "Adxl345Flags_DataFormat_Range::Adxl345Flags_DataFormat_Range_2g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_4gE", "Adxl345Flags_DataFormat_Range::Adxl345Flags_DataFormat_Range_4g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_8gE", "Adxl345Flags_DataFormat_Range::Adxl345Flags_DataFormat_Range_8g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range33Adxl345Flags_DataFormat_Range_16gE", "Adxl345Flags_DataFormat_Range_16g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_2gE", "Adxl345Flags_DataFormat_Range_2g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_4gE", "Adxl345Flags_DataFormat_Range_4g"], [67, 3, 1, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_8gE", "Adxl345Flags_DataFormat_Range_8g"], [72, 2, 1, "_CPPv432Adxl345Flags_DataFormat_SelfTest", "Adxl345Flags_DataFormat_SelfTest"], [72, 3, 1, "_CPPv4N32Adxl345Flags_DataFormat_SelfTest45Adxl345Flags_DataFormat_SelfTest_disableForceE", "Adxl345Flags_DataFormat_SelfTest::Adxl345Flags_DataFormat_SelfTest_disableForce"], [72, 3, 1, "_CPPv4N32Adxl345Flags_DataFormat_SelfTest44Adxl345Flags_DataFormat_SelfTest_enableForceE", "Adxl345Flags_DataFormat_SelfTest::Adxl345Flags_DataFormat_SelfTest_enableForce"], [72, 3, 1, "_CPPv4N32Adxl345Flags_DataFormat_SelfTest45Adxl345Flags_DataFormat_SelfTest_disableForceE", "Adxl345Flags_DataFormat_SelfTest_disableForce"], [72, 3, 1, "_CPPv4N32Adxl345Flags_DataFormat_SelfTest44Adxl345Flags_DataFormat_SelfTest_enableForceE", "Adxl345Flags_DataFormat_SelfTest_enableForce"], [82, 2, 1, "_CPPv430Adxl345Flags_DataFormat_SpiBit", "Adxl345Flags_DataFormat_SpiBit"], [82, 3, 1, "_CPPv4N30Adxl345Flags_DataFormat_SpiBit36Adxl345Flags_DataFormat_SpiBit_3wireE", "Adxl345Flags_DataFormat_SpiBit::Adxl345Flags_DataFormat_SpiBit_3wire"], [82, 3, 1, "_CPPv4N30Adxl345Flags_DataFormat_SpiBit36Adxl345Flags_DataFormat_SpiBit_4wireE", "Adxl345Flags_DataFormat_SpiBit::Adxl345Flags_DataFormat_SpiBit_4wire"], [82, 3, 1, "_CPPv4N30Adxl345Flags_DataFormat_SpiBit36Adxl345Flags_DataFormat_SpiBit_3wireE", "Adxl345Flags_DataFormat_SpiBit_3wire"], [82, 3, 1, "_CPPv4N30Adxl345Flags_DataFormat_SpiBit36Adxl345Flags_DataFormat_SpiBit_4wireE", "Adxl345Flags_DataFormat_SpiBit_4wire"], [64, 2, 1, "_CPPv429Adxl345Flags_FifoCtl_FifoMode", "Adxl345Flags_FifoCtl_FifoMode"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode36Adxl345Flags_FifoCtl_FifoMode_bypassE", "Adxl345Flags_FifoCtl_FifoMode::Adxl345Flags_FifoCtl_FifoMode_bypass"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode34Adxl345Flags_FifoCtl_FifoMode_fifoE", "Adxl345Flags_FifoCtl_FifoMode::Adxl345Flags_FifoCtl_FifoMode_fifo"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode36Adxl345Flags_FifoCtl_FifoMode_streamE", "Adxl345Flags_FifoCtl_FifoMode::Adxl345Flags_FifoCtl_FifoMode_stream"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode37Adxl345Flags_FifoCtl_FifoMode_triggerE", "Adxl345Flags_FifoCtl_FifoMode::Adxl345Flags_FifoCtl_FifoMode_trigger"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode36Adxl345Flags_FifoCtl_FifoMode_bypassE", "Adxl345Flags_FifoCtl_FifoMode_bypass"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode34Adxl345Flags_FifoCtl_FifoMode_fifoE", "Adxl345Flags_FifoCtl_FifoMode_fifo"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode36Adxl345Flags_FifoCtl_FifoMode_streamE", "Adxl345Flags_FifoCtl_FifoMode_stream"], [64, 3, 1, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode37Adxl345Flags_FifoCtl_FifoMode_triggerE", "Adxl345Flags_FifoCtl_FifoMode_trigger"], [55, 2, 1, "_CPPv428Adxl345Flags_FifoCtl_Trigger", "Adxl345Flags_FifoCtl_Trigger"], [55, 3, 1, "_CPPv4N28Adxl345Flags_FifoCtl_Trigger33Adxl345Flags_FifoCtl_Trigger_int1E", "Adxl345Flags_FifoCtl_Trigger::Adxl345Flags_FifoCtl_Trigger_int1"], [55, 3, 1, "_CPPv4N28Adxl345Flags_FifoCtl_Trigger33Adxl345Flags_FifoCtl_Trigger_int2E", "Adxl345Flags_FifoCtl_Trigger::Adxl345Flags_FifoCtl_Trigger_int2"], [55, 3, 1, "_CPPv4N28Adxl345Flags_FifoCtl_Trigger33Adxl345Flags_FifoCtl_Trigger_int1E", "Adxl345Flags_FifoCtl_Trigger_int1"], [55, 3, 1, "_CPPv4N28Adxl345Flags_FifoCtl_Trigger33Adxl345Flags_FifoCtl_Trigger_int2E", "Adxl345Flags_FifoCtl_Trigger_int2"], [52, 2, 1, "_CPPv432Adxl345Flags_FifoStatus_FifoTrig", "Adxl345Flags_FifoStatus_FifoTrig"], [52, 3, 1, "_CPPv4N32Adxl345Flags_FifoStatus_FifoTrig45Adxl345Flags_FifoStatus_FifoTrig_notTriggeredE", "Adxl345Flags_FifoStatus_FifoTrig::Adxl345Flags_FifoStatus_FifoTrig_notTriggered"], [52, 3, 1, "_CPPv4N32Adxl345Flags_FifoStatus_FifoTrig42Adxl345Flags_FifoStatus_FifoTrig_triggeredE", "Adxl345Flags_FifoStatus_FifoTrig::Adxl345Flags_FifoStatus_FifoTrig_triggered"], [52, 3, 1, "_CPPv4N32Adxl345Flags_FifoStatus_FifoTrig45Adxl345Flags_FifoStatus_FifoTrig_notTriggeredE", "Adxl345Flags_FifoStatus_FifoTrig_notTriggered"], [52, 3, 1, "_CPPv4N32Adxl345Flags_FifoStatus_FifoTrig42Adxl345Flags_FifoStatus_FifoTrig_triggeredE", "Adxl345Flags_FifoStatus_FifoTrig_triggered"], [76, 2, 1, "_CPPv431Adxl345Flags_IntEnable_Activity", "Adxl345Flags_IntEnable_Activity"], [76, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_Activity39Adxl345Flags_IntEnable_Activity_disableE", "Adxl345Flags_IntEnable_Activity::Adxl345Flags_IntEnable_Activity_disable"], [76, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_Activity38Adxl345Flags_IntEnable_Activity_enableE", "Adxl345Flags_IntEnable_Activity::Adxl345Flags_IntEnable_Activity_enable"], [76, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_Activity39Adxl345Flags_IntEnable_Activity_disableE", "Adxl345Flags_IntEnable_Activity_disable"], [76, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_Activity38Adxl345Flags_IntEnable_Activity_enableE", "Adxl345Flags_IntEnable_Activity_enable"], [73, 2, 1, "_CPPv432Adxl345Flags_IntEnable_DataReady", "Adxl345Flags_IntEnable_DataReady"], [73, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DataReady40Adxl345Flags_IntEnable_DataReady_disableE", "Adxl345Flags_IntEnable_DataReady::Adxl345Flags_IntEnable_DataReady_disable"], [73, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DataReady39Adxl345Flags_IntEnable_DataReady_enableE", "Adxl345Flags_IntEnable_DataReady::Adxl345Flags_IntEnable_DataReady_enable"], [73, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DataReady40Adxl345Flags_IntEnable_DataReady_disableE", "Adxl345Flags_IntEnable_DataReady_disable"], [73, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DataReady39Adxl345Flags_IntEnable_DataReady_enableE", "Adxl345Flags_IntEnable_DataReady_enable"], [68, 2, 1, "_CPPv432Adxl345Flags_IntEnable_DoubleTap", "Adxl345Flags_IntEnable_DoubleTap"], [68, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DoubleTap40Adxl345Flags_IntEnable_DoubleTap_disableE", "Adxl345Flags_IntEnable_DoubleTap::Adxl345Flags_IntEnable_DoubleTap_disable"], [68, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DoubleTap39Adxl345Flags_IntEnable_DoubleTap_enableE", "Adxl345Flags_IntEnable_DoubleTap::Adxl345Flags_IntEnable_DoubleTap_enable"], [68, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DoubleTap40Adxl345Flags_IntEnable_DoubleTap_disableE", "Adxl345Flags_IntEnable_DoubleTap_disable"], [68, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_DoubleTap39Adxl345Flags_IntEnable_DoubleTap_enableE", "Adxl345Flags_IntEnable_DoubleTap_enable"], [81, 2, 1, "_CPPv431Adxl345Flags_IntEnable_FreeFall", "Adxl345Flags_IntEnable_FreeFall"], [81, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_FreeFall39Adxl345Flags_IntEnable_FreeFall_disableE", "Adxl345Flags_IntEnable_FreeFall::Adxl345Flags_IntEnable_FreeFall_disable"], [81, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_FreeFall38Adxl345Flags_IntEnable_FreeFall_enableE", "Adxl345Flags_IntEnable_FreeFall::Adxl345Flags_IntEnable_FreeFall_enable"], [81, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_FreeFall39Adxl345Flags_IntEnable_FreeFall_disableE", "Adxl345Flags_IntEnable_FreeFall_disable"], [81, 3, 1, "_CPPv4N31Adxl345Flags_IntEnable_FreeFall38Adxl345Flags_IntEnable_FreeFall_enableE", "Adxl345Flags_IntEnable_FreeFall_enable"], [51, 2, 1, "_CPPv433Adxl345Flags_IntEnable_Inactivity", "Adxl345Flags_IntEnable_Inactivity"], [51, 3, 1, "_CPPv4N33Adxl345Flags_IntEnable_Inactivity41Adxl345Flags_IntEnable_Inactivity_disableE", "Adxl345Flags_IntEnable_Inactivity::Adxl345Flags_IntEnable_Inactivity_disable"], [51, 3, 1, "_CPPv4N33Adxl345Flags_IntEnable_Inactivity40Adxl345Flags_IntEnable_Inactivity_enableE", "Adxl345Flags_IntEnable_Inactivity::Adxl345Flags_IntEnable_Inactivity_enable"], [51, 3, 1, "_CPPv4N33Adxl345Flags_IntEnable_Inactivity41Adxl345Flags_IntEnable_Inactivity_disableE", "Adxl345Flags_IntEnable_Inactivity_disable"], [51, 3, 1, "_CPPv4N33Adxl345Flags_IntEnable_Inactivity40Adxl345Flags_IntEnable_Inactivity_enableE", "Adxl345Flags_IntEnable_Inactivity_enable"], [54, 2, 1, "_CPPv430Adxl345Flags_IntEnable_Overrun", "Adxl345Flags_IntEnable_Overrun"], [54, 3, 1, "_CPPv4N30Adxl345Flags_IntEnable_Overrun38Adxl345Flags_IntEnable_Overrun_disableE", "Adxl345Flags_IntEnable_Overrun::Adxl345Flags_IntEnable_Overrun_disable"], [54, 3, 1, "_CPPv4N30Adxl345Flags_IntEnable_Overrun37Adxl345Flags_IntEnable_Overrun_enableE", "Adxl345Flags_IntEnable_Overrun::Adxl345Flags_IntEnable_Overrun_enable"], [54, 3, 1, "_CPPv4N30Adxl345Flags_IntEnable_Overrun38Adxl345Flags_IntEnable_Overrun_disableE", "Adxl345Flags_IntEnable_Overrun_disable"], [54, 3, 1, "_CPPv4N30Adxl345Flags_IntEnable_Overrun37Adxl345Flags_IntEnable_Overrun_enableE", "Adxl345Flags_IntEnable_Overrun_enable"], [74, 2, 1, "_CPPv432Adxl345Flags_IntEnable_SingleTap", "Adxl345Flags_IntEnable_SingleTap"], [74, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_SingleTap40Adxl345Flags_IntEnable_SingleTap_disableE", "Adxl345Flags_IntEnable_SingleTap::Adxl345Flags_IntEnable_SingleTap_disable"], [74, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_SingleTap39Adxl345Flags_IntEnable_SingleTap_enableE", "Adxl345Flags_IntEnable_SingleTap::Adxl345Flags_IntEnable_SingleTap_enable"], [74, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_SingleTap40Adxl345Flags_IntEnable_SingleTap_disableE", "Adxl345Flags_IntEnable_SingleTap_disable"], [74, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_SingleTap39Adxl345Flags_IntEnable_SingleTap_enableE", "Adxl345Flags_IntEnable_SingleTap_enable"], [71, 2, 1, "_CPPv432Adxl345Flags_IntEnable_Watermark", "Adxl345Flags_IntEnable_Watermark"], [71, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_Watermark40Adxl345Flags_IntEnable_Watermark_disableE", "Adxl345Flags_IntEnable_Watermark::Adxl345Flags_IntEnable_Watermark_disable"], [71, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_Watermark39Adxl345Flags_IntEnable_Watermark_enableE", "Adxl345Flags_IntEnable_Watermark::Adxl345Flags_IntEnable_Watermark_enable"], [71, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_Watermark40Adxl345Flags_IntEnable_Watermark_disableE", "Adxl345Flags_IntEnable_Watermark_disable"], [71, 3, 1, "_CPPv4N32Adxl345Flags_IntEnable_Watermark39Adxl345Flags_IntEnable_Watermark_enableE", "Adxl345Flags_IntEnable_Watermark_enable"], [70, 2, 1, "_CPPv428Adxl345Flags_IntMap_Activity", "Adxl345Flags_IntMap_Activity"], [70, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_Activity33Adxl345Flags_IntMap_Activity_int1E", "Adxl345Flags_IntMap_Activity::Adxl345Flags_IntMap_Activity_int1"], [70, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_Activity33Adxl345Flags_IntMap_Activity_int2E", "Adxl345Flags_IntMap_Activity::Adxl345Flags_IntMap_Activity_int2"], [70, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_Activity33Adxl345Flags_IntMap_Activity_int1E", "Adxl345Flags_IntMap_Activity_int1"], [70, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_Activity33Adxl345Flags_IntMap_Activity_int2E", "Adxl345Flags_IntMap_Activity_int2"], [61, 2, 1, "_CPPv429Adxl345Flags_IntMap_DataReady", "Adxl345Flags_IntMap_DataReady"], [61, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DataReady34Adxl345Flags_IntMap_DataReady_int1E", "Adxl345Flags_IntMap_DataReady::Adxl345Flags_IntMap_DataReady_int1"], [61, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DataReady34Adxl345Flags_IntMap_DataReady_int2E", "Adxl345Flags_IntMap_DataReady::Adxl345Flags_IntMap_DataReady_int2"], [61, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DataReady34Adxl345Flags_IntMap_DataReady_int1E", "Adxl345Flags_IntMap_DataReady_int1"], [61, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DataReady34Adxl345Flags_IntMap_DataReady_int2E", "Adxl345Flags_IntMap_DataReady_int2"], [59, 2, 1, "_CPPv429Adxl345Flags_IntMap_DoubleTap", "Adxl345Flags_IntMap_DoubleTap"], [59, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DoubleTap34Adxl345Flags_IntMap_DoubleTap_int1E", "Adxl345Flags_IntMap_DoubleTap::Adxl345Flags_IntMap_DoubleTap_int1"], [59, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DoubleTap34Adxl345Flags_IntMap_DoubleTap_int2E", "Adxl345Flags_IntMap_DoubleTap::Adxl345Flags_IntMap_DoubleTap_int2"], [59, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DoubleTap34Adxl345Flags_IntMap_DoubleTap_int1E", "Adxl345Flags_IntMap_DoubleTap_int1"], [59, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_DoubleTap34Adxl345Flags_IntMap_DoubleTap_int2E", "Adxl345Flags_IntMap_DoubleTap_int2"], [66, 2, 1, "_CPPv428Adxl345Flags_IntMap_FreeFall", "Adxl345Flags_IntMap_FreeFall"], [66, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_FreeFall33Adxl345Flags_IntMap_FreeFall_int1E", "Adxl345Flags_IntMap_FreeFall::Adxl345Flags_IntMap_FreeFall_int1"], [66, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_FreeFall33Adxl345Flags_IntMap_FreeFall_int2E", "Adxl345Flags_IntMap_FreeFall::Adxl345Flags_IntMap_FreeFall_int2"], [66, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_FreeFall33Adxl345Flags_IntMap_FreeFall_int1E", "Adxl345Flags_IntMap_FreeFall_int1"], [66, 3, 1, "_CPPv4N28Adxl345Flags_IntMap_FreeFall33Adxl345Flags_IntMap_FreeFall_int2E", "Adxl345Flags_IntMap_FreeFall_int2"], [60, 2, 1, "_CPPv430Adxl345Flags_IntMap_Inactivity", "Adxl345Flags_IntMap_Inactivity"], [60, 3, 1, "_CPPv4N30Adxl345Flags_IntMap_Inactivity35Adxl345Flags_IntMap_Inactivity_int1E", "Adxl345Flags_IntMap_Inactivity::Adxl345Flags_IntMap_Inactivity_int1"], [60, 3, 1, "_CPPv4N30Adxl345Flags_IntMap_Inactivity35Adxl345Flags_IntMap_Inactivity_int2E", "Adxl345Flags_IntMap_Inactivity::Adxl345Flags_IntMap_Inactivity_int2"], [60, 3, 1, "_CPPv4N30Adxl345Flags_IntMap_Inactivity35Adxl345Flags_IntMap_Inactivity_int1E", "Adxl345Flags_IntMap_Inactivity_int1"], [60, 3, 1, "_CPPv4N30Adxl345Flags_IntMap_Inactivity35Adxl345Flags_IntMap_Inactivity_int2E", "Adxl345Flags_IntMap_Inactivity_int2"], [77, 2, 1, "_CPPv427Adxl345Flags_IntMap_Overrun", "Adxl345Flags_IntMap_Overrun"], [77, 3, 1, "_CPPv4N27Adxl345Flags_IntMap_Overrun32Adxl345Flags_IntMap_Overrun_int1E", "Adxl345Flags_IntMap_Overrun::Adxl345Flags_IntMap_Overrun_int1"], [77, 3, 1, "_CPPv4N27Adxl345Flags_IntMap_Overrun32Adxl345Flags_IntMap_Overrun_int2E", "Adxl345Flags_IntMap_Overrun::Adxl345Flags_IntMap_Overrun_int2"], [77, 3, 1, "_CPPv4N27Adxl345Flags_IntMap_Overrun32Adxl345Flags_IntMap_Overrun_int1E", "Adxl345Flags_IntMap_Overrun_int1"], [77, 3, 1, "_CPPv4N27Adxl345Flags_IntMap_Overrun32Adxl345Flags_IntMap_Overrun_int2E", "Adxl345Flags_IntMap_Overrun_int2"], [56, 2, 1, "_CPPv429Adxl345Flags_IntMap_SingleTap", "Adxl345Flags_IntMap_SingleTap"], [56, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_SingleTap34Adxl345Flags_IntMap_SingleTap_int1E", "Adxl345Flags_IntMap_SingleTap::Adxl345Flags_IntMap_SingleTap_int1"], [56, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_SingleTap34Adxl345Flags_IntMap_SingleTap_int2E", "Adxl345Flags_IntMap_SingleTap::Adxl345Flags_IntMap_SingleTap_int2"], [56, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_SingleTap34Adxl345Flags_IntMap_SingleTap_int1E", "Adxl345Flags_IntMap_SingleTap_int1"], [56, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_SingleTap34Adxl345Flags_IntMap_SingleTap_int2E", "Adxl345Flags_IntMap_SingleTap_int2"], [75, 2, 1, "_CPPv429Adxl345Flags_IntMap_Watermark", "Adxl345Flags_IntMap_Watermark"], [75, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_Watermark34Adxl345Flags_IntMap_Watermark_int1E", "Adxl345Flags_IntMap_Watermark::Adxl345Flags_IntMap_Watermark_int1"], [75, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_Watermark34Adxl345Flags_IntMap_Watermark_int2E", "Adxl345Flags_IntMap_Watermark::Adxl345Flags_IntMap_Watermark_int2"], [75, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_Watermark34Adxl345Flags_IntMap_Watermark_int1E", "Adxl345Flags_IntMap_Watermark_int1"], [75, 3, 1, "_CPPv4N29Adxl345Flags_IntMap_Watermark34Adxl345Flags_IntMap_Watermark_int2E", "Adxl345Flags_IntMap_Watermark_int2"], [57, 2, 1, "_CPPv431Adxl345Flags_PowerCtl_AutoSleep", "Adxl345Flags_PowerCtl_AutoSleep"], [57, 3, 1, "_CPPv4N31Adxl345Flags_PowerCtl_AutoSleep40Adxl345Flags_PowerCtl_AutoSleep_disabledE", "Adxl345Flags_PowerCtl_AutoSleep::Adxl345Flags_PowerCtl_AutoSleep_disabled"], [57, 3, 1, "_CPPv4N31Adxl345Flags_PowerCtl_AutoSleep40Adxl345Flags_PowerCtl_AutoSleep_functionE", "Adxl345Flags_PowerCtl_AutoSleep::Adxl345Flags_PowerCtl_AutoSleep_function"], [57, 3, 1, "_CPPv4N31Adxl345Flags_PowerCtl_AutoSleep40Adxl345Flags_PowerCtl_AutoSleep_disabledE", "Adxl345Flags_PowerCtl_AutoSleep_disabled"], [57, 3, 1, "_CPPv4N31Adxl345Flags_PowerCtl_AutoSleep40Adxl345Flags_PowerCtl_AutoSleep_functionE", "Adxl345Flags_PowerCtl_AutoSleep_function"], [58, 2, 1, "_CPPv426Adxl345Flags_PowerCtl_Link", "Adxl345Flags_PowerCtl_Link"], [58, 3, 1, "_CPPv4N26Adxl345Flags_PowerCtl_Link37Adxl345Flags_PowerCtl_Link_concurrentE", "Adxl345Flags_PowerCtl_Link::Adxl345Flags_PowerCtl_Link_concurrent"], [58, 3, 1, "_CPPv4N26Adxl345Flags_PowerCtl_Link33Adxl345Flags_PowerCtl_Link_serialE", "Adxl345Flags_PowerCtl_Link::Adxl345Flags_PowerCtl_Link_serial"], [58, 3, 1, "_CPPv4N26Adxl345Flags_PowerCtl_Link37Adxl345Flags_PowerCtl_Link_concurrentE", "Adxl345Flags_PowerCtl_Link_concurrent"], [58, 3, 1, "_CPPv4N26Adxl345Flags_PowerCtl_Link33Adxl345Flags_PowerCtl_Link_serialE", "Adxl345Flags_PowerCtl_Link_serial"], [79, 2, 1, "_CPPv429Adxl345Flags_PowerCtl_Measure", "Adxl345Flags_PowerCtl_Measure"], [79, 3, 1, "_CPPv4N29Adxl345Flags_PowerCtl_Measure37Adxl345Flags_PowerCtl_Measure_measureE", "Adxl345Flags_PowerCtl_Measure::Adxl345Flags_PowerCtl_Measure_measure"], [79, 3, 1, "_CPPv4N29Adxl345Flags_PowerCtl_Measure37Adxl345Flags_PowerCtl_Measure_standbyE", "Adxl345Flags_PowerCtl_Measure::Adxl345Flags_PowerCtl_Measure_standby"], [79, 3, 1, "_CPPv4N29Adxl345Flags_PowerCtl_Measure37Adxl345Flags_PowerCtl_Measure_measureE", "Adxl345Flags_PowerCtl_Measure_measure"], [79, 3, 1, "_CPPv4N29Adxl345Flags_PowerCtl_Measure37Adxl345Flags_PowerCtl_Measure_standbyE", "Adxl345Flags_PowerCtl_Measure_standby"], [78, 2, 1, "_CPPv427Adxl345Flags_PowerCtl_Sleep", "Adxl345Flags_PowerCtl_Sleep"], [78, 3, 1, "_CPPv4N27Adxl345Flags_PowerCtl_Sleep38Adxl345Flags_PowerCtl_Sleep_normalModeE", "Adxl345Flags_PowerCtl_Sleep::Adxl345Flags_PowerCtl_Sleep_normalMode"], [78, 3, 1, "_CPPv4N27Adxl345Flags_PowerCtl_Sleep37Adxl345Flags_PowerCtl_Sleep_sleepModeE", "Adxl345Flags_PowerCtl_Sleep::Adxl345Flags_PowerCtl_Sleep_sleepMode"], [78, 3, 1, "_CPPv4N27Adxl345Flags_PowerCtl_Sleep38Adxl345Flags_PowerCtl_Sleep_normalModeE", "Adxl345Flags_PowerCtl_Sleep_normalMode"], [78, 3, 1, "_CPPv4N27Adxl345Flags_PowerCtl_Sleep37Adxl345Flags_PowerCtl_Sleep_sleepModeE", "Adxl345Flags_PowerCtl_Sleep_sleepMode"], [65, 2, 1, "_CPPv428Adxl345Flags_PowerCtl_Wakeup", "Adxl345Flags_PowerCtl_Wakeup"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_1HzE", "Adxl345Flags_PowerCtl_Wakeup::Adxl345Flags_PowerCtl_Wakeup_1Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_2HzE", "Adxl345Flags_PowerCtl_Wakeup::Adxl345Flags_PowerCtl_Wakeup_2Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_4HzE", "Adxl345Flags_PowerCtl_Wakeup::Adxl345Flags_PowerCtl_Wakeup_4Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_8HzE", "Adxl345Flags_PowerCtl_Wakeup::Adxl345Flags_PowerCtl_Wakeup_8Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_1HzE", "Adxl345Flags_PowerCtl_Wakeup_1Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_2HzE", "Adxl345Flags_PowerCtl_Wakeup_2Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_4HzE", "Adxl345Flags_PowerCtl_Wakeup_4Hz"], [65, 3, 1, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_8HzE", "Adxl345Flags_PowerCtl_Wakeup_8Hz"], [414, 4, 1, "_CPPv415Adxl345Register", "Adxl345Register"], [414, 1, 1, "_CPPv4N15Adxl345Register8asBwRateE", "Adxl345Register::asBwRate"], [428, 1, 1, "_CPPv4N15Adxl345Register8asBwRateE", "Adxl345Register::asBwRate"], [414, 1, 1, "_CPPv4N15Adxl345Register12asDataFormatE", "Adxl345Register::asDataFormat"], [442, 1, 1, "_CPPv4N15Adxl345Register12asDataFormatE", "Adxl345Register::asDataFormat"], [414, 1, 1, "_CPPv4N15Adxl345Register9asFifoCtlE", "Adxl345Register::asFifoCtl"], [422, 1, 1, "_CPPv4N15Adxl345Register9asFifoCtlE", "Adxl345Register::asFifoCtl"], [414, 1, 1, "_CPPv4N15Adxl345Register12asFifoStatusE", "Adxl345Register::asFifoStatus"], [447, 1, 1, "_CPPv4N15Adxl345Register12asFifoStatusE", "Adxl345Register::asFifoStatus"], [414, 1, 1, "_CPPv4N15Adxl345Register11asIntEnableE", "Adxl345Register::asIntEnable"], [450, 1, 1, "_CPPv4N15Adxl345Register11asIntEnableE", "Adxl345Register::asIntEnable"], [414, 1, 1, "_CPPv4N15Adxl345Register8asIntMapE", "Adxl345Register::asIntMap"], [448, 1, 1, "_CPPv4N15Adxl345Register8asIntMapE", "Adxl345Register::asIntMap"], [414, 1, 1, "_CPPv4N15Adxl345Register14asPowerControlE", "Adxl345Register::asPowerControl"], [421, 1, 1, "_CPPv4N15Adxl345Register14asPowerControlE", "Adxl345Register::asPowerControl"], [356, 5, 1, "_CPPv422Adxl345Register_BwRate", "Adxl345Register_BwRate"], [356, 1, 1, "_CPPv4N22Adxl345Register_BwRate7_zeroD5E", "Adxl345Register_BwRate::_zeroD5"], [449, 1, 1, "_CPPv4N22Adxl345Register_BwRate7_zeroD5E", "Adxl345Register_BwRate::_zeroD5"], [356, 1, 1, "_CPPv4N22Adxl345Register_BwRate7_zeroD6E", "Adxl345Register_BwRate::_zeroD6"], [435, 1, 1, "_CPPv4N22Adxl345Register_BwRate7_zeroD6E", "Adxl345Register_BwRate::_zeroD6"], [356, 1, 1, "_CPPv4N22Adxl345Register_BwRate7_zeroD7E", "Adxl345Register_BwRate::_zeroD7"], [430, 1, 1, "_CPPv4N22Adxl345Register_BwRate7_zeroD7E", "Adxl345Register_BwRate::_zeroD7"], [356, 1, 1, "_CPPv4N22Adxl345Register_BwRate8lowPowerE", "Adxl345Register_BwRate::lowPower"], [419, 1, 1, "_CPPv4N22Adxl345Register_BwRate8lowPowerE", "Adxl345Register_BwRate::lowPower"], [356, 1, 1, "_CPPv4N22Adxl345Register_BwRate4rateE", "Adxl345Register_BwRate::rate"], [424, 1, 1, "_CPPv4N22Adxl345Register_BwRate4rateE", "Adxl345Register_BwRate::rate"], [499, 1, 1, "_CPPv4N22Adxl345Register_BwRate4rateE", "Adxl345Register_BwRate::rate"], [357, 5, 1, "_CPPv426Adxl345Register_DataFormat", "Adxl345Register_DataFormat"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat7_zeroD4E", "Adxl345Register_DataFormat::_zeroD4"], [425, 1, 1, "_CPPv4N26Adxl345Register_DataFormat7_zeroD4E", "Adxl345Register_DataFormat::_zeroD4"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat7fullResE", "Adxl345Register_DataFormat::fullRes"], [455, 1, 1, "_CPPv4N26Adxl345Register_DataFormat7fullResE", "Adxl345Register_DataFormat::fullRes"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat9intInvertE", "Adxl345Register_DataFormat::intInvert"], [444, 1, 1, "_CPPv4N26Adxl345Register_DataFormat9intInvertE", "Adxl345Register_DataFormat::intInvert"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat7justifyE", "Adxl345Register_DataFormat::justify"], [434, 1, 1, "_CPPv4N26Adxl345Register_DataFormat7justifyE", "Adxl345Register_DataFormat::justify"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat5rangeE", "Adxl345Register_DataFormat::range"], [441, 1, 1, "_CPPv4N26Adxl345Register_DataFormat5rangeE", "Adxl345Register_DataFormat::range"], [546, 1, 1, "_CPPv4N26Adxl345Register_DataFormat5rangeE", "Adxl345Register_DataFormat::range"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat8selfTestE", "Adxl345Register_DataFormat::selfTest"], [446, 1, 1, "_CPPv4N26Adxl345Register_DataFormat8selfTestE", "Adxl345Register_DataFormat::selfTest"], [357, 1, 1, "_CPPv4N26Adxl345Register_DataFormat3spiE", "Adxl345Register_DataFormat::spi"], [429, 1, 1, "_CPPv4N26Adxl345Register_DataFormat3spiE", "Adxl345Register_DataFormat::spi"], [358, 5, 1, "_CPPv423Adxl345Register_FifoCtl", "Adxl345Register_FifoCtl"], [358, 1, 1, "_CPPv4N23Adxl345Register_FifoCtl8fifoModeE", "Adxl345Register_FifoCtl::fifoMode"], [427, 1, 1, "_CPPv4N23Adxl345Register_FifoCtl8fifoModeE", "Adxl345Register_FifoCtl::fifoMode"], [358, 1, 1, "_CPPv4N23Adxl345Register_FifoCtl7samplesE", "Adxl345Register_FifoCtl::samples"], [453, 1, 1, "_CPPv4N23Adxl345Register_FifoCtl7samplesE", "Adxl345Register_FifoCtl::samples"], [358, 1, 1, "_CPPv4N23Adxl345Register_FifoCtl7triggerE", "Adxl345Register_FifoCtl::trigger"], [451, 1, 1, "_CPPv4N23Adxl345Register_FifoCtl7triggerE", "Adxl345Register_FifoCtl::trigger"], [359, 5, 1, "_CPPv426Adxl345Register_FifoStatus", "Adxl345Register_FifoStatus"], [359, 1, 1, "_CPPv4N26Adxl345Register_FifoStatus7_zeroD6E", "Adxl345Register_FifoStatus::_zeroD6"], [359, 1, 1, "_CPPv4N26Adxl345Register_FifoStatus7entriesE", "Adxl345Register_FifoStatus::entries"], [454, 1, 1, "_CPPv4N26Adxl345Register_FifoStatus7entriesE", "Adxl345Register_FifoStatus::entries"], [359, 1, 1, "_CPPv4N26Adxl345Register_FifoStatus8fifoTrigE", "Adxl345Register_FifoStatus::fifoTrig"], [443, 1, 1, "_CPPv4N26Adxl345Register_FifoStatus8fifoTrigE", "Adxl345Register_FifoStatus::fifoTrig"], [360, 5, 1, "_CPPv425Adxl345Register_IntEnable", "Adxl345Register_IntEnable"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable8activityE", "Adxl345Register_IntEnable::activity"], [439, 1, 1, "_CPPv4N25Adxl345Register_IntEnable8activityE", "Adxl345Register_IntEnable::activity"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9dataReadyE", "Adxl345Register_IntEnable::dataReady"], [432, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9dataReadyE", "Adxl345Register_IntEnable::dataReady"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9doubleTapE", "Adxl345Register_IntEnable::doubleTap"], [445, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9doubleTapE", "Adxl345Register_IntEnable::doubleTap"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable8freeFallE", "Adxl345Register_IntEnable::freeFall"], [437, 1, 1, "_CPPv4N25Adxl345Register_IntEnable8freeFallE", "Adxl345Register_IntEnable::freeFall"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable10inactivityE", "Adxl345Register_IntEnable::inactivity"], [431, 1, 1, "_CPPv4N25Adxl345Register_IntEnable10inactivityE", "Adxl345Register_IntEnable::inactivity"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable7overrunE", "Adxl345Register_IntEnable::overrun"], [440, 1, 1, "_CPPv4N25Adxl345Register_IntEnable7overrunE", "Adxl345Register_IntEnable::overrun"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9singleTapE", "Adxl345Register_IntEnable::singleTap"], [436, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9singleTapE", "Adxl345Register_IntEnable::singleTap"], [360, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9watermarkE", "Adxl345Register_IntEnable::watermark"], [426, 1, 1, "_CPPv4N25Adxl345Register_IntEnable9watermarkE", "Adxl345Register_IntEnable::watermark"], [361, 5, 1, "_CPPv422Adxl345Register_IntMap", "Adxl345Register_IntMap"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap8activityE", "Adxl345Register_IntMap::activity"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap9dataReadyE", "Adxl345Register_IntMap::dataReady"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap9doubleTapE", "Adxl345Register_IntMap::doubleTap"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap8freeFallE", "Adxl345Register_IntMap::freeFall"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap10inactivityE", "Adxl345Register_IntMap::inactivity"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap7overrunE", "Adxl345Register_IntMap::overrun"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap9singleTapE", "Adxl345Register_IntMap::singleTap"], [361, 1, 1, "_CPPv4N22Adxl345Register_IntMap9watermarkE", "Adxl345Register_IntMap::watermark"], [362, 5, 1, "_CPPv424Adxl345Register_PowerCtl", "Adxl345Register_PowerCtl"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl7_zeroD6E", "Adxl345Register_PowerCtl::_zeroD6"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl7_zeroD7E", "Adxl345Register_PowerCtl::_zeroD7"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl9autoSleepE", "Adxl345Register_PowerCtl::autoSleep"], [438, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl9autoSleepE", "Adxl345Register_PowerCtl::autoSleep"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl4linkE", "Adxl345Register_PowerCtl::link"], [423, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl4linkE", "Adxl345Register_PowerCtl::link"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl7measureE", "Adxl345Register_PowerCtl::measure"], [433, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl7measureE", "Adxl345Register_PowerCtl::measure"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl5sleepE", "Adxl345Register_PowerCtl::sleep"], [452, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl5sleepE", "Adxl345Register_PowerCtl::sleep"], [362, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl6wakeupE", "Adxl345Register_PowerCtl::wakeup"], [420, 1, 1, "_CPPv4N24Adxl345Register_PowerCtl6wakeupE", "Adxl345Register_PowerCtl::wakeup"], [84, 2, 1, "_CPPv413Adxl345Spi_Cs", "Adxl345Spi_Cs"], [84, 3, 1, "_CPPv4N13Adxl345Spi_Cs20Adxl345Spi_Cs_modifyE", "Adxl345Spi_Cs::Adxl345Spi_Cs_modify"], [84, 3, 1, "_CPPv4N13Adxl345Spi_Cs23Adxl345Spi_Cs_untouchedE", "Adxl345Spi_Cs::Adxl345Spi_Cs_untouched"], [84, 3, 1, "_CPPv4N13Adxl345Spi_Cs20Adxl345Spi_Cs_modifyE", "Adxl345Spi_Cs_modify"], [84, 3, 1, "_CPPv4N13Adxl345Spi_Cs23Adxl345Spi_Cs_untouchedE", "Adxl345Spi_Cs_untouched"], [85, 2, 1, "_CPPv418Adxl345Spi_RwFlags", "Adxl345Spi_RwFlags"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags28Adxl345Spi_RwFlags_multiByteE", "Adxl345Spi_RwFlags::Adxl345Spi_RwFlags_multiByte"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags23Adxl345Spi_RwFlags_readE", "Adxl345Spi_RwFlags::Adxl345Spi_RwFlags_read"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags29Adxl345Spi_RwFlags_singleByteE", "Adxl345Spi_RwFlags::Adxl345Spi_RwFlags_singleByte"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags24Adxl345Spi_RwFlags_writeE", "Adxl345Spi_RwFlags::Adxl345Spi_RwFlags_write"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags28Adxl345Spi_RwFlags_multiByteE", "Adxl345Spi_RwFlags_multiByte"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags23Adxl345Spi_RwFlags_readE", "Adxl345Spi_RwFlags_read"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags29Adxl345Spi_RwFlags_singleByteE", "Adxl345Spi_RwFlags_singleByte"], [85, 3, 1, "_CPPv4N18Adxl345Spi_RwFlags24Adxl345Spi_RwFlags_writeE", "Adxl345Spi_RwFlags_write"], [154, 6, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl"], [157, 6, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl"], [154, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::applyCs"], [157, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::applyCs"], [154, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::frame"], [157, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::frame"], [154, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::numBytes"], [157, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::numBytes"], [154, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::rwFlag"], [157, 7, 1, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags", "Adxl345TransportImpl_doTransmitFrameImpl::rwFlag"], [156, 6, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl"], [158, 6, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl"], [156, 7, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl::numBytesReceive"], [158, 7, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl::numBytesReceive"], [156, 7, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl::rxFrame"], [158, 7, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl::rxFrame"], [156, 7, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl::txFrame"], [158, 7, 1, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t", "Adxl345TransportImpl_doTransmitReceiveFrameImpl::txFrame"], [363, 5, 1, "_CPPv429Adxl345Transport_Acceleration", "Adxl345Transport_Acceleration"], [363, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1xE", "Adxl345Transport_Acceleration::x"], [465, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1xE", "Adxl345Transport_Acceleration::x"], [579, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1xE", "Adxl345Transport_Acceleration::x"], [596, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1xE", "Adxl345Transport_Acceleration::x"], [363, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1yE", "Adxl345Transport_Acceleration::y"], [467, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1yE", "Adxl345Transport_Acceleration::y"], [587, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1yE", "Adxl345Transport_Acceleration::y"], [597, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1yE", "Adxl345Transport_Acceleration::y"], [363, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1zE", "Adxl345Transport_Acceleration::z"], [464, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1zE", "Adxl345Transport_Acceleration::z"], [559, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1zE", "Adxl345Transport_Acceleration::z"], [595, 1, 1, "_CPPv4N29Adxl345Transport_Acceleration1zE", "Adxl345Transport_Acceleration::z"], [364, 5, 1, "_CPPv435Adxl345Transport_DataPaddedRegister", "Adxl345Transport_DataPaddedRegister"], [364, 1, 1, "_CPPv4N35Adxl345Transport_DataPaddedRegister9_padding8E", "Adxl345Transport_DataPaddedRegister::_padding8"], [462, 1, 1, "_CPPv4N35Adxl345Transport_DataPaddedRegister9_padding8E", "Adxl345Transport_DataPaddedRegister::_padding8"], [364, 1, 1, "_CPPv4N35Adxl345Transport_DataPaddedRegister10asRegisterE", "Adxl345Transport_DataPaddedRegister::asRegister"], [460, 1, 1, "_CPPv4N35Adxl345Transport_DataPaddedRegister10asRegisterE", "Adxl345Transport_DataPaddedRegister::asRegister"], [415, 4, 1, "_CPPv424Adxl345Transport_RxFrame", "Adxl345Transport_RxFrame"], [415, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame14asAccelerationE", "Adxl345Transport_RxFrame::asAcceleration"], [466, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame14asAccelerationE", "Adxl345Transport_RxFrame::asAcceleration"], [508, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame14asAccelerationE", "Adxl345Transport_RxFrame::asAcceleration"], [415, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame7asBytesE", "Adxl345Transport_RxFrame::asBytes"], [463, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame7asBytesE", "Adxl345Transport_RxFrame::asBytes"], [415, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame10asRegisterE", "Adxl345Transport_RxFrame::asRegister"], [415, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame6asWordE", "Adxl345Transport_RxFrame::asWord"], [458, 1, 1, "_CPPv4N24Adxl345Transport_RxFrame6asWordE", "Adxl345Transport_RxFrame::asWord"], [416, 4, 1, "_CPPv424Adxl345Transport_TxFrame", "Adxl345Transport_TxFrame"], [416, 1, 1, "_CPPv4N24Adxl345Transport_TxFrame9asAddressE", "Adxl345Transport_TxFrame::asAddress"], [461, 1, 1, "_CPPv4N24Adxl345Transport_TxFrame9asAddressE", "Adxl345Transport_TxFrame::asAddress"], [416, 1, 1, "_CPPv4N24Adxl345Transport_TxFrame7asBytesE", "Adxl345Transport_TxFrame::asBytes"], [416, 1, 1, "_CPPv4N24Adxl345Transport_TxFrame16asPaddedRegisterE", "Adxl345Transport_TxFrame::asPaddedRegister"], [459, 1, 1, "_CPPv4N24Adxl345Transport_TxFrame16asPaddedRegisterE", "Adxl345Transport_TxFrame::asPaddedRegister"], [416, 1, 1, "_CPPv4N24Adxl345Transport_TxFrame6asWordE", "Adxl345Transport_TxFrame::asWord"], [365, 5, 1, "_CPPv414Adxl345_Handle", "Adxl345_Handle"], [365, 1, 1, "_CPPv4N14Adxl345_Handle19doTransmitFrameImplE", "Adxl345_Handle::doTransmitFrameImpl"], [365, 1, 1, "_CPPv4N14Adxl345_Handle26doTransmitReceiveFrameImplE", "Adxl345_Handle::doTransmitReceiveFrameImpl"], [131, 6, 1, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration", "Adxl345_getAcceleration"], [143, 6, 1, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration", "Adxl345_getAcceleration"], [131, 7, 1, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration", "Adxl345_getAcceleration::acc"], [143, 7, 1, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration", "Adxl345_getAcceleration::acc"], [131, 7, 1, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration", "Adxl345_getAcceleration::handle"], [143, 7, 1, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration", "Adxl345_getAcceleration::handle"], [140, 6, 1, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate", "Adxl345_getOutputDataRate"], [150, 6, 1, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate", "Adxl345_getOutputDataRate"], [140, 7, 1, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate", "Adxl345_getOutputDataRate::handle"], [150, 7, 1, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate", "Adxl345_getOutputDataRate::handle"], [140, 7, 1, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate", "Adxl345_getOutputDataRate::rate"], [150, 7, 1, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate", "Adxl345_getOutputDataRate::rate"], [133, 6, 1, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range", "Adxl345_getRange"], [144, 6, 1, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range", "Adxl345_getRange"], [133, 7, 1, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range", "Adxl345_getRange::handle"], [144, 7, 1, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range", "Adxl345_getRange::handle"], [133, 7, 1, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range", "Adxl345_getRange::range"], [144, 7, 1, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range", "Adxl345_getRange::range"], [139, 6, 1, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit", "Adxl345_getScale"], [149, 6, 1, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit", "Adxl345_getScale"], [139, 7, 1, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit", "Adxl345_getScale::handle"], [149, 7, 1, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit", "Adxl345_getScale::handle"], [139, 7, 1, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit", "Adxl345_getScale::scale"], [149, 7, 1, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit", "Adxl345_getScale::scale"], [135, 6, 1, "_CPPv412Adxl345_initP14Adxl345_Handle", "Adxl345_init"], [145, 6, 1, "_CPPv412Adxl345_initP14Adxl345_Handle", "Adxl345_init"], [135, 7, 1, "_CPPv412Adxl345_initP14Adxl345_Handle", "Adxl345_init::handle"], [145, 7, 1, "_CPPv412Adxl345_initP14Adxl345_Handle", "Adxl345_init::handle"], [138, 6, 1, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t", "Adxl345_setOutputDataRate"], [148, 6, 1, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t", "Adxl345_setOutputDataRate"], [138, 7, 1, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t", "Adxl345_setOutputDataRate::handle"], [148, 7, 1, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t", "Adxl345_setOutputDataRate::handle"], [138, 7, 1, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t", "Adxl345_setOutputDataRate::rate"], [148, 7, 1, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t", "Adxl345_setOutputDataRate::rate"], [129, 6, 1, "_CPPv426Adxl345_setPowerCtlMeasureP14Adxl345_Handle", "Adxl345_setPowerCtlMeasure"], [141, 6, 1, "_CPPv426Adxl345_setPowerCtlMeasureP14Adxl345_Handle", "Adxl345_setPowerCtlMeasure"], [129, 7, 1, "_CPPv426Adxl345_setPowerCtlMeasureP14Adxl345_Handle", "Adxl345_setPowerCtlMeasure::handle"], [141, 7, 1, "_CPPv426Adxl345_setPowerCtlMeasureP14Adxl345_Handle", "Adxl345_setPowerCtlMeasure::handle"], [136, 6, 1, "_CPPv426Adxl345_setPowerCtlStandbyP14Adxl345_Handle", "Adxl345_setPowerCtlStandby"], [146, 6, 1, "_CPPv426Adxl345_setPowerCtlStandbyP14Adxl345_Handle", "Adxl345_setPowerCtlStandby"], [136, 7, 1, "_CPPv426Adxl345_setPowerCtlStandbyP14Adxl345_Handle", "Adxl345_setPowerCtlStandby::handle"], [146, 7, 1, "_CPPv426Adxl345_setPowerCtlStandbyP14Adxl345_Handle", "Adxl345_setPowerCtlStandby::handle"], [130, 6, 1, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t", "Adxl345_setRange"], [142, 6, 1, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t", "Adxl345_setRange"], [130, 7, 1, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t", "Adxl345_setRange::handle"], [142, 7, 1, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t", "Adxl345_setRange::handle"], [130, 7, 1, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t", "Adxl345_setRange::range"], [142, 7, 1, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t", "Adxl345_setRange::range"], [137, 6, 1, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t", "Adxl345_setScale"], [147, 6, 1, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t", "Adxl345_setScale"], [137, 7, 1, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t", "Adxl345_setScale::handle"], [147, 7, 1, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t", "Adxl345_setScale::handle"], [137, 7, 1, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t", "Adxl345_setScale::scale"], [147, 7, 1, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t", "Adxl345_setScale::scale"], [366, 5, 1, "_CPPv417Controller_Handle", "Controller_Handle"], [366, 1, 1, "_CPPv4N17Controller_Handle23fault_onBusFaultHandlerE", "Controller_Handle::fault_onBusFaultHandler"], [366, 1, 1, "_CPPv4N17Controller_Handle20fault_onErrorHandlerE", "Controller_Handle::fault_onErrorHandler"], [366, 1, 1, "_CPPv4N17Controller_Handle24fault_onHardFaultHandlerE", "Controller_Handle::fault_onHardFaultHandler"], [366, 1, 1, "_CPPv4N17Controller_Handle23fault_onNmiFaultHandlerE", "Controller_Handle::fault_onNmiFaultHandler"], [366, 1, 1, "_CPPv4N17Controller_Handle25fault_onUsageFaultHandlerE", "Controller_Handle::fault_onUsageFaultHandler"], [366, 1, 1, "_CPPv4N17Controller_Handle4hostE", "Controller_Handle::host"], [366, 1, 1, "_CPPv4N17Controller_Handle4initE", "Controller_Handle::init"], [366, 1, 1, "_CPPv4N17Controller_Handle4loopE", "Controller_Handle::loop"], [366, 1, 1, "_CPPv4N17Controller_Handle13requestRebootE", "Controller_Handle::requestReboot"], [366, 1, 1, "_CPPv4N17Controller_Handle8samplingE", "Controller_Handle::sampling"], [366, 1, 1, "_CPPv4N17Controller_Handle6sensorE", "Controller_Handle::sensor"], [367, 5, 1, "_CPPv415Controller_Host", "Controller_Host"], [367, 1, 1, "_CPPv4N15Controller_Host11doTakeBytesE", "Controller_Host::doTakeBytes"], [367, 1, 1, "_CPPv4N15Controller_Host6handleE", "Controller_Host::handle"], [367, 1, 1, "_CPPv4N15Controller_Host21onRequestBufferStatusE", "Controller_Host::onRequestBufferStatus"], [367, 1, 1, "_CPPv4N15Controller_Host23onRequestGetDeviceSetupE", "Controller_Host::onRequestGetDeviceSetup"], [367, 1, 1, "_CPPv4N15Controller_Host27onRequestGetFirmwareVersionE", "Controller_Host::onRequestGetFirmwareVersion"], [367, 1, 1, "_CPPv4N15Controller_Host26onRequestGetOutputDataRateE", "Controller_Host::onRequestGetOutputDataRate"], [367, 1, 1, "_CPPv4N15Controller_Host17onRequestGetRangeE", "Controller_Host::onRequestGetRange"], [367, 1, 1, "_CPPv4N15Controller_Host17onRequestGetScaleE", "Controller_Host::onRequestGetScale"], [367, 1, 1, "_CPPv4N15Controller_Host22onRequestSamplingStartE", "Controller_Host::onRequestSamplingStart"], [367, 1, 1, "_CPPv4N15Controller_Host21onRequestSamplingStopE", "Controller_Host::onRequestSamplingStop"], [367, 1, 1, "_CPPv4N15Controller_Host27onRequestSetOutputDatatRateE", "Controller_Host::onRequestSetOutputDatatRate"], [367, 1, 1, "_CPPv4N15Controller_Host17onRequestSetRangeE", "Controller_Host::onRequestSetRange"], [367, 1, 1, "_CPPv4N15Controller_Host17onRequestSetScaleE", "Controller_Host::onRequestSetScale"], [367, 1, 1, "_CPPv4N15Controller_Host15onRequestUptimeE", "Controller_Host::onRequestUptime"], [368, 5, 1, "_CPPv419Controller_Sampling", "Controller_Sampling"], [368, 1, 1, "_CPPv4N19Controller_Sampling20doClearFifoWatermarkE", "Controller_Sampling::doClearFifoWatermark"], [368, 1, 1, "_CPPv4N19Controller_Sampling20doSet5usTimerExpiredE", "Controller_Sampling::doSet5usTimerExpired"], [368, 1, 1, "_CPPv4N19Controller_Sampling17doSetFifoOverflowE", "Controller_Sampling::doSetFifoOverflow"], [368, 1, 1, "_CPPv4N19Controller_Sampling18doSetFifoWatermarkE", "Controller_Sampling::doSetFifoWatermark"], [368, 1, 1, "_CPPv4N19Controller_Sampling6handleE", "Controller_Sampling::handle"], [369, 5, 1, "_CPPv417Controller_Sensor", "Controller_Sensor"], [369, 1, 1, "_CPPv4N17Controller_Sensor6handleE", "Controller_Sensor::handle"], [369, 1, 1, "_CPPv4N17Controller_Sensor4initE", "Controller_Sensor::init"], [370, 5, 1, "_CPPv43Foo", "Foo"], [370, 1, 1, "_CPPv4N3Foo4dataE", "Foo::data"], [598, 1, 1, "_CPPv4N3Foo4dataE", "Foo::data"], [207, 6, 1, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t", "HostTransportImpl_doTransmitImpl"], [210, 6, 1, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t", "HostTransportImpl_doTransmitImpl"], [207, 7, 1, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t", "HostTransportImpl_doTransmitImpl::buffer"], [210, 7, 1, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t", "HostTransportImpl_doTransmitImpl::buffer"], [207, 7, 1, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t", "HostTransportImpl_doTransmitImpl::len"], [210, 7, 1, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t", "HostTransportImpl_doTransmitImpl::len"], [209, 6, 1, "_CPPv436HostTransportImpl_isTransmitBusyImplv", "HostTransportImpl_isTransmitBusyImpl"], [212, 6, 1, "_CPPv436HostTransportImpl_isTransmitBusyImplv", "HostTransportImpl_isTransmitBusyImpl"], [208, 6, 1, "_CPPv436HostTransportImpl_onTakeReceivedImplPK7uint8_t", "HostTransportImpl_onTakeReceivedImpl"], [211, 6, 1, "_CPPv436HostTransportImpl_onTakeReceivedImplPK7uint8_t", "HostTransportImpl_onTakeReceivedImpl"], [208, 7, 1, "_CPPv436HostTransportImpl_onTakeReceivedImplPK7uint8_t", "HostTransportImpl_onTakeReceivedImpl::buffer"], [211, 7, 1, "_CPPv436HostTransportImpl_onTakeReceivedImplPK7uint8_t", "HostTransportImpl_onTakeReceivedImpl::buffer"], [371, 5, 1, "_CPPv425HostTransport_FromHostApi", "HostTransport_FromHostApi"], [371, 1, 1, "_CPPv4N25HostTransport_FromHostApi24doTakeReceivedPacketImplE", "HostTransport_FromHostApi::doTakeReceivedPacketImpl"], [372, 5, 1, "_CPPv420HostTransport_Handle", "HostTransport_Handle"], [372, 1, 1, "_CPPv4N20HostTransport_Handle8fromHostE", "HostTransport_Handle::fromHost"], [372, 1, 1, "_CPPv4N20HostTransport_Handle6toHostE", "HostTransport_Handle::toHost"], [86, 2, 1, "_CPPv420HostTransport_Status", "HostTransport_Status"], [86, 3, 1, "_CPPv4N20HostTransport_Status25HostTransport_Status_BusyE", "HostTransport_Status::HostTransport_Status_Busy"], [86, 3, 1, "_CPPv4N20HostTransport_Status25HostTransport_Status_FailE", "HostTransport_Status::HostTransport_Status_Fail"], [86, 3, 1, "_CPPv4N20HostTransport_Status23HostTransport_Status_OkE", "HostTransport_Status::HostTransport_Status_Ok"], [86, 3, 1, "_CPPv4N20HostTransport_Status30HostTransport_Status_UndefinedE", "HostTransport_Status::HostTransport_Status_Undefined"], [86, 3, 1, "_CPPv4N20HostTransport_Status25HostTransport_Status_BusyE", "HostTransport_Status_Busy"], [86, 3, 1, "_CPPv4N20HostTransport_Status25HostTransport_Status_FailE", "HostTransport_Status_Fail"], [86, 3, 1, "_CPPv4N20HostTransport_Status23HostTransport_Status_OkE", "HostTransport_Status_Ok"], [86, 3, 1, "_CPPv4N20HostTransport_Status30HostTransport_Status_UndefinedE", "HostTransport_Status_Undefined"], [373, 5, 1, "_CPPv423HostTransport_ToHostApi", "HostTransport_ToHostApi"], [373, 1, 1, "_CPPv4N23HostTransport_ToHostApi14doTransmitImplE", "HostTransport_ToHostApi::doTransmitImpl"], [373, 1, 1, "_CPPv4N23HostTransport_ToHostApi18isTransmitBusyImplE", "HostTransport_ToHostApi::isTransmitBusyImpl"], [373, 1, 1, "_CPPv4N23HostTransport_ToHostApi19largestTxChunkBytesE", "HostTransport_ToHostApi::largestTxChunkBytes"], [510, 1, 1, "_CPPv4N23HostTransport_ToHostApi19largestTxChunkBytesE", "HostTransport_ToHostApi::largestTxChunkBytes"], [373, 1, 1, "_CPPv4N23HostTransport_ToHostApi10ringbufferE", "HostTransport_ToHostApi::ringbuffer"], [374, 5, 1, "_CPPv410Ringbuffer", "Ringbuffer"], [374, 1, 1, "_CPPv4N10Ringbuffer5indexE", "Ringbuffer::index"], [536, 1, 1, "_CPPv4N10Ringbuffer5indexE", "Ringbuffer::index"], [374, 1, 1, "_CPPv4N10Ringbuffer7storageE", "Ringbuffer::storage"], [223, 6, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init"], [237, 6, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init"], [223, 7, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init::capacity"], [237, 7, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init::capacity"], [223, 7, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init::index"], [237, 7, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init::index"], [223, 7, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init::itemSizeBytes"], [237, 7, 1, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t", "RingbufferIndex_init::itemSizeBytes"], [375, 5, 1, "_CPPv416Ringbuffer_Index", "Ringbuffer_Index"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index5beginE", "Ringbuffer_Index::begin"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index8capacityE", "Ringbuffer_Index::capacity"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index3endE", "Ringbuffer_Index::end"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index7isEmptyE", "Ringbuffer_Index::isEmpty"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index6isFullE", "Ringbuffer_Index::isFull"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index13itemSizeBytesE", "Ringbuffer_Index::itemSizeBytes"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index10itemsCountE", "Ringbuffer_Index::itemsCount"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index15maxCapacityUsedE", "Ringbuffer_Index::maxCapacityUsed"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index8putCountE", "Ringbuffer_Index::putCount"], [528, 1, 1, "_CPPv4N16Ringbuffer_Index8putCountE", "Ringbuffer_Index::putCount"], [375, 1, 1, "_CPPv4N16Ringbuffer_Index9takeCountE", "Ringbuffer_Index::takeCount"], [555, 1, 1, "_CPPv4N16Ringbuffer_Index9takeCountE", "Ringbuffer_Index::takeCount"], [215, 6, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init"], [230, 6, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init"], [215, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::buffer"], [230, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::buffer"], [215, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::itemSizeBytes"], [230, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::itemSizeBytes"], [215, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::itemsCount"], [230, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::itemsCount"], [215, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::storage"], [230, 7, 1, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t", "Ringbuffer_init::storage"], [224, 6, 1, "_CPPv418Ringbuffer_isEmptyPK10Ringbuffer", "Ringbuffer_isEmpty"], [238, 6, 1, "_CPPv418Ringbuffer_isEmptyPK10Ringbuffer", "Ringbuffer_isEmpty"], [224, 7, 1, "_CPPv418Ringbuffer_isEmptyPK10Ringbuffer", "Ringbuffer_isEmpty::buffer"], [238, 7, 1, "_CPPv418Ringbuffer_isEmptyPK10Ringbuffer", "Ringbuffer_isEmpty::buffer"], [219, 6, 1, "_CPPv417Ringbuffer_isFullPK10Ringbuffer", "Ringbuffer_isFull"], [234, 6, 1, "_CPPv417Ringbuffer_isFullPK10Ringbuffer", "Ringbuffer_isFull"], [219, 7, 1, "_CPPv417Ringbuffer_isFullPK10Ringbuffer", "Ringbuffer_isFull::buffer"], [234, 7, 1, "_CPPv417Ringbuffer_isFullPK10Ringbuffer", "Ringbuffer_isFull::buffer"], [220, 6, 1, "_CPPv424Ringbuffer_itemSizeBytesPK10Ringbuffer", "Ringbuffer_itemSizeBytes"], [235, 6, 1, "_CPPv424Ringbuffer_itemSizeBytesPK10Ringbuffer", "Ringbuffer_itemSizeBytes"], [220, 7, 1, "_CPPv424Ringbuffer_itemSizeBytesPK10Ringbuffer", "Ringbuffer_itemSizeBytes::buffer"], [235, 7, 1, "_CPPv424Ringbuffer_itemSizeBytesPK10Ringbuffer", "Ringbuffer_itemSizeBytes::buffer"], [228, 6, 1, "_CPPv421Ringbuffer_itemsCountPK10Ringbuffer", "Ringbuffer_itemsCount"], [240, 6, 1, "_CPPv421Ringbuffer_itemsCountPK10Ringbuffer", "Ringbuffer_itemsCount"], [228, 7, 1, "_CPPv421Ringbuffer_itemsCountPK10Ringbuffer", "Ringbuffer_itemsCount::buffer"], [240, 7, 1, "_CPPv421Ringbuffer_itemsCountPK10Ringbuffer", "Ringbuffer_itemsCount::buffer"], [217, 6, 1, "_CPPv426Ringbuffer_maxCapacityUsedPK10Ringbuffer", "Ringbuffer_maxCapacityUsed"], [232, 6, 1, "_CPPv426Ringbuffer_maxCapacityUsedPK10Ringbuffer", "Ringbuffer_maxCapacityUsed"], [217, 7, 1, "_CPPv426Ringbuffer_maxCapacityUsedPK10Ringbuffer", "Ringbuffer_maxCapacityUsed::buffer"], [232, 7, 1, "_CPPv426Ringbuffer_maxCapacityUsedPK10Ringbuffer", "Ringbuffer_maxCapacityUsed::buffer"], [225, 6, 1, "_CPPv414Ringbuffer_putP10RingbufferPKv", "Ringbuffer_put"], [239, 6, 1, "_CPPv414Ringbuffer_putP10RingbufferPKv", "Ringbuffer_put"], [225, 7, 1, "_CPPv414Ringbuffer_putP10RingbufferPKv", "Ringbuffer_put::buffer"], [239, 7, 1, "_CPPv414Ringbuffer_putP10RingbufferPKv", "Ringbuffer_put::buffer"], [225, 7, 1, "_CPPv414Ringbuffer_putP10RingbufferPKv", "Ringbuffer_put::item"], [239, 7, 1, "_CPPv414Ringbuffer_putP10RingbufferPKv", "Ringbuffer_put::item"], [229, 6, 1, "_CPPv419Ringbuffer_putCountPK10Ringbuffer", "Ringbuffer_putCount"], [241, 6, 1, "_CPPv419Ringbuffer_putCountPK10Ringbuffer", "Ringbuffer_putCount"], [229, 7, 1, "_CPPv419Ringbuffer_putCountPK10Ringbuffer", "Ringbuffer_putCount::buffer"], [241, 7, 1, "_CPPv419Ringbuffer_putCountPK10Ringbuffer", "Ringbuffer_putCount::buffer"], [216, 6, 1, "_CPPv416Ringbuffer_resetP10Ringbuffer", "Ringbuffer_reset"], [231, 6, 1, "_CPPv416Ringbuffer_resetP10Ringbuffer", "Ringbuffer_reset"], [216, 7, 1, "_CPPv416Ringbuffer_resetP10Ringbuffer", "Ringbuffer_reset::buffer"], [231, 7, 1, "_CPPv416Ringbuffer_resetP10Ringbuffer", "Ringbuffer_reset::buffer"], [218, 6, 1, "_CPPv415Ringbuffer_takeP10RingbufferPv", "Ringbuffer_take"], [233, 6, 1, "_CPPv415Ringbuffer_takeP10RingbufferPv", "Ringbuffer_take"], [218, 7, 1, "_CPPv415Ringbuffer_takeP10RingbufferPv", "Ringbuffer_take::buffer"], [233, 7, 1, "_CPPv415Ringbuffer_takeP10RingbufferPv", "Ringbuffer_take::buffer"], [218, 7, 1, "_CPPv415Ringbuffer_takeP10RingbufferPv", "Ringbuffer_take::item"], [233, 7, 1, "_CPPv415Ringbuffer_takeP10RingbufferPv", "Ringbuffer_take::item"], [221, 6, 1, "_CPPv420Ringbuffer_takeCountPK10Ringbuffer", "Ringbuffer_takeCount"], [236, 6, 1, "_CPPv420Ringbuffer_takeCountPK10Ringbuffer", "Ringbuffer_takeCount"], [221, 7, 1, "_CPPv420Ringbuffer_takeCountPK10Ringbuffer", "Ringbuffer_takeCount::buffer"], [236, 7, 1, "_CPPv420Ringbuffer_takeCountPK10Ringbuffer", "Ringbuffer_takeCount::buffer"], [261, 6, 1, "_CPPv431SamplingImpl_doWaitDelay5usImplP15Sampling_Handle", "SamplingImpl_doWaitDelay5usImpl"], [262, 6, 1, "_CPPv431SamplingImpl_doWaitDelay5usImplP15Sampling_Handle", "SamplingImpl_doWaitDelay5usImpl"], [261, 7, 1, "_CPPv431SamplingImpl_doWaitDelay5usImplP15Sampling_Handle", "SamplingImpl_doWaitDelay5usImpl::handle"], [262, 7, 1, "_CPPv431SamplingImpl_doWaitDelay5usImplP15Sampling_Handle", "SamplingImpl_doWaitDelay5usImpl::handle"], [376, 5, 1, "_CPPv421Sampling_Acceleration", "Sampling_Acceleration"], [376, 1, 1, "_CPPv4N21Sampling_Acceleration1xE", "Sampling_Acceleration::x"], [376, 1, 1, "_CPPv4N21Sampling_Acceleration1yE", "Sampling_Acceleration::y"], [376, 1, 1, "_CPPv4N21Sampling_Acceleration1zE", "Sampling_Acceleration::z"], [377, 5, 1, "_CPPv415Sampling_Handle", "Sampling_Handle"], [377, 1, 1, "_CPPv4N15Sampling_Handle19doDisableSensorImplE", "Sampling_Handle::doDisableSensorImpl"], [377, 1, 1, "_CPPv4N15Sampling_Handle18doEnableSensorImplE", "Sampling_Handle::doEnableSensorImpl"], [377, 1, 1, "_CPPv4N15Sampling_Handle29doFetchSensorAccelerationImplE", "Sampling_Handle::doFetchSensorAccelerationImpl"], [377, 1, 1, "_CPPv4N15Sampling_Handle31doForwardAccelerationBufferImplE", "Sampling_Handle::doForwardAccelerationBufferImpl"], [377, 1, 1, "_CPPv4N15Sampling_Handle18doWaitDelay5usImplE", "Sampling_Handle::doWaitDelay5usImpl"], [377, 1, 1, "_CPPv4N15Sampling_Handle18onBufferOverflowCbE", "Sampling_Handle::onBufferOverflowCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle16onFifoOverflowCbE", "Sampling_Handle::onFifoOverflowCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle19onSamplingAbortedCbE", "Sampling_Handle::onSamplingAbortedCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle20onSamplingFinishedCbE", "Sampling_Handle::onSamplingFinishedCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle19onSamplingStartedCbE", "Sampling_Handle::onSamplingStartedCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle19onSamplingStoppedCbE", "Sampling_Handle::onSamplingStoppedCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle21onTransmissionErrorCbE", "Sampling_Handle::onTransmissionErrorCb"], [377, 1, 1, "_CPPv4N15Sampling_Handle5stateE", "Sampling_Handle::state"], [378, 5, 1, "_CPPv414Sampling_State", "Sampling_State"], [378, 1, 1, "_CPPv4N14Sampling_State7doStartE", "Sampling_State::doStart"], [378, 1, 1, "_CPPv4N14Sampling_State6doStopE", "Sampling_State::doStop"], [378, 1, 1, "_CPPv4N14Sampling_State17isFifoOverflowSetE", "Sampling_State::isFifoOverflowSet"], [378, 1, 1, "_CPPv4N14Sampling_State18isFifoWatermarkSetE", "Sampling_State::isFifoWatermarkSet"], [378, 1, 1, "_CPPv4N14Sampling_State9isStartedE", "Sampling_State::isStarted"], [378, 1, 1, "_CPPv4N14Sampling_State10maxSamplesE", "Sampling_State::maxSamples"], [582, 1, 1, "_CPPv4N14Sampling_State10maxSamplesE", "Sampling_State::maxSamples"], [378, 1, 1, "_CPPv4N14Sampling_State8rxBufferE", "Sampling_State::rxBuffer"], [378, 1, 1, "_CPPv4N14Sampling_State17transactionsCountE", "Sampling_State::transactionsCount"], [378, 1, 1, "_CPPv4N14Sampling_State15waitFor5usTimerE", "Sampling_State::waitFor5usTimer"], [248, 6, 1, "_CPPv427Sampling_clearFifoWatermarkP15Sampling_Handle", "Sampling_clearFifoWatermark"], [256, 6, 1, "_CPPv427Sampling_clearFifoWatermarkP15Sampling_Handle", "Sampling_clearFifoWatermark"], [248, 7, 1, "_CPPv427Sampling_clearFifoWatermarkP15Sampling_Handle", "Sampling_clearFifoWatermark::handle"], [256, 7, 1, "_CPPv427Sampling_clearFifoWatermarkP15Sampling_Handle", "Sampling_clearFifoWatermark::handle"], [243, 6, 1, "_CPPv421Sampling_fetchForwardP15Sampling_Handle", "Sampling_fetchForward"], [254, 6, 1, "_CPPv421Sampling_fetchForwardP15Sampling_Handle", "Sampling_fetchForward"], [243, 7, 1, "_CPPv421Sampling_fetchForwardP15Sampling_Handle", "Sampling_fetchForward::handle"], [254, 7, 1, "_CPPv421Sampling_fetchForwardP15Sampling_Handle", "Sampling_fetchForward::handle"], [252, 6, 1, "_CPPv426Sampling_on5usTimerExpiredP15Sampling_Handle", "Sampling_on5usTimerExpired"], [259, 6, 1, "_CPPv426Sampling_on5usTimerExpiredP15Sampling_Handle", "Sampling_on5usTimerExpired"], [252, 7, 1, "_CPPv426Sampling_on5usTimerExpiredP15Sampling_Handle", "Sampling_on5usTimerExpired::handle"], [259, 7, 1, "_CPPv426Sampling_on5usTimerExpiredP15Sampling_Handle", "Sampling_on5usTimerExpired::handle"], [253, 6, 1, "_CPPv424Sampling_setFifoOverflowP15Sampling_Handle", "Sampling_setFifoOverflow"], [260, 6, 1, "_CPPv424Sampling_setFifoOverflowP15Sampling_Handle", "Sampling_setFifoOverflow"], [253, 7, 1, "_CPPv424Sampling_setFifoOverflowP15Sampling_Handle", "Sampling_setFifoOverflow::handle"], [260, 7, 1, "_CPPv424Sampling_setFifoOverflowP15Sampling_Handle", "Sampling_setFifoOverflow::handle"], [246, 6, 1, "_CPPv425Sampling_setFifoWatermarkP15Sampling_Handle", "Sampling_setFifoWatermark"], [255, 6, 1, "_CPPv425Sampling_setFifoWatermarkP15Sampling_Handle", "Sampling_setFifoWatermark"], [246, 7, 1, "_CPPv425Sampling_setFifoWatermarkP15Sampling_Handle", "Sampling_setFifoWatermark::handle"], [255, 7, 1, "_CPPv425Sampling_setFifoWatermarkP15Sampling_Handle", "Sampling_setFifoWatermark::handle"], [250, 6, 1, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t", "Sampling_start"], [257, 6, 1, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t", "Sampling_start"], [250, 7, 1, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t", "Sampling_start::handle"], [257, 7, 1, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t", "Sampling_start::handle"], [250, 7, 1, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t", "Sampling_start::maxSamples"], [257, 7, 1, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t", "Sampling_start::maxSamples"], [251, 6, 1, "_CPPv413Sampling_stopP15Sampling_Handle", "Sampling_stop"], [258, 6, 1, "_CPPv413Sampling_stopP15Sampling_Handle", "Sampling_stop"], [251, 7, 1, "_CPPv413Sampling_stopP15Sampling_Handle", "Sampling_stop::handle"], [258, 7, 1, "_CPPv413Sampling_stopP15Sampling_Handle", "Sampling_stop::handle"], [379, 5, 1, "_CPPv414TransportFrame", "TransportFrame"], [594, 1, 1, "_CPPv4N14TransportFrame13__attribute__E", "TransportFrame::__attribute__"], [379, 1, 1, "_CPPv4N14TransportFrame9asRxFrameE", "TransportFrame::asRxFrame"], [532, 1, 1, "_CPPv4N14TransportFrame9asRxFrameE", "TransportFrame::asRxFrame"], [379, 1, 1, "_CPPv4N14TransportFrame9asTxFrameE", "TransportFrame::asTxFrame"], [552, 1, 1, "_CPPv4N14TransportFrame9asTxFrameE", "TransportFrame::asTxFrame"], [379, 1, 1, "_CPPv4N14TransportFrame6headerE", "TransportFrame::header"], [577, 1, 1, "_CPPv4N14TransportFrame6headerE", "TransportFrame::header"], [417, 4, 1, "_CPPv416TransportRxFrame", "TransportRxFrame"], [417, 1, 1, "_CPPv4N16TransportRxFrame14asDeviceRebootE", "TransportRxFrame::asDeviceReboot"], [549, 1, 1, "_CPPv4N16TransportRxFrame14asDeviceRebootE", "TransportRxFrame::asDeviceReboot"], [417, 1, 1, "_CPPv4N16TransportRxFrame17asGetBufferStatusE", "TransportRxFrame::asGetBufferStatus"], [490, 1, 1, "_CPPv4N16TransportRxFrame17asGetBufferStatusE", "TransportRxFrame::asGetBufferStatus"], [417, 1, 1, "_CPPv4N16TransportRxFrame16asGetDeviceSetupE", "TransportRxFrame::asGetDeviceSetup"], [575, 1, 1, "_CPPv4N16TransportRxFrame16asGetDeviceSetupE", "TransportRxFrame::asGetDeviceSetup"], [417, 1, 1, "_CPPv4N16TransportRxFrame20asGetFirmwareVersionE", "TransportRxFrame::asGetFirmwareVersion"], [580, 1, 1, "_CPPv4N16TransportRxFrame20asGetFirmwareVersionE", "TransportRxFrame::asGetFirmwareVersion"], [417, 1, 1, "_CPPv4N16TransportRxFrame19asGetOutputDataRateE", "TransportRxFrame::asGetOutputDataRate"], [585, 1, 1, "_CPPv4N16TransportRxFrame19asGetOutputDataRateE", "TransportRxFrame::asGetOutputDataRate"], [417, 1, 1, "_CPPv4N16TransportRxFrame10asGetRangeE", "TransportRxFrame::asGetRange"], [521, 1, 1, "_CPPv4N16TransportRxFrame10asGetRangeE", "TransportRxFrame::asGetRange"], [417, 1, 1, "_CPPv4N16TransportRxFrame10asGetScaleE", "TransportRxFrame::asGetScale"], [567, 1, 1, "_CPPv4N16TransportRxFrame10asGetScaleE", "TransportRxFrame::asGetScale"], [417, 1, 1, "_CPPv4N16TransportRxFrame11asGetUptimeE", "TransportRxFrame::asGetUptime"], [568, 1, 1, "_CPPv4N16TransportRxFrame11asGetUptimeE", "TransportRxFrame::asGetUptime"], [417, 1, 1, "_CPPv4N16TransportRxFrame15asSamplingStartE", "TransportRxFrame::asSamplingStart"], [543, 1, 1, "_CPPv4N16TransportRxFrame15asSamplingStartE", "TransportRxFrame::asSamplingStart"], [417, 1, 1, "_CPPv4N16TransportRxFrame14asSamplingStopE", "TransportRxFrame::asSamplingStop"], [564, 1, 1, "_CPPv4N16TransportRxFrame14asSamplingStopE", "TransportRxFrame::asSamplingStop"], [417, 1, 1, "_CPPv4N16TransportRxFrame19asSetOutputDataRateE", "TransportRxFrame::asSetOutputDataRate"], [572, 1, 1, "_CPPv4N16TransportRxFrame19asSetOutputDataRateE", "TransportRxFrame::asSetOutputDataRate"], [417, 1, 1, "_CPPv4N16TransportRxFrame10asSetRangeE", "TransportRxFrame::asSetRange"], [530, 1, 1, "_CPPv4N16TransportRxFrame10asSetRangeE", "TransportRxFrame::asSetRange"], [417, 1, 1, "_CPPv4N16TransportRxFrame10asSetScaleE", "TransportRxFrame::asSetScale"], [547, 1, 1, "_CPPv4N16TransportRxFrame10asSetScaleE", "TransportRxFrame::asSetScale"], [380, 5, 1, "_CPPv424TransportRx_DeviceReboot", "TransportRx_DeviceReboot"], [381, 5, 1, "_CPPv427TransportRx_GetBufferStatus", "TransportRx_GetBufferStatus"], [382, 5, 1, "_CPPv426TransportRx_GetDeviceSetup", "TransportRx_GetDeviceSetup"], [383, 5, 1, "_CPPv430TransportRx_GetFirmwareVersion", "TransportRx_GetFirmwareVersion"], [384, 5, 1, "_CPPv429TransportRx_GetOutputDataRate", "TransportRx_GetOutputDataRate"], [385, 5, 1, "_CPPv420TransportRx_GetRange", "TransportRx_GetRange"], [386, 5, 1, "_CPPv420TransportRx_GetScale", "TransportRx_GetScale"], [387, 5, 1, "_CPPv421TransportRx_GetUptime", "TransportRx_GetUptime"], [203, 6, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process"], [204, 6, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process"], [203, 7, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process::buffer"], [204, 7, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process::buffer"], [203, 7, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process::handle"], [204, 7, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process::handle"], [203, 7, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process::length"], [204, 7, 1, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t", "TransportRx_Process::length"], [388, 5, 1, "_CPPv425TransportRx_SamplingStart", "TransportRx_SamplingStart"], [388, 1, 1, "_CPPv4N25TransportRx_SamplingStart17max_samples_countE", "TransportRx_SamplingStart::max_samples_count"], [531, 1, 1, "_CPPv4N25TransportRx_SamplingStart17max_samples_countE", "TransportRx_SamplingStart::max_samples_count"], [389, 5, 1, "_CPPv424TransportRx_SamplingStop", "TransportRx_SamplingStop"], [390, 5, 1, "_CPPv429TransportRx_SetOutputDataRate", "TransportRx_SetOutputDataRate"], [390, 1, 1, "_CPPv4N29TransportRx_SetOutputDataRate4rateE", "TransportRx_SetOutputDataRate::rate"], [87, 2, 1, "_CPPv434TransportRx_SetOutputDataRate_Rate", "TransportRx_SetOutputDataRate_Rate"], [391, 5, 1, "_CPPv420TransportRx_SetRange", "TransportRx_SetRange"], [391, 1, 1, "_CPPv4N20TransportRx_SetRange5rangeE", "TransportRx_SetRange::range"], [91, 2, 1, "_CPPv426TransportRx_SetRange_Range", "TransportRx_SetRange_Range"], [392, 5, 1, "_CPPv420TransportRx_SetScale", "TransportRx_SetScale"], [392, 1, 1, "_CPPv4N20TransportRx_SetScale5scaleE", "TransportRx_SetScale::scale"], [525, 1, 1, "_CPPv4N20TransportRx_SetScale5scaleE", "TransportRx_SetScale::scale"], [88, 2, 1, "_CPPv426TransportRx_SetScale_Scale", "TransportRx_SetScale_Scale"], [418, 4, 1, "_CPPv416TransportTxFrame", "TransportTxFrame"], [418, 1, 1, "_CPPv4N16TransportTxFrame14asAccelerationE", "TransportTxFrame::asAcceleration"], [418, 1, 1, "_CPPv4N16TransportTxFrame16asBufferOverflowE", "TransportTxFrame::asBufferOverflow"], [588, 1, 1, "_CPPv4N16TransportTxFrame16asBufferOverflowE", "TransportTxFrame::asBufferOverflow"], [418, 1, 1, "_CPPv4N16TransportTxFrame14asBufferStatusE", "TransportTxFrame::asBufferStatus"], [512, 1, 1, "_CPPv4N16TransportTxFrame14asBufferStatusE", "TransportTxFrame::asBufferStatus"], [418, 1, 1, "_CPPv4N16TransportTxFrame13asDeviceSetupE", "TransportTxFrame::asDeviceSetup"], [520, 1, 1, "_CPPv4N16TransportTxFrame13asDeviceSetupE", "TransportTxFrame::asDeviceSetup"], [418, 1, 1, "_CPPv4N16TransportTxFrame7asFaultE", "TransportTxFrame::asFault"], [545, 1, 1, "_CPPv4N16TransportTxFrame7asFaultE", "TransportTxFrame::asFault"], [418, 1, 1, "_CPPv4N16TransportTxFrame14asFifoOverflowE", "TransportTxFrame::asFifoOverflow"], [518, 1, 1, "_CPPv4N16TransportTxFrame14asFifoOverflowE", "TransportTxFrame::asFifoOverflow"], [418, 1, 1, "_CPPv4N16TransportTxFrame17asFirmwareVersionE", "TransportTxFrame::asFirmwareVersion"], [498, 1, 1, "_CPPv4N16TransportTxFrame17asFirmwareVersionE", "TransportTxFrame::asFirmwareVersion"], [418, 1, 1, "_CPPv4N16TransportTxFrame16asOutputDataRateE", "TransportTxFrame::asOutputDataRate"], [554, 1, 1, "_CPPv4N16TransportTxFrame16asOutputDataRateE", "TransportTxFrame::asOutputDataRate"], [418, 1, 1, "_CPPv4N16TransportTxFrame7asRangeE", "TransportTxFrame::asRange"], [541, 1, 1, "_CPPv4N16TransportTxFrame7asRangeE", "TransportTxFrame::asRange"], [418, 1, 1, "_CPPv4N16TransportTxFrame17asSamplingAbortedE", "TransportTxFrame::asSamplingAborted"], [535, 1, 1, "_CPPv4N16TransportTxFrame17asSamplingAbortedE", "TransportTxFrame::asSamplingAborted"], [418, 1, 1, "_CPPv4N16TransportTxFrame18asSamplingFinishedE", "TransportTxFrame::asSamplingFinished"], [514, 1, 1, "_CPPv4N16TransportTxFrame18asSamplingFinishedE", "TransportTxFrame::asSamplingFinished"], [418, 1, 1, "_CPPv4N16TransportTxFrame17asSamplingStartedE", "TransportTxFrame::asSamplingStarted"], [497, 1, 1, "_CPPv4N16TransportTxFrame17asSamplingStartedE", "TransportTxFrame::asSamplingStarted"], [418, 1, 1, "_CPPv4N16TransportTxFrame17asSamplingStoppedE", "TransportTxFrame::asSamplingStopped"], [505, 1, 1, "_CPPv4N16TransportTxFrame17asSamplingStoppedE", "TransportTxFrame::asSamplingStopped"], [418, 1, 1, "_CPPv4N16TransportTxFrame7asScaleE", "TransportTxFrame::asScale"], [557, 1, 1, "_CPPv4N16TransportTxFrame7asScaleE", "TransportTxFrame::asScale"], [418, 1, 1, "_CPPv4N16TransportTxFrame19asTransmissionErrorE", "TransportTxFrame::asTransmissionError"], [548, 1, 1, "_CPPv4N16TransportTxFrame19asTransmissionErrorE", "TransportTxFrame::asTransmissionError"], [418, 1, 1, "_CPPv4N16TransportTxFrame8asUptimeE", "TransportTxFrame::asUptime"], [571, 1, 1, "_CPPv4N16TransportTxFrame8asUptimeE", "TransportTxFrame::asUptime"], [393, 5, 1, "_CPPv424TransportTx_Acceleration", "TransportTx_Acceleration"], [393, 1, 1, "_CPPv4N24TransportTx_Acceleration5indexE", "TransportTx_Acceleration::index"], [393, 1, 1, "_CPPv4N24TransportTx_Acceleration6valuesE", "TransportTx_Acceleration::values"], [586, 1, 1, "_CPPv4N24TransportTx_Acceleration6valuesE", "TransportTx_Acceleration::values"], [394, 5, 1, "_CPPv426TransportTx_BufferOverflow", "TransportTx_BufferOverflow"], [395, 5, 1, "_CPPv424TransportTx_BufferStatus", "TransportTx_BufferStatus"], [395, 1, 1, "_CPPv4N24TransportTx_BufferStatus13capacityTotalE", "TransportTx_BufferStatus::capacityTotal"], [565, 1, 1, "_CPPv4N24TransportTx_BufferStatus13capacityTotalE", "TransportTx_BufferStatus::capacityTotal"], [395, 1, 1, "_CPPv4N24TransportTx_BufferStatus15capacityUsedMaxE", "TransportTx_BufferStatus::capacityUsedMax"], [560, 1, 1, "_CPPv4N24TransportTx_BufferStatus15capacityUsedMaxE", "TransportTx_BufferStatus::capacityUsedMax"], [395, 1, 1, "_CPPv4N24TransportTx_BufferStatus19largestTxChunkBytesE", "TransportTx_BufferStatus::largestTxChunkBytes"], [395, 1, 1, "_CPPv4N24TransportTx_BufferStatus8putCountE", "TransportTx_BufferStatus::putCount"], [395, 1, 1, "_CPPv4N24TransportTx_BufferStatus9sizeBytesE", "TransportTx_BufferStatus::sizeBytes"], [503, 1, 1, "_CPPv4N24TransportTx_BufferStatus9sizeBytesE", "TransportTx_BufferStatus::sizeBytes"], [395, 1, 1, "_CPPv4N24TransportTx_BufferStatus9takeCountE", "TransportTx_BufferStatus::takeCount"], [396, 5, 1, "_CPPv423TransportTx_DeviceSetup", "TransportTx_DeviceSetup"], [396, 1, 1, "_CPPv4N23TransportTx_DeviceSetup14outputDataRateE", "TransportTx_DeviceSetup::outputDataRate"], [526, 1, 1, "_CPPv4N23TransportTx_DeviceSetup14outputDataRateE", "TransportTx_DeviceSetup::outputDataRate"], [396, 1, 1, "_CPPv4N23TransportTx_DeviceSetup5rangeE", "TransportTx_DeviceSetup::range"], [396, 1, 1, "_CPPv4N23TransportTx_DeviceSetup5scaleE", "TransportTx_DeviceSetup::scale"], [397, 5, 1, "_CPPv417TransportTx_Fault", "TransportTx_Fault"], [397, 1, 1, "_CPPv4N17TransportTx_Fault4codeE", "TransportTx_Fault::code"], [519, 1, 1, "_CPPv4N17TransportTx_Fault4codeE", "TransportTx_Fault::code"], [89, 2, 1, "_CPPv421TransportTx_FaultCode", "TransportTx_FaultCode"], [398, 5, 1, "_CPPv424TransportTx_FifoOverflow", "TransportTx_FifoOverflow"], [399, 5, 1, "_CPPv427TransportTx_FirmwareVersion", "TransportTx_FirmwareVersion"], [399, 1, 1, "_CPPv4N27TransportTx_FirmwareVersion5majorE", "TransportTx_FirmwareVersion::major"], [523, 1, 1, "_CPPv4N27TransportTx_FirmwareVersion5majorE", "TransportTx_FirmwareVersion::major"], [399, 1, 1, "_CPPv4N27TransportTx_FirmwareVersion5minorE", "TransportTx_FirmwareVersion::minor"], [581, 1, 1, "_CPPv4N27TransportTx_FirmwareVersion5minorE", "TransportTx_FirmwareVersion::minor"], [399, 1, 1, "_CPPv4N27TransportTx_FirmwareVersion5patchE", "TransportTx_FirmwareVersion::patch"], [488, 1, 1, "_CPPv4N27TransportTx_FirmwareVersion5patchE", "TransportTx_FirmwareVersion::patch"], [400, 5, 1, "_CPPv426TransportTx_OutputDataRate", "TransportTx_OutputDataRate"], [400, 1, 1, "_CPPv4N26TransportTx_OutputDataRate4rateE", "TransportTx_OutputDataRate::rate"], [401, 5, 1, "_CPPv417TransportTx_Range", "TransportTx_Range"], [401, 1, 1, "_CPPv4N17TransportTx_Range5rangeE", "TransportTx_Range::range"], [402, 5, 1, "_CPPv427TransportTx_SamplingAborted", "TransportTx_SamplingAborted"], [403, 5, 1, "_CPPv428TransportTx_SamplingFinished", "TransportTx_SamplingFinished"], [404, 5, 1, "_CPPv427TransportTx_SamplingStarted", "TransportTx_SamplingStarted"], [404, 1, 1, "_CPPv4N27TransportTx_SamplingStarted10maxSamplesE", "TransportTx_SamplingStarted::maxSamples"], [405, 5, 1, "_CPPv427TransportTx_SamplingStopped", "TransportTx_SamplingStopped"], [406, 5, 1, "_CPPv417TransportTx_Scale", "TransportTx_Scale"], [406, 1, 1, "_CPPv4N17TransportTx_Scale5scaleE", "TransportTx_Scale::scale"], [407, 5, 1, "_CPPv429TransportTx_TransmissionError", "TransportTx_TransmissionError"], [287, 6, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer"], [307, 6, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer"], [287, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::count"], [307, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::count"], [287, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::data"], [307, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::data"], [287, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::firstIndex"], [307, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::firstIndex"], [287, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::handle"], [307, 7, 1, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t", "TransportTx_TxAccelerationBuffer::handle"], [284, 6, 1, "_CPPv428TransportTx_TxBufferOverflowP20HostTransport_Handle", "TransportTx_TxBufferOverflow"], [304, 6, 1, "_CPPv428TransportTx_TxBufferOverflowP20HostTransport_Handle", "TransportTx_TxBufferOverflow"], [284, 7, 1, "_CPPv428TransportTx_TxBufferOverflowP20HostTransport_Handle", "TransportTx_TxBufferOverflow::handle"], [304, 7, 1, "_CPPv428TransportTx_TxBufferOverflowP20HostTransport_Handle", "TransportTx_TxBufferOverflow::handle"], [300, 6, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus"], [316, 6, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::capacityTotal"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::capacityTotal"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::capacityUsedMax"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::capacityUsedMax"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::handle"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::handle"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::largestTxChunkBytes"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::largestTxChunkBytes"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::putCount"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::putCount"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::sizeBytes"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::sizeBytes"], [300, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::takeCount"], [316, 7, 1, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t", "TransportTx_TxBufferStatus::takeCount"], [297, 6, 1, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode", "TransportTx_TxFault"], [314, 6, 1, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode", "TransportTx_TxFault"], [297, 7, 1, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode", "TransportTx_TxFault::code"], [314, 7, 1, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode", "TransportTx_TxFault::code"], [297, 7, 1, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode", "TransportTx_TxFault::handle"], [314, 7, 1, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode", "TransportTx_TxFault::handle"], [282, 6, 1, "_CPPv426TransportTx_TxFifoOverflowP20HostTransport_Handle", "TransportTx_TxFifoOverflow"], [303, 6, 1, "_CPPv426TransportTx_TxFifoOverflowP20HostTransport_Handle", "TransportTx_TxFifoOverflow"], [282, 7, 1, "_CPPv426TransportTx_TxFifoOverflowP20HostTransport_Handle", "TransportTx_TxFifoOverflow::handle"], [303, 7, 1, "_CPPv426TransportTx_TxFifoOverflowP20HostTransport_Handle", "TransportTx_TxFifoOverflow::handle"], [295, 6, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion"], [312, 6, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion"], [295, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::handle"], [312, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::handle"], [295, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::major"], [312, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::major"], [295, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::minor"], [312, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::minor"], [295, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::patch"], [312, 7, 1, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxFirmwareVersion::patch"], [281, 6, 1, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t", "TransportTx_TxOutputDataRate"], [302, 6, 1, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t", "TransportTx_TxOutputDataRate"], [281, 7, 1, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t", "TransportTx_TxOutputDataRate::handle"], [302, 7, 1, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t", "TransportTx_TxOutputDataRate::handle"], [281, 7, 1, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t", "TransportTx_TxOutputDataRate::sensorOdr"], [302, 7, 1, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t", "TransportTx_TxOutputDataRate::sensorOdr"], [301, 6, 1, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t", "TransportTx_TxRange"], [317, 6, 1, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t", "TransportTx_TxRange"], [301, 7, 1, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t", "TransportTx_TxRange::handle"], [317, 7, 1, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t", "TransportTx_TxRange::handle"], [301, 7, 1, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t", "TransportTx_TxRange::sensorRange"], [317, 7, 1, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t", "TransportTx_TxRange::sensorRange"], [286, 6, 1, "_CPPv429TransportTx_TxSamplingAbortedP20HostTransport_Handle", "TransportTx_TxSamplingAborted"], [306, 6, 1, "_CPPv429TransportTx_TxSamplingAbortedP20HostTransport_Handle", "TransportTx_TxSamplingAborted"], [286, 7, 1, "_CPPv429TransportTx_TxSamplingAbortedP20HostTransport_Handle", "TransportTx_TxSamplingAborted::handle"], [306, 7, 1, "_CPPv429TransportTx_TxSamplingAbortedP20HostTransport_Handle", "TransportTx_TxSamplingAborted::handle"], [285, 6, 1, "_CPPv430TransportTx_TxSamplingFinishedP20HostTransport_Handle", "TransportTx_TxSamplingFinished"], [305, 6, 1, "_CPPv430TransportTx_TxSamplingFinishedP20HostTransport_Handle", "TransportTx_TxSamplingFinished"], [285, 7, 1, "_CPPv430TransportTx_TxSamplingFinishedP20HostTransport_Handle", "TransportTx_TxSamplingFinished::handle"], [305, 7, 1, "_CPPv430TransportTx_TxSamplingFinishedP20HostTransport_Handle", "TransportTx_TxSamplingFinished::handle"], [292, 6, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup"], [311, 6, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup"], [292, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::handle"], [311, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::handle"], [292, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::sensorOdr"], [311, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::sensorOdr"], [292, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::sensorRange"], [311, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::sensorRange"], [292, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::sensorScale"], [311, 7, 1, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t", "TransportTx_TxSamplingSetup::sensorScale"], [298, 6, 1, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t", "TransportTx_TxSamplingStarted"], [315, 6, 1, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t", "TransportTx_TxSamplingStarted"], [298, 7, 1, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t", "TransportTx_TxSamplingStarted::handle"], [315, 7, 1, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t", "TransportTx_TxSamplingStarted::handle"], [298, 7, 1, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t", "TransportTx_TxSamplingStarted::max_samples"], [315, 7, 1, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t", "TransportTx_TxSamplingStarted::max_samples"], [296, 6, 1, "_CPPv429TransportTx_TxSamplingStoppedP20HostTransport_Handle", "TransportTx_TxSamplingStopped"], [313, 6, 1, "_CPPv429TransportTx_TxSamplingStoppedP20HostTransport_Handle", "TransportTx_TxSamplingStopped"], [296, 7, 1, "_CPPv429TransportTx_TxSamplingStoppedP20HostTransport_Handle", "TransportTx_TxSamplingStopped::handle"], [313, 7, 1, "_CPPv429TransportTx_TxSamplingStoppedP20HostTransport_Handle", "TransportTx_TxSamplingStopped::handle"], [288, 6, 1, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t", "TransportTx_TxScale"], [308, 6, 1, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t", "TransportTx_TxScale"], [288, 7, 1, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t", "TransportTx_TxScale::handle"], [308, 7, 1, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t", "TransportTx_TxScale::handle"], [288, 7, 1, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t", "TransportTx_TxScale::sensorScale"], [308, 7, 1, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t", "TransportTx_TxScale::sensorScale"], [289, 6, 1, "_CPPv431TransportTx_TxTransmissionErrorP20HostTransport_Handle", "TransportTx_TxTransmissionError"], [309, 6, 1, "_CPPv431TransportTx_TxTransmissionErrorP20HostTransport_Handle", "TransportTx_TxTransmissionError"], [289, 7, 1, "_CPPv431TransportTx_TxTransmissionErrorP20HostTransport_Handle", "TransportTx_TxTransmissionError::handle"], [309, 7, 1, "_CPPv431TransportTx_TxTransmissionErrorP20HostTransport_Handle", "TransportTx_TxTransmissionError::handle"], [291, 6, 1, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t", "TransportTx_TxUptime"], [310, 6, 1, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t", "TransportTx_TxUptime"], [291, 7, 1, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t", "TransportTx_TxUptime::handle"], [310, 7, 1, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t", "TransportTx_TxUptime::handle"], [291, 7, 1, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t", "TransportTx_TxUptime::uptimeMs"], [310, 7, 1, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t", "TransportTx_TxUptime::uptimeMs"], [408, 5, 1, "_CPPv418TransportTx_Uptime", "TransportTx_Uptime"], [408, 1, 1, "_CPPv4N18TransportTx_Uptime9elapsedMsE", "TransportTx_Uptime::elapsedMs"], [584, 1, 1, "_CPPv4N18TransportTx_Uptime9elapsedMsE", "TransportTx_Uptime::elapsedMs"], [409, 5, 1, "_CPPv422Transport_Acceleration", "Transport_Acceleration"], [409, 1, 1, "_CPPv4N22Transport_Acceleration1xE", "Transport_Acceleration::x"], [409, 1, 1, "_CPPv4N22Transport_Acceleration1yE", "Transport_Acceleration::y"], [409, 1, 1, "_CPPv4N22Transport_Acceleration1zE", "Transport_Acceleration::z"], [410, 5, 1, "_CPPv416Transport_Header", "Transport_Header"], [410, 1, 1, "_CPPv4N16Transport_Header2idE", "Transport_Header::id"], [550, 1, 1, "_CPPv4N16Transport_Header2idE", "Transport_Header::id"], [90, 2, 1, "_CPPv418Transport_HeaderId", "Transport_HeaderId"], [411, 5, 1, "_CPPv423Transport_ResponseFlags", "Transport_ResponseFlags"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags11_reserved_0E", "Transport_ResponseFlags::_reserved_0"], [483, 1, 1, "_CPPv4N23Transport_ResponseFlags11_reserved_0E", "Transport_ResponseFlags::_reserved_0"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags11_reserved_1E", "Transport_ResponseFlags::_reserved_1"], [479, 1, 1, "_CPPv4N23Transport_ResponseFlags11_reserved_1E", "Transport_ResponseFlags::_reserved_1"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags28host_responseGetBufferStatusE", "Transport_ResponseFlags::host_responseGetBufferStatus"], [473, 1, 1, "_CPPv4N23Transport_ResponseFlags28host_responseGetBufferStatusE", "Transport_ResponseFlags::host_responseGetBufferStatus"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags27host_responseGetDeviceSetupE", "Transport_ResponseFlags::host_responseGetDeviceSetup"], [485, 1, 1, "_CPPv4N23Transport_ResponseFlags27host_responseGetDeviceSetupE", "Transport_ResponseFlags::host_responseGetDeviceSetup"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags31host_responseGetFirmwareVersionE", "Transport_ResponseFlags::host_responseGetFirmwareVersion"], [484, 1, 1, "_CPPv4N23Transport_ResponseFlags31host_responseGetFirmwareVersionE", "Transport_ResponseFlags::host_responseGetFirmwareVersion"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags30host_responseGetOutputDataRateE", "Transport_ResponseFlags::host_responseGetOutputDataRate"], [470, 1, 1, "_CPPv4N23Transport_ResponseFlags30host_responseGetOutputDataRateE", "Transport_ResponseFlags::host_responseGetOutputDataRate"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags21host_responseGetRangeE", "Transport_ResponseFlags::host_responseGetRange"], [481, 1, 1, "_CPPv4N23Transport_ResponseFlags21host_responseGetRangeE", "Transport_ResponseFlags::host_responseGetRange"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags21host_responseGetScaleE", "Transport_ResponseFlags::host_responseGetScale"], [477, 1, 1, "_CPPv4N23Transport_ResponseFlags21host_responseGetScaleE", "Transport_ResponseFlags::host_responseGetScale"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags22host_responseGetUptimeE", "Transport_ResponseFlags::host_responseGetUptime"], [472, 1, 1, "_CPPv4N23Transport_ResponseFlags22host_responseGetUptimeE", "Transport_ResponseFlags::host_responseGetUptime"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags31sampling_responseBufferOverflowE", "Transport_ResponseFlags::sampling_responseBufferOverflow"], [468, 1, 1, "_CPPv4N23Transport_ResponseFlags31sampling_responseBufferOverflowE", "Transport_ResponseFlags::sampling_responseBufferOverflow"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags29sampling_responseFifoOverflowE", "Transport_ResponseFlags::sampling_responseFifoOverflow"], [474, 1, 1, "_CPPv4N23Transport_ResponseFlags29sampling_responseFifoOverflowE", "Transport_ResponseFlags::sampling_responseFifoOverflow"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingAbortedE", "Transport_ResponseFlags::sampling_responseSamplingAborted"], [478, 1, 1, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingAbortedE", "Transport_ResponseFlags::sampling_responseSamplingAborted"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags33sampling_responseSamplingFinishedE", "Transport_ResponseFlags::sampling_responseSamplingFinished"], [476, 1, 1, "_CPPv4N23Transport_ResponseFlags33sampling_responseSamplingFinishedE", "Transport_ResponseFlags::sampling_responseSamplingFinished"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingStoppedE", "Transport_ResponseFlags::sampling_responseSamplingStopped"], [471, 1, 1, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingStoppedE", "Transport_ResponseFlags::sampling_responseSamplingStopped"], [411, 1, 1, "_CPPv4N23Transport_ResponseFlags34sampling_responseTransmissionErrorE", "Transport_ResponseFlags::sampling_responseTransmissionError"], [482, 1, 1, "_CPPv4N23Transport_ResponseFlags34sampling_responseTransmissionErrorE", "Transport_ResponseFlags::sampling_responseTransmissionError"], [205, 6, 1, "_CPPv421Transport_resetBufferP20HostTransport_Handle", "Transport_resetBuffer"], [206, 6, 1, "_CPPv421Transport_resetBufferP20HostTransport_Handle", "Transport_resetBuffer"], [205, 7, 1, "_CPPv421Transport_resetBufferP20HostTransport_Handle", "Transport_resetBuffer::handle"], [206, 7, 1, "_CPPv421Transport_resetBufferP20HostTransport_Handle", "Transport_resetBuffer::handle"], [412, 5, 1, "_CPPv48TwoBytes", "TwoBytes"], [412, 1, 1, "_CPPv4N8TwoBytes5byte1E", "TwoBytes::byte1"], [457, 1, 1, "_CPPv4N8TwoBytes5byte1E", "TwoBytes::byte1"], [412, 1, 1, "_CPPv4N8TwoBytes5byte2E", "TwoBytes::byte2"], [456, 1, 1, "_CPPv4N8TwoBytes5byte2E", "TwoBytes::byte2"], [480, 1, 1, "_CPPv416controllerHandle", "controllerHandle"], [486, 1, 1, "_CPPv416controllerHandle", "controllerHandle"], [487, 1, 1, "_CPPv416controllerHandle", "controllerHandle"], [593, 1, 1, "_CPPv416controllerHandle", "controllerHandle"], [242, 6, 1, "_CPPv44mainiPPc", "main"], [242, 7, 1, "_CPPv44mainiPPc", "main::argc"], [242, 7, 1, "_CPPv44mainiPPc", "main::argv"], [591, 1, 1, "_CPPv417ringbufferStorage", "ringbufferStorage"], [592, 1, 1, "_CPPv417ringbufferStorage", "ringbufferStorage"]]}, "objtypes": {"0": "c:macro", "1": "cpp:member", "2": "cpp:enum", "3": "cpp:enumerator", "4": "cpp:union", "5": "cpp:class", "6": "cpp:function", "7": "cpp:functionParam"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "member", "C++ member"], "2": ["cpp", "enum", "C++ enum"], "3": ["cpp", "enumerator", "C++ enumerator"], "4": ["cpp", "union", "C++ union"], "5": ["cpp", "class", "C++ class"], "6": ["cpp", "function", "C++ function"], "7": ["cpp", "functionParam", "C++ function parameter"]}, "titleterms": {"defin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 92, 94, 96, 97, 99, 101, 107, 117, 118, 120, 125, 126, 127, 318], "adxl345_watermark_level": 0, "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599], "adxl345_fifo_entri": 1, "adxl345_handle_initi": 2, "hosttransport_declare_initi": 3, "mystringize0": 4, "sampling_declare_initi": 5, "mystring": 6, "user_debug0_low": 7, "user_debug1_toggl": 8, "user_debug0_high": 9, "user_debug1_low": 10, "user_debug0_toggl": 11, "user_debug1_high": 12, "transporttx_transmit_tx_data_chunk_buffer_byt": 13, "sizeof_header_incl_payload": 14, "user_led0_off": 15, "user_led0_on": 16, "user_led0_toggl": 17, "ringbuffer_storage_item_size_byt": 18, "ringbuffer_declare_initi": 19, "ringbuffer_storage_size_byt": 20, "ringbuffer_index_initi": 21, "ringbuffer_initi": 22, "sampling_num_samples_read_at_onc": 23, "declare_buffer_capacity3": 24, "declare_buffer_capacity65535": 25, "declare_buffer_capacity1": 26, "transporttx_transmit_acceleration_buffer_byt": 27, "unity_include_exec_tim": 28, "version_major": 29, "version": [30, 99, 105, 326, 332], "version_patch": 31, "version_minor": 32, "directori": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 413], "inc": [33, 92, 93, 94, 95, 96, 97, 98, 99], "subdirectori": [33, 35, 37, 38, 40, 42, 44, 46, 48], "fw": [34, 36, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "file": [34, 36, 39, 41, 43, 45, 47, 48, 49, 50, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 413], "src": [35, 39, 41, 43, 45, 47, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "lib": [37, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "adxl345": [38, 106, 107, 108, 109, 110, 111, 333, 334], "control": [40, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 339, 340], "host_transport": [42, 114, 115, 116, 117, 118, 119, 120, 343, 344], "ringbuff": [44, 121, 122, 215, 216, 217, 218, 219, 220, 221, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 348, 349, 374], "sampl": [46, 123, 124, 125, 350, 351, 453], "test": [48, 126, 127, 128, 264, 353, 355], "test_ringbuff": [49, 126], "util": [50, 128], "enum": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 108, 110, 117, 118, 133, 139, 140, 144, 149, 150, 154, 157, 297, 314, 318], "adxl345flags_intenable_inact": 51, "adxl345flags_fifostatus_fifotrig": 52, "adxl345flags_dataformat_fullresbit": [53, 139, 149], "adxl345flags_intenable_overrun": 54, "adxl345flags_fifoctl_trigg": 55, "adxl345flags_intmap_singletap": 56, "adxl345flags_powerctl_autosleep": 57, "adxl345flags_powerctl_link": 58, "adxl345flags_intmap_doubletap": 59, "adxl345flags_intmap_inact": 60, "adxl345flags_intmap_datareadi": 61, "adxl345flags_bwrate_lowpow": 62, "adxl345flags_dataformat_intinvert": 63, "adxl345flags_fifoctl_fifomod": 64, "adxl345flags_powerctl_wakeup": 65, "adxl345flags_intmap_freefal": 66, "adxl345flags_dataformat_rang": [67, 133, 144], "adxl345flags_intenable_doubletap": 68, "adxl345flags_bwrate_r": [69, 140, 150], "adxl345flags_intmap_act": 70, "adxl345flags_intenable_watermark": 71, "adxl345flags_dataformat_selftest": 72, "adxl345flags_intenable_datareadi": 73, "adxl345flags_intenable_singletap": 74, "adxl345flags_intmap_watermark": 75, "adxl345flags_intenable_act": 76, "adxl345flags_intmap_overrun": 77, "adxl345flags_powerctl_sleep": 78, "adxl345flags_powerctl_measur": 79, "adxl345flags_dataformat_justifi": 80, "adxl345flags_intenable_freefal": 81, "adxl345flags_dataformat_spibit": 82, "adxl345flags_address": 83, "adxl345spi_c": [84, 154, 157], "adxl345spi_rwflag": [85, 154, 157], "hosttransport_statu": 86, "transportrx_setoutputdatarate_r": 87, "transportrx_setscale_scal": 88, "transporttx_faultcod": [89, 297, 314], "transport_headerid": 90, "transportrx_setrange_rang": 91, "adxl345_transport_impl": [92, 100, 319, 327], "h": [92, 93, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 113, 115, 117, 118, 120, 122, 124, 125, 127, 128, 319, 320, 321, 322, 323, 324, 325, 326, 334, 335, 336, 337, 338, 340, 342, 344, 345, 347, 349, 351, 352, 354, 355], "content": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 599], "definit": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "home": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "runner": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "work": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "detail": [92, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 124, 125], "descript": [92, 94, 95, 96, 98, 99, 100, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 124, 125], "includ": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128], "By": [92, 94, 95, 96, 97, 98, 99, 107, 108, 109, 110, 111, 113, 115, 117, 118, 120, 122, 124, 125, 128], "function": [92, 95, 98, 100, 101, 102, 104, 106, 107, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "controller_impl": [93, 101, 320, 328], "variabl": [93, 97, 101, 102, 103, 104, 109, 111, 118, 125, 126, 318, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598], "debug": [94, 321], "host_transport_impl": [95, 102, 322, 329], "led": [96, 323], "ringbuffer_impl": [97, 103, 324, 330], "sampling_impl": [98, 104, 325, 331], "c": [100, 101, 102, 103, 104, 105, 106, 112, 114, 116, 119, 121, 123, 126, 327, 328, 329, 330, 331, 332, 333, 339, 341, 343, 346, 348, 350, 353], "class": [101, 107, 109, 111, 113, 117, 118, 122, 125, 126, 318], "adxl345_flag": [108, 335], "adxl345_regist": [109, 336], "union": [109, 111, 118, 154, 156, 157, 158, 318, 414, 415, 416, 417, 418], "adxl345_spi_typ": [110, 337], "adxl345_transport_typ": [111, 338], "from_host_transport": [114, 115, 341, 342], "host_transport_typ": [118, 345], "to_host_transport": [119, 120, 346, 347], "sampling_typ": [125, 352], "unity_config": [127, 354], "run": [128, 355], "adxl345_setpowerctlmeasur": [129, 141], "struct": [129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 203, 204, 205, 206, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412], "adxl345_handl": [129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 365], "adxl345_setrang": [130, 142], "uint8_t": [130, 137, 138, 142, 147, 148, 154, 156, 157, 158, 203, 204, 207, 208, 210, 211, 215, 223, 230, 237, 281, 287, 288, 292, 295, 301, 302, 307, 308, 311, 312, 317], "adxl345_getacceler": [131, 143], "adxl345transport_acceler": [131, 143, 363], "writeregist": 132, "adxl345_getrang": [133, 144], "readregist": 134, "adxl345_init": [135, 145], "adxl345_setpowerctlstandbi": [136, 146], "adxl345_setscal": [137, 147], "adxl345_setoutputdatar": [138, 148], "adxl345_getscal": [139, 149], "adxl345_getoutputdatar": [140, 150], "__attribute__": [151, 159, 188, 213, 214, 263, 265, 594], "pack": [151, 159, 188, 214, 263, 265], "ncsclear": 152, "receivefram": 153, "adxl345transportimpl_dotransmitframeimpl": [154, 157], "const": [154, 156, 157, 158, 203, 204, 208, 211, 217, 219, 220, 221, 224, 225, 228, 229, 232, 234, 235, 236, 238, 239, 240, 241, 287, 307], "adxl345transport_txfram": [154, 156, 157, 158, 416], "ncsset": 155, "adxl345transportimpl_dotransmitreceiveframeimpl": [156, 158], "adxl345transport_rxfram": [156, 158, 415], "sampling_onbufferoverflowcb": 160, "sampling_onsamplingfinishedcb": 161, "sampling_doenablesensorimpl": 162, "host_onrequestgetuptim": 163, "host_onrequestgetbufferstatu": 164, "fault_onnmifaulthandl": 165, "sampling_dodisablesensorimpl": 166, "controllerimpl_init": 167, "sampling_onfifooverflowcb": 168, "sampling_doforwardaccelerationbufferimpl": 169, "sampling_clearfifowatermark": [170, 248, 256], "controllerimpl_transmitpendingrespons": 171, "host_onrequestsetrang": 172, "sampling_setfifooverflow": [173, 253, 260], "sampling_on5ustimerexpir": [174, 252, 259], "host_onrequestsamplingstart": 175, "sensor_dogetoutputdatarateimpl": 176, "sensor_doinitimpl": 177, "sensor_dogetscaleimpl": 178, "sensor_dogetrangeimpl": 179, "fault_onerrorhandl": 180, "host_onrequestgetoutputdatar": 181, "fault_onbusfaulthandl": 182, "sampling_onsamplingstoppedcb": 183, "host_dotakebyt": 184, "host_onrequestsetoutputdatatr": 185, "host_onrequestsamplingstop": 186, "host_onrequestgetscal": 187, "controllerimpl_device_checkreboot": 189, "controllerimpl_loop": 190, "controllerimpl_device_requestasyncreboot": 191, "host_onrequestgetrang": 192, "fault_onusagefaulthandl": 193, "fault_onhardfaulthandl": 194, "sampling_ontransmissionerrorcb": 195, "sampling_dofetchsensoraccelerationimpl": 196, "sampling_onsamplingstartedcb": 197, "sampling_onsamplingabortedcb": 198, "host_onrequestgetfirmwarevers": 199, "host_onrequestgetdevicesetup": 200, "host_onrequestsetscal": 201, "sampling_setfifowatermark": [202, 246, 255], "transportrx_process": [203, 204], "hosttransport_handl": [203, 204, 205, 206, 281, 282, 284, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 372], "uint16_t": [203, 204, 207, 210, 215, 223, 230, 237, 250, 257, 287, 298, 300, 307, 315, 316], "transport_resetbuff": [205, 206], "hosttransportimpl_dotransmitimpl": [207, 210], "hosttransportimpl_ontakereceivedimpl": [208, 211], "hosttransportimpl_istransmitbusyimpl": [209, 212], "__packed__": 213, "ringbuffer_init": [215, 230], "ringbuffer_reset": [216, 231], "ringbuffer_maxcapacityus": [217, 232], "ringbuffer_tak": [218, 233], "void": [218, 225, 233, 239], "ringbuffer_isful": [219, 234], "ringbuffer_itemsizebyt": [220, 235], "ringbuffer_takecount": [221, 236], "advancebegin": 222, "ringbufferindex_init": [223, 237], "ringbuffer_index": [223, 237, 375], "ringbuffer_isempti": [224, 238], "ringbuffer_put": [225, 239], "advanceend": 226, "itematindex": 227, "ringbuffer_itemscount": [228, 240], "ringbuffer_putcount": [229, 241], "main": 242, "sampling_fetchforward": [243, 254], "sampling_handl": [243, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 377], "checkstartrequest": 244, "transmitpend": 245, "isnsamplesreaden": 247, "checkstoprequest": 249, "sampling_start": [250, 257], "sampling_stop": [251, 258], "samplingimpl_dowaitdelay5usimpl": [261, 262], "test_cap3_overflow": 266, "test_cap1_empty_isemptynotful": 267, "test_cap3_full_isnotemptybutful": 268, "setup": 269, "test_cap3_putandoverflow": 270, "test_cap3_empty_takeitem": 271, "teardown": 272, "test_cap65535_movingwindowbeyondlimit": 273, "test_cap3_notemptynotfull_takeitem": 274, "test_cap65535_beyondlimitsandabov": 275, "test_cap3_notemptynotfull_isnotemptynotful": 276, "test_cap3_full_takeitem": 277, "test_cap3_putandtakenooverflow": 278, "test_cap3_empty_isemptynotful": 279, "test_cap1_ful": 280, "transporttx_txoutputdatar": [281, 302], "transporttx_txfifooverflow": [282, 303], "pushtoringbuff": 283, "transporttx_txbufferoverflow": [284, 304], "transporttx_txsamplingfinish": [285, 305], "transporttx_txsamplingabort": [286, 306], "transporttx_txaccelerationbuff": [287, 307], "transport_acceler": [287, 307, 409], "transporttx_txscal": [288, 308], "transporttx_txtransmissionerror": [289, 309], "transmitaccelerationbuff": 290, "transporttx_txuptim": [291, 310], "uint32_t": [291, 310], "transporttx_txsamplingsetup": [292, 311], "istransmitbusi": 293, "transmit": 294, "transporttx_txfirmwarevers": [295, 312], "transporttx_txsamplingstop": [296, 313], "transporttx_txfault": [297, 314], "transporttx_txsamplingstart": [298, 315], "popdatafromringbuff": 299, "transporttx_txbufferstatu": [300, 316], "transporttx_txrang": [301, 317], "librari": 318, "api": [318, 413], "full": [318, 413], "program": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "list": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "adxl345register_bwr": 356, "adxl345register_dataformat": 357, "adxl345register_fifoctl": 358, "adxl345register_fifostatu": 359, "adxl345register_inten": 360, "adxl345register_intmap": 361, "adxl345register_powerctl": 362, "adxl345transport_datapaddedregist": 364, "controller_handl": 366, "controller_host": 367, "controller_sampl": 368, "controller_sensor": 369, "foo": 370, "hosttransport_fromhostapi": 371, "hosttransport_tohostapi": 373, "sampling_acceler": 376, "sampling_st": 378, "transportfram": 379, "transportrx_devicereboot": 380, "transportrx_getbufferstatu": 381, "transportrx_getdevicesetup": 382, "transportrx_getfirmwarevers": 383, "transportrx_getoutputdatar": 384, "transportrx_getrang": 385, "transportrx_getscal": 386, "transportrx_getuptim": 387, "transportrx_samplingstart": 388, "transportrx_samplingstop": 389, "transportrx_setoutputdatar": 390, "transportrx_setrang": 391, "transportrx_setscal": 392, "transporttx_acceler": 393, "transporttx_bufferoverflow": 394, "transporttx_bufferstatu": 395, "transporttx_devicesetup": 396, "transporttx_fault": 397, "transporttx_fifooverflow": 398, "transporttx_firmwarevers": 399, "transporttx_outputdatar": 400, "transporttx_rang": 401, "transporttx_samplingabort": 402, "transporttx_samplingfinish": 403, "transporttx_samplingstart": 404, "transporttx_samplingstop": 405, "transporttx_scal": 406, "transporttx_transmissionerror": 407, "transporttx_uptim": 408, "transport_head": 410, "transport_responseflag": 411, "twobyt": 412, "adxl345regist": 414, "transportrxfram": 417, "transporttxfram": 418, "lowpow": 419, "wakeup": 420, "aspowercontrol": 421, "asfifoctl": 422, "link": 423, "rate": [424, 499], "_zerod4": 425, "watermark": 426, "fifomod": 427, "asbwrat": 428, "spi": 429, "_zerod7": 430, "inact": 431, "datareadi": 432, "measur": 433, "justifi": 434, "_zerod6": 435, "singletap": 436, "freefal": 437, "autosleep": 438, "activ": 439, "overrun": 440, "rang": [441, 546], "asdataformat": 442, "fifotrig": 443, "intinvert": 444, "doubletap": 445, "selftest": 446, "asfifostatu": 447, "asintmap": 448, "_zerod5": 449, "asinten": 450, "trigger": 451, "sleep": 452, "entri": 454, "fullr": 455, "byte2": 456, "byte1": 457, "asword": 458, "aspaddedregist": 459, "asregist": 460, "asaddress": 461, "_padding8": 462, "asbyt": 463, "z": [464, 559, 595], "x": [465, 579, 596], "asacceler": [466, 508], "y": [467, 587, 597], "sampling_responsebufferoverflow": 468, "pendingrespons": 469, "host_responsegetoutputdatar": 470, "sampling_responsesamplingstop": 471, "host_responsegetuptim": 472, "host_responsegetbufferstatu": 473, "sampling_responsefifooverflow": 474, "rebootrequest": 475, "sampling_responsesamplingfinish": 476, "host_responsegetscal": 477, "sampling_responsesamplingabort": 478, "_reserved_1": 479, "controllerhandl": [480, 486, 487, 593], "host_responsegetrang": 481, "sampling_responsetransmissionerror": 482, "_reserved_0": 483, "host_responsegetfirmwarevers": 484, "host_responsegetdevicesetup": 485, "patch": 488, "transportrx_setoutputdatarate_rate3200": 489, "asgetbufferstatu": 490, "transport_headerid_rx_setrang": 491, "transportrx_setscale_scale_full4mg": 492, "transport_headerid_tx_uptim": 493, "transportrx_setoutputdatarate_rate_800": 494, "transport_headerid_rx_getuptim": 495, "transportrx_setrange_range_16g": 496, "assamplingstart": [497, 543], "asfirmwarevers": 498, "transport_headerid_tx_samplingabort": 500, "transport_headerid_rx_devicereboot": 501, "transport_headerid_rx_getfirmwarevers": 502, "sizebyt": 503, "transport_headerid_tx_samplingfinish": 504, "assamplingstop": [505, 564], "transport_headerid_tx_acceler": 506, "transport_headerid_rx_samplingstart": 507, "transportrx_setoutputdatarate_rate_400": 509, "largesttxchunkbyt": 510, "transport_headerid_tx_bufferoverflow": 511, "asbufferstatu": 512, "transport_headerid_tx_rang": 513, "assamplingfinish": 514, "transportrx_setoutputdatarate_rate_100": 515, "transport_headerid_rx_getscal": 516, "transport_headerid_rx_samplingstop": 517, "asfifooverflow": 518, "code": 519, "asdevicesetup": 520, "asgetrang": 521, "transport_headerid_tx_fifooverflow": 522, "major": 523, "transporttx_faultcode_errorhandl": 524, "scale": 525, "outputdatar": 526, "transportrx_setscale_scale_10bit": 527, "putcount": 528, "transportrx_setrange_range_8g": 529, "assetrang": 530, "max_samples_count": 531, "asrxfram": 532, "transporttx_faultcode_nmihandl": 533, "transportrx_setrange_range_2g": 534, "assamplingabort": 535, "index": 536, "transport_headerid_tx_samplingstart": 537, "transporttx_faultcode_usagefaulthandl": 538, "transport_headerid_tx_fault": 539, "transporttx_faultcode_hardfaulthandl": 540, "asrang": 541, "transport_headerid_rx_getbufferstatu": 542, "transport_headerid_tx_firmwarevers": 544, "asfault": 545, "assetscal": 547, "astransmissionerror": 548, "asdevicereboot": 549, "id": 550, "transport_headerid_tx_outputdatar": 551, "astxfram": 552, "transport_headerid_tx_scal": 553, "asoutputdatar": 554, "takecount": 555, "transport_headerid_rx_setscal": 556, "asscal": 557, "transportrx_setoutputdatarate_rate1600": 558, "capacityusedmax": 560, "2": 561, "transport_headerid_tx_bufferstatu": 562, "transport_headerid_tx_transmissionerror": 563, "capacitytot": 565, "transport_headerid_rx_setoutputdatar": 566, "asgetscal": 567, "asgetuptim": 568, "transport_headerid_tx_samplingstop": 569, "transport_headerid_rx_getdevicesetup": 570, "asuptim": 571, "assetoutputdatar": 572, "transportrx_setrange_range_4g": 573, "transport_headerid_rx_getoutputdatar": 574, "asgetdevicesetup": 575, "transportrx_setoutputdatarate_rate_50": 576, "header": 577, "transport_headerid_tx_devicesetup": 578, "asgetfirmwarevers": 580, "minor": 581, "maxsampl": 582, "transport_headerid_rx_getrang": 583, "elapsedm": 584, "asgetoutputdatar": 585, "valu": 586, "asbufferoverflow": 588, "transporttx_faultcode_busfaulthandl": 589, "transportrx_setoutputdatarate_rate_200": 590, "ringbufferstorag": [591, 592], "data": 598, "welcom": 599, "3dpaxxel": 599, "firmwar": 599, "introduct": [599, 600], "indic": 599, "tabl": 599, "prerequisit": 600, "workflow": 600, "connect": 600, "modul": 600, "refer": 600, "wireshark": 601, "dissector": 601, "3dp": 601, "axxel": 601, "usag": 601}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"Define ADXL345_WATERMARK_LEVEL": [[0, "define-adxl345-watermark-level"]], "Define Documentation": [[0, "define-documentation"], [1, "define-documentation"], [2, "define-documentation"], [3, "define-documentation"], [4, "define-documentation"], [5, "define-documentation"], [6, "define-documentation"], [7, "define-documentation"], [8, "define-documentation"], [9, "define-documentation"], [10, "define-documentation"], [11, "define-documentation"], [12, "define-documentation"], [13, "define-documentation"], [14, "define-documentation"], [15, "define-documentation"], [16, "define-documentation"], [17, "define-documentation"], [18, "define-documentation"], [19, "define-documentation"], [20, "define-documentation"], [21, "define-documentation"], [22, "define-documentation"], [23, "define-documentation"], [24, "define-documentation"], [25, "define-documentation"], [26, "define-documentation"], [27, "define-documentation"], [28, "define-documentation"], [29, "define-documentation"], [30, "define-documentation"], [31, "define-documentation"], [32, "define-documentation"]], "Define ADXL345_FIFO_ENTRIES": [[1, "define-adxl345-fifo-entries"]], "Define ADXL345_HANDLE_INITIALIZER": [[2, "define-adxl345-handle-initializer"]], "Define HOSTTRANSPORT_DECLARE_INITIALIZER": [[3, "define-hosttransport-declare-initializer"]], "Define MYSTRINGIZE0": [[4, "define-mystringize0"]], "Define SAMPLING_DECLARE_INITIALIZER": [[5, "define-sampling-declare-initializer"]], "Define MYSTRINGIZE": [[6, "define-mystringize"]], "Define USER_DEBUG0_LOW": [[7, "define-user-debug0-low"]], "Define USER_DEBUG1_TOGGLE": [[8, "define-user-debug1-toggle"]], "Define USER_DEBUG0_HIGH": [[9, "define-user-debug0-high"]], "Define USER_DEBUG1_LOW": [[10, "define-user-debug1-low"]], "Define USER_DEBUG0_TOGGLE": [[11, "define-user-debug0-toggle"]], "Define USER_DEBUG1_HIGH": [[12, "define-user-debug1-high"]], "Define TRANSPORTTX_TRANSMIT_TX_DATA_CHUNK_BUFFER_BYTES": [[13, "define-transporttx-transmit-tx-data-chunk-buffer-bytes"]], "Define SIZEOF_HEADER_INCL_PAYLOAD": [[14, "define-sizeof-header-incl-payload"]], "Define USER_LED0_OFF": [[15, "define-user-led0-off"]], "Define USER_LED0_ON": [[16, "define-user-led0-on"]], "Define USER_LED0_TOGGLE": [[17, "define-user-led0-toggle"]], "Define RINGBUFFER_STORAGE_ITEM_SIZE_BYTES": [[18, "define-ringbuffer-storage-item-size-bytes"]], "Define RINGBUFFER_DECLARE_INITIALIZER": [[19, "define-ringbuffer-declare-initializer"]], "Define RINGBUFFER_STORAGE_SIZE_BYTES": [[20, "define-ringbuffer-storage-size-bytes"]], "Define RINGBUFFER_INDEX_INITIALIZER": [[21, "define-ringbuffer-index-initializer"]], "Define RINGBUFFER_INITIALIZER": [[22, "define-ringbuffer-initializer"]], "Define SAMPLING_NUM_SAMPLES_READ_AT_ONCE": [[23, "define-sampling-num-samples-read-at-once"]], "Define DECLARE_BUFFER_CAPACITY3": [[24, "define-declare-buffer-capacity3"]], "Define DECLARE_BUFFER_CAPACITY65535": [[25, "define-declare-buffer-capacity65535"]], "Define DECLARE_BUFFER_CAPACITY1": [[26, "define-declare-buffer-capacity1"]], "Define TRANSPORTTX_TRANSMIT_ACCELERATION_BUFFER_BYTES": [[27, "define-transporttx-transmit-acceleration-buffer-bytes"]], "Define UNITY_INCLUDE_EXEC_TIME": [[28, "define-unity-include-exec-time"]], "Define VERSION_MAJOR": [[29, "define-version-major"]], "Define VERSION": [[30, "define-version"]], "Define VERSION_PATCH": [[31, "define-version-patch"]], "Define VERSION_MINOR": [[32, "define-version-minor"]], "Directory Inc": [[33, "directory-inc"]], "Subdirectories": [[33, "subdirectories"], [35, "subdirectories"], [37, "subdirectories"], [38, "subdirectories"], [40, "subdirectories"], [42, "subdirectories"], [44, "subdirectories"], [46, "subdirectories"], [48, "subdirectories"]], "Directory fw": [[34, "directory-fw"], [36, "directory-fw"]], "Files": [[34, "files"], [36, "files"], [39, "files"], [41, "files"], [43, "files"], [45, "files"], [47, "files"], [48, "files"], [49, "files"], [50, "files"], [413, "files"]], "Directory Src": [[35, "directory-src"]], "Directory lib": [[37, "directory-lib"]], "Directory adxl345": [[38, "directory-adxl345"]], "Directory src": [[39, "directory-src"], [41, "directory-src"], [43, "directory-src"], [45, "directory-src"], [47, "directory-src"]], "Directory controller": [[40, "directory-controller"]], "Directory host_transport": [[42, "directory-host-transport"]], "Directory ringbuffer": [[44, "directory-ringbuffer"]], "Directory sampling": [[46, "directory-sampling"]], "Directory test": [[48, "directory-test"]], "Directory test_ringbuffer": [[49, "directory-test-ringbuffer"]], "Directory utils": [[50, "directory-utils"]], "Enum Adxl345Flags_IntEnable_Inactivity": [[51, "enum-adxl345flags-intenable-inactivity"]], "Enum Documentation": [[51, "enum-documentation"], [52, "enum-documentation"], [53, "enum-documentation"], [54, "enum-documentation"], [55, "enum-documentation"], [56, "enum-documentation"], [57, "enum-documentation"], [58, "enum-documentation"], [59, "enum-documentation"], [60, "enum-documentation"], [61, "enum-documentation"], [62, "enum-documentation"], [63, "enum-documentation"], [64, "enum-documentation"], [65, "enum-documentation"], [66, "enum-documentation"], [67, "enum-documentation"], [68, "enum-documentation"], [69, "enum-documentation"], [70, "enum-documentation"], [71, "enum-documentation"], [72, "enum-documentation"], [73, "enum-documentation"], [74, "enum-documentation"], [75, "enum-documentation"], [76, "enum-documentation"], [77, "enum-documentation"], [78, "enum-documentation"], [79, "enum-documentation"], [80, "enum-documentation"], [81, "enum-documentation"], [82, "enum-documentation"], [83, "enum-documentation"], [84, "enum-documentation"], [85, "enum-documentation"], [86, "enum-documentation"], [87, "enum-documentation"], [88, "enum-documentation"], [89, "enum-documentation"], [90, "enum-documentation"], [91, "enum-documentation"]], "Enum Adxl345Flags_FifoStatus_FifoTrig": [[52, "enum-adxl345flags-fifostatus-fifotrig"]], "Enum Adxl345Flags_DataFormat_FullResBit": [[53, "enum-adxl345flags-dataformat-fullresbit"]], "Enum Adxl345Flags_IntEnable_Overrun": [[54, "enum-adxl345flags-intenable-overrun"]], "Enum Adxl345Flags_FifoCtl_Trigger": [[55, "enum-adxl345flags-fifoctl-trigger"]], "Enum Adxl345Flags_IntMap_SingleTap": [[56, "enum-adxl345flags-intmap-singletap"]], "Enum Adxl345Flags_PowerCtl_AutoSleep": [[57, "enum-adxl345flags-powerctl-autosleep"]], "Enum Adxl345Flags_PowerCtl_Link": [[58, "enum-adxl345flags-powerctl-link"]], "Enum Adxl345Flags_IntMap_DoubleTap": [[59, "enum-adxl345flags-intmap-doubletap"]], "Enum Adxl345Flags_IntMap_Inactivity": [[60, "enum-adxl345flags-intmap-inactivity"]], "Enum Adxl345Flags_IntMap_DataReady": [[61, "enum-adxl345flags-intmap-dataready"]], "Enum Adxl345Flags_BwRate_LowPower": [[62, "enum-adxl345flags-bwrate-lowpower"]], "Enum Adxl345Flags_DataFormat_IntInvert": [[63, "enum-adxl345flags-dataformat-intinvert"]], "Enum Adxl345Flags_FifoCtl_FifoMode": [[64, "enum-adxl345flags-fifoctl-fifomode"]], "Enum Adxl345Flags_PowerCtl_Wakeup": [[65, "enum-adxl345flags-powerctl-wakeup"]], "Enum Adxl345Flags_IntMap_FreeFall": [[66, "enum-adxl345flags-intmap-freefall"]], "Enum Adxl345Flags_DataFormat_Range": [[67, "enum-adxl345flags-dataformat-range"]], "Enum Adxl345Flags_IntEnable_DoubleTap": [[68, "enum-adxl345flags-intenable-doubletap"]], "Enum Adxl345Flags_BwRate_Rate": [[69, "enum-adxl345flags-bwrate-rate"]], "Enum Adxl345Flags_IntMap_Activity": [[70, "enum-adxl345flags-intmap-activity"]], "Enum Adxl345Flags_IntEnable_Watermark": [[71, "enum-adxl345flags-intenable-watermark"]], "Enum Adxl345Flags_DataFormat_SelfTest": [[72, "enum-adxl345flags-dataformat-selftest"]], "Enum Adxl345Flags_IntEnable_DataReady": [[73, "enum-adxl345flags-intenable-dataready"]], "Enum Adxl345Flags_IntEnable_SingleTap": [[74, "enum-adxl345flags-intenable-singletap"]], "Enum Adxl345Flags_IntMap_Watermark": [[75, "enum-adxl345flags-intmap-watermark"]], "Enum Adxl345Flags_IntEnable_Activity": [[76, "enum-adxl345flags-intenable-activity"]], "Enum Adxl345Flags_IntMap_Overrun": [[77, "enum-adxl345flags-intmap-overrun"]], "Enum Adxl345Flags_PowerCtl_Sleep": [[78, "enum-adxl345flags-powerctl-sleep"]], "Enum Adxl345Flags_PowerCtl_Measure": [[79, "enum-adxl345flags-powerctl-measure"]], "Enum Adxl345Flags_DataFormat_Justify": [[80, "enum-adxl345flags-dataformat-justify"]], "Enum Adxl345Flags_IntEnable_FreeFall": [[81, "enum-adxl345flags-intenable-freefall"]], "Enum Adxl345Flags_DataFormat_SpiBit": [[82, "enum-adxl345flags-dataformat-spibit"]], "Enum Adxl345Flags_Address": [[83, "enum-adxl345flags-address"]], "Enum Adxl345Spi_Cs": [[84, "enum-adxl345spi-cs"]], "Enum Adxl345Spi_RwFlags": [[85, "enum-adxl345spi-rwflags"]], "Enum HostTransport_Status": [[86, "enum-hosttransport-status"]], "Enum TransportRx_SetOutputDataRate_Rate": [[87, "enum-transportrx-setoutputdatarate-rate"]], "Enum TransportRx_SetScale_Scale": [[88, "enum-transportrx-setscale-scale"]], "Enum TransportTx_FaultCode": [[89, "enum-transporttx-faultcode"]], "Enum Transport_HeaderId": [[90, "enum-transport-headerid"]], "Enum TransportRx_SetRange_Range": [[91, "enum-transportrx-setrange-range"]], "File adxl345_transport_impl.h": [[92, "file-adxl345-transport-impl-h"]], "Contents": [[92, "contents"], [93, "contents"], [94, "contents"], [95, "contents"], [96, "contents"], [97, "contents"], [98, "contents"], [99, "contents"], [100, "contents"], [101, "contents"], [102, "contents"], [103, "contents"], [104, "contents"], [105, "contents"], [106, "contents"], [107, "contents"], [108, "contents"], [109, "contents"], [110, "contents"], [111, "contents"], [112, "contents"], [113, "contents"], [114, "contents"], [115, "contents"], [116, "contents"], [117, "contents"], [118, "contents"], [119, "contents"], [120, "contents"], [121, "contents"], [122, "contents"], [123, "contents"], [124, "contents"], [125, "contents"], [126, "contents"], [127, "contents"], [128, "contents"], [599, null]], "Definition (/home/runner/work/controller/controller/Inc/fw/adxl345_transport_impl.h)": [[92, "definition-home-runner-work-controller-controller-inc-fw-adxl345-transport-impl-h"]], "Detailed Description": [[92, "detailed-description"], [94, "detailed-description"], [95, "detailed-description"], [96, "detailed-description"], [98, "detailed-description"], [99, "detailed-description"], [100, "detailed-description"], [102, "detailed-description"], [105, "detailed-description"], [107, "detailed-description"], [108, "detailed-description"], [109, "detailed-description"], [110, "detailed-description"], [111, "detailed-description"], [112, "detailed-description"], [113, "detailed-description"], [114, "detailed-description"], [115, "detailed-description"], [119, "detailed-description"], [120, "detailed-description"], [121, "detailed-description"], [124, "detailed-description"], [125, "detailed-description"]], "Includes": [[92, "includes"], [93, "includes"], [94, "includes"], [95, "includes"], [96, "includes"], [97, "includes"], [100, "includes"], [101, "includes"], [102, "includes"], [103, "includes"], [104, "includes"], [105, "includes"], [106, "includes"], [107, "includes"], [109, "includes"], [110, "includes"], [111, "includes"], [113, "includes"], [114, "includes"], [115, "includes"], [116, "includes"], [117, "includes"], [118, "includes"], [119, "includes"], [120, "includes"], [121, "includes"], [122, "includes"], [123, "includes"], [124, "includes"], [125, "includes"], [126, "includes"]], "Included By": [[92, "included-by"], [94, "included-by"], [95, "included-by"], [96, "included-by"], [97, "included-by"], [98, "included-by"], [99, "included-by"], [107, "included-by"], [108, "included-by"], [109, "included-by"], [110, "included-by"], [111, "included-by"], [113, "included-by"], [115, "included-by"], [117, "included-by"], [118, "included-by"], [120, "included-by"], [122, "included-by"], [124, "included-by"], [125, "included-by"], [128, "included-by"]], "Functions": [[92, "functions"], [95, "functions"], [98, "functions"], [100, "functions"], [101, "functions"], [102, "functions"], [104, "functions"], [106, "functions"], [107, "functions"], [109, "functions"], [111, "functions"], [114, "functions"], [115, "functions"], [116, "functions"], [117, "functions"], [118, "functions"], [119, "functions"], [120, "functions"], [121, "functions"], [122, "functions"], [123, "functions"], [124, "functions"], [125, "functions"], [126, "functions"], [128, "functions"], [318, "functions"]], "Defines": [[92, "defines"], [94, "defines"], [96, "defines"], [97, "defines"], [99, "defines"], [101, "defines"], [107, "defines"], [117, "defines"], [118, "defines"], [120, "defines"], [125, "defines"], [126, "defines"], [127, "defines"], [318, "defines"]], "File controller_impl.h": [[93, "file-controller-impl-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/controller_impl.h)": [[93, "definition-home-runner-work-controller-controller-inc-fw-controller-impl-h"]], "Variables": [[93, "variables"], [97, "variables"], [101, "variables"], [102, "variables"], [103, "variables"], [104, "variables"], [109, "variables"], [111, "variables"], [118, "variables"], [125, "variables"], [126, "variables"], [318, "variables"]], "File debug.h": [[94, "file-debug-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/debug.h)": [[94, "definition-home-runner-work-controller-controller-inc-fw-debug-h"]], "File host_transport_impl.h": [[95, "file-host-transport-impl-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/host_transport_impl.h)": [[95, "definition-home-runner-work-controller-controller-inc-fw-host-transport-impl-h"]], "File led.h": [[96, "file-led-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/led.h)": [[96, "definition-home-runner-work-controller-controller-inc-fw-led-h"]], "File ringbuffer_impl.h": [[97, "file-ringbuffer-impl-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/ringbuffer_impl.h)": [[97, "definition-home-runner-work-controller-controller-inc-fw-ringbuffer-impl-h"]], "File sampling_impl.h": [[98, "file-sampling-impl-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/sampling_impl.h)": [[98, "definition-home-runner-work-controller-controller-inc-fw-sampling-impl-h"]], "File version.h": [[99, "file-version-h"]], "Definition (/home/runner/work/controller/controller/Inc/fw/version.h)": [[99, "definition-home-runner-work-controller-controller-inc-fw-version-h"]], "File adxl345_transport_impl.c": [[100, "file-adxl345-transport-impl-c"]], "Definition (/home/runner/work/controller/controller/Src/fw/adxl345_transport_impl.c)": [[100, "definition-home-runner-work-controller-controller-src-fw-adxl345-transport-impl-c"]], "File controller_impl.c": [[101, "file-controller-impl-c"]], "Definition (/home/runner/work/controller/controller/Src/fw/controller_impl.c)": [[101, "definition-home-runner-work-controller-controller-src-fw-controller-impl-c"]], "Classes": [[101, "classes"], [107, "classes"], [109, "classes"], [111, "classes"], [113, "classes"], [117, "classes"], [118, "classes"], [122, "classes"], [125, "classes"], [126, "classes"]], "File host_transport_impl.c": [[102, "file-host-transport-impl-c"]], "Definition (/home/runner/work/controller/controller/Src/fw/host_transport_impl.c)": [[102, "definition-home-runner-work-controller-controller-src-fw-host-transport-impl-c"]], "File ringbuffer_impl.c": [[103, "file-ringbuffer-impl-c"]], "Definition (/home/runner/work/controller/controller/Src/fw/ringbuffer_impl.c)": [[103, "definition-home-runner-work-controller-controller-src-fw-ringbuffer-impl-c"]], "File sampling_impl.c": [[104, "file-sampling-impl-c"]], "Definition (/home/runner/work/controller/controller/Src/fw/sampling_impl.c)": [[104, "definition-home-runner-work-controller-controller-src-fw-sampling-impl-c"]], "File version.c": [[105, "file-version-c"]], "Definition (/home/runner/work/controller/controller/Src/fw/version.c)": [[105, "definition-home-runner-work-controller-controller-src-fw-version-c"]], "File adxl345.c": [[106, "file-adxl345-c"]], "Definition (/home/runner/work/controller/controller/lib/adxl345/src/adxl345.c)": [[106, "definition-home-runner-work-controller-controller-lib-adxl345-src-adxl345-c"]], "File adxl345.h": [[107, "file-adxl345-h"]], "Definition (/home/runner/work/controller/controller/lib/adxl345/src/adxl345.h)": [[107, "definition-home-runner-work-controller-controller-lib-adxl345-src-adxl345-h"]], "File adxl345_flags.h": [[108, "file-adxl345-flags-h"]], "Definition (/home/runner/work/controller/controller/lib/adxl345/src/adxl345_flags.h)": [[108, "definition-home-runner-work-controller-controller-lib-adxl345-src-adxl345-flags-h"]], "Enums": [[108, "enums"], [110, "enums"], [117, "enums"], [118, "enums"], [318, "enums"]], "File adxl345_register.h": [[109, "file-adxl345-register-h"]], "Definition (/home/runner/work/controller/controller/lib/adxl345/src/adxl345_register.h)": [[109, "definition-home-runner-work-controller-controller-lib-adxl345-src-adxl345-register-h"]], "Unions": [[109, "unions"], [111, "unions"], [118, "unions"], [318, "unions"]], "File adxl345_spi_types.h": [[110, "file-adxl345-spi-types-h"]], "Definition (/home/runner/work/controller/controller/lib/adxl345/src/adxl345_spi_types.h)": [[110, "definition-home-runner-work-controller-controller-lib-adxl345-src-adxl345-spi-types-h"]], "File adxl345_transport_types.h": [[111, "file-adxl345-transport-types-h"]], "Definition (/home/runner/work/controller/controller/lib/adxl345/src/adxl345_transport_types.h)": [[111, "definition-home-runner-work-controller-controller-lib-adxl345-src-adxl345-transport-types-h"]], "File controller.c": [[112, "file-controller-c"]], "Definition (/home/runner/work/controller/controller/lib/controller/src/controller.c)": [[112, "definition-home-runner-work-controller-controller-lib-controller-src-controller-c"]], "File controller.h": [[113, "file-controller-h"]], "Definition (/home/runner/work/controller/controller/lib/controller/src/controller.h)": [[113, "definition-home-runner-work-controller-controller-lib-controller-src-controller-h"]], "File from_host_transport.c": [[114, "file-from-host-transport-c"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/from_host_transport.c)": [[114, "definition-home-runner-work-controller-controller-lib-host-transport-src-from-host-transport-c"]], "File from_host_transport.h": [[115, "file-from-host-transport-h"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/from_host_transport.h)": [[115, "definition-home-runner-work-controller-controller-lib-host-transport-src-from-host-transport-h"]], "File host_transport.c": [[116, "file-host-transport-c"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/host_transport.c)": [[116, "definition-home-runner-work-controller-controller-lib-host-transport-src-host-transport-c"]], "File host_transport.h": [[117, "file-host-transport-h"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/host_transport.h)": [[117, "definition-home-runner-work-controller-controller-lib-host-transport-src-host-transport-h"]], "File host_transport_types.h": [[118, "file-host-transport-types-h"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/host_transport_types.h)": [[118, "definition-home-runner-work-controller-controller-lib-host-transport-src-host-transport-types-h"]], "File to_host_transport.c": [[119, "file-to-host-transport-c"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/to_host_transport.c)": [[119, "definition-home-runner-work-controller-controller-lib-host-transport-src-to-host-transport-c"]], "File to_host_transport.h": [[120, "file-to-host-transport-h"]], "Definition (/home/runner/work/controller/controller/lib/host_transport/src/to_host_transport.h)": [[120, "definition-home-runner-work-controller-controller-lib-host-transport-src-to-host-transport-h"]], "File ringbuffer.c": [[121, "file-ringbuffer-c"]], "Definition (/home/runner/work/controller/controller/lib/ringbuffer/src/ringbuffer.c)": [[121, "definition-home-runner-work-controller-controller-lib-ringbuffer-src-ringbuffer-c"]], "File ringbuffer.h": [[122, "file-ringbuffer-h"]], "Definition (/home/runner/work/controller/controller/lib/ringbuffer/src/ringbuffer.h)": [[122, "definition-home-runner-work-controller-controller-lib-ringbuffer-src-ringbuffer-h"]], "File sampling.c": [[123, "file-sampling-c"]], "Definition (/home/runner/work/controller/controller/lib/sampling/src/sampling.c)": [[123, "definition-home-runner-work-controller-controller-lib-sampling-src-sampling-c"]], "File sampling.h": [[124, "file-sampling-h"]], "Definition (/home/runner/work/controller/controller/lib/sampling/src/sampling.h)": [[124, "definition-home-runner-work-controller-controller-lib-sampling-src-sampling-h"]], "File sampling_types.h": [[125, "file-sampling-types-h"]], "Definition (/home/runner/work/controller/controller/lib/sampling/src/sampling_types.h)": [[125, "definition-home-runner-work-controller-controller-lib-sampling-src-sampling-types-h"]], "File test.c": [[126, "file-test-c"]], "Definition (/home/runner/work/controller/controller/test/test_ringbuffer/test.c)": [[126, "definition-home-runner-work-controller-controller-test-test-ringbuffer-test-c"]], "File unity_config.h": [[127, "file-unity-config-h"]], "Definition (/home/runner/work/controller/controller/test/unity_config.h)": [[127, "definition-home-runner-work-controller-controller-test-unity-config-h"]], "File run-tests.h": [[128, "file-run-tests-h"]], "Definition (/home/runner/work/controller/controller/test/utils/run-tests.h)": [[128, "definition-home-runner-work-controller-controller-test-utils-run-tests-h"]], "Function Adxl345_setPowerCtlMeasure(struct Adxl345_Handle *)": [[129, "function-adxl345-setpowerctlmeasure-struct-adxl345-handle"], [141, "function-adxl345-setpowerctlmeasure-struct-adxl345-handle"]], "Function Documentation": [[129, "function-documentation"], [130, "function-documentation"], [131, "function-documentation"], [132, "function-documentation"], [133, "function-documentation"], [134, "function-documentation"], [135, "function-documentation"], [136, "function-documentation"], [137, "function-documentation"], [138, "function-documentation"], [139, "function-documentation"], [140, "function-documentation"], [141, "function-documentation"], [142, "function-documentation"], [143, "function-documentation"], [144, "function-documentation"], [145, "function-documentation"], [146, "function-documentation"], [147, "function-documentation"], [148, "function-documentation"], [149, "function-documentation"], [150, "function-documentation"], [151, "function-documentation"], [152, "function-documentation"], [153, "function-documentation"], [154, "function-documentation"], [155, "function-documentation"], [156, "function-documentation"], [157, "function-documentation"], [158, "function-documentation"], [159, "function-documentation"], [160, "function-documentation"], [161, "function-documentation"], [162, "function-documentation"], [163, "function-documentation"], [164, "function-documentation"], [165, "function-documentation"], [166, "function-documentation"], [167, "function-documentation"], [168, "function-documentation"], [169, "function-documentation"], [170, "function-documentation"], [171, "function-documentation"], [172, "function-documentation"], [173, "function-documentation"], [174, "function-documentation"], [175, "function-documentation"], [176, "function-documentation"], [177, "function-documentation"], [178, "function-documentation"], [179, "function-documentation"], [180, "function-documentation"], [181, "function-documentation"], [182, "function-documentation"], [183, "function-documentation"], [184, "function-documentation"], [185, "function-documentation"], [186, "function-documentation"], [187, "function-documentation"], [188, "function-documentation"], [189, "function-documentation"], [190, "function-documentation"], [191, "function-documentation"], [192, "function-documentation"], [193, "function-documentation"], [194, "function-documentation"], [195, "function-documentation"], [196, "function-documentation"], [197, "function-documentation"], [198, "function-documentation"], [199, "function-documentation"], [200, "function-documentation"], [201, "function-documentation"], [202, "function-documentation"], [203, "function-documentation"], [204, "function-documentation"], [205, "function-documentation"], [206, "function-documentation"], [207, "function-documentation"], [208, "function-documentation"], [209, "function-documentation"], [210, "function-documentation"], [211, "function-documentation"], [212, "function-documentation"], [213, "function-documentation"], [214, "function-documentation"], [215, "function-documentation"], [216, "function-documentation"], [217, "function-documentation"], [218, "function-documentation"], [219, "function-documentation"], [220, "function-documentation"], [221, "function-documentation"], [222, "function-documentation"], [223, "function-documentation"], [224, "function-documentation"], [225, "function-documentation"], [226, "function-documentation"], [227, "function-documentation"], [228, "function-documentation"], [229, "function-documentation"], [230, "function-documentation"], [231, "function-documentation"], [232, "function-documentation"], [233, "function-documentation"], [234, "function-documentation"], [235, "function-documentation"], [236, "function-documentation"], [237, "function-documentation"], [238, "function-documentation"], [239, "function-documentation"], [240, "function-documentation"], [241, "function-documentation"], [242, "function-documentation"], [243, "function-documentation"], [244, "function-documentation"], [245, "function-documentation"], [246, "function-documentation"], [247, "function-documentation"], [248, "function-documentation"], [249, "function-documentation"], [250, "function-documentation"], [251, "function-documentation"], [252, "function-documentation"], [253, "function-documentation"], [254, "function-documentation"], [255, "function-documentation"], [256, "function-documentation"], [257, "function-documentation"], [258, "function-documentation"], [259, "function-documentation"], [260, "function-documentation"], [261, "function-documentation"], [262, "function-documentation"], [263, "function-documentation"], [264, "function-documentation"], [265, "function-documentation"], [266, "function-documentation"], [267, "function-documentation"], [268, "function-documentation"], [269, "function-documentation"], [270, "function-documentation"], [271, "function-documentation"], [272, "function-documentation"], [273, "function-documentation"], [274, "function-documentation"], [275, "function-documentation"], [276, "function-documentation"], [277, "function-documentation"], [278, "function-documentation"], [279, "function-documentation"], [280, "function-documentation"], [281, "function-documentation"], [282, "function-documentation"], [283, "function-documentation"], [284, "function-documentation"], [285, "function-documentation"], [286, "function-documentation"], [287, "function-documentation"], [288, "function-documentation"], [289, "function-documentation"], [290, "function-documentation"], [291, "function-documentation"], [292, "function-documentation"], [293, "function-documentation"], [294, "function-documentation"], [295, "function-documentation"], [296, "function-documentation"], [297, "function-documentation"], [298, "function-documentation"], [299, "function-documentation"], [300, "function-documentation"], [301, "function-documentation"], [302, "function-documentation"], [303, "function-documentation"], [304, "function-documentation"], [305, "function-documentation"], [306, "function-documentation"], [307, "function-documentation"], [308, "function-documentation"], [309, "function-documentation"], [310, "function-documentation"], [311, "function-documentation"], [312, "function-documentation"], [313, "function-documentation"], [314, "function-documentation"], [315, "function-documentation"], [316, "function-documentation"], [317, "function-documentation"]], "Function Adxl345_setRange(struct Adxl345_Handle *, uint8_t)": [[130, "function-adxl345-setrange-struct-adxl345-handle-uint8-t"], [142, "function-adxl345-setrange-struct-adxl345-handle-uint8-t"]], "Function Adxl345_getAcceleration(struct Adxl345_Handle *, struct Adxl345Transport_Acceleration *)": [[131, "function-adxl345-getacceleration-struct-adxl345-handle-struct-adxl345transport-acceleration"], [143, "function-adxl345-getacceleration-struct-adxl345-handle-struct-adxl345transport-acceleration"]], "Function writeRegister": [[132, "function-writeregister"]], "Function Adxl345_getRange(struct Adxl345_Handle *, enum Adxl345Flags_DataFormat_Range *)": [[133, "function-adxl345-getrange-struct-adxl345-handle-enum-adxl345flags-dataformat-range"], [144, "function-adxl345-getrange-struct-adxl345-handle-enum-adxl345flags-dataformat-range"]], "Function readRegister": [[134, "function-readregister"]], "Function Adxl345_init(struct Adxl345_Handle *)": [[135, "function-adxl345-init-struct-adxl345-handle"], [145, "function-adxl345-init-struct-adxl345-handle"]], "Function Adxl345_setPowerCtlStandby(struct Adxl345_Handle *)": [[136, "function-adxl345-setpowerctlstandby-struct-adxl345-handle"], [146, "function-adxl345-setpowerctlstandby-struct-adxl345-handle"]], "Function Adxl345_setScale(struct Adxl345_Handle *, uint8_t)": [[137, "function-adxl345-setscale-struct-adxl345-handle-uint8-t"], [147, "function-adxl345-setscale-struct-adxl345-handle-uint8-t"]], "Function Adxl345_setOutputDataRate(struct Adxl345_Handle *, uint8_t)": [[138, "function-adxl345-setoutputdatarate-struct-adxl345-handle-uint8-t"], [148, "function-adxl345-setoutputdatarate-struct-adxl345-handle-uint8-t"]], "Function Adxl345_getScale(struct Adxl345_Handle *, enum Adxl345Flags_DataFormat_FullResBit *)": [[139, "function-adxl345-getscale-struct-adxl345-handle-enum-adxl345flags-dataformat-fullresbit"], [149, "function-adxl345-getscale-struct-adxl345-handle-enum-adxl345flags-dataformat-fullresbit"]], "Function Adxl345_getOutputDataRate(struct Adxl345_Handle *, enum Adxl345Flags_BwRate_Rate *)": [[140, "function-adxl345-getoutputdatarate-struct-adxl345-handle-enum-adxl345flags-bwrate-rate"], [150, "function-adxl345-getoutputdatarate-struct-adxl345-handle-enum-adxl345flags-bwrate-rate"]], "Function __attribute__((packed))": [[151, "function-attribute-packed"], [159, "function-attribute-packed"], [188, "function-attribute-packed"], [214, "function-attribute-packed"], [263, "function-attribute-packed"], [265, "function-attribute-packed"]], "Function ncsClear": [[152, "function-ncsclear"]], "Function receiveFrame": [[153, "function-receiveframe"]], "Function Adxl345TransportImpl_doTransmitFrameImpl(const union Adxl345Transport_TxFrame *, uint8_t, enum Adxl345Spi_Cs, enum Adxl345Spi_RwFlags)": [[154, "function-adxl345transportimpl-dotransmitframeimpl-const-union-adxl345transport-txframe-uint8-t-enum-adxl345spi-cs-enum-adxl345spi-rwflags"], [157, "function-adxl345transportimpl-dotransmitframeimpl-const-union-adxl345transport-txframe-uint8-t-enum-adxl345spi-cs-enum-adxl345spi-rwflags"]], "Function ncsSet": [[155, "function-ncsset"]], "Function Adxl345TransportImpl_doTransmitReceiveFrameImpl(const union Adxl345Transport_TxFrame *, union Adxl345Transport_RxFrame *, uint8_t)": [[156, "function-adxl345transportimpl-dotransmitreceiveframeimpl-const-union-adxl345transport-txframe-union-adxl345transport-rxframe-uint8-t"], [158, "function-adxl345transportimpl-dotransmitreceiveframeimpl-const-union-adxl345transport-txframe-union-adxl345transport-rxframe-uint8-t"]], "Function sampling_onBufferOverflowCb": [[160, "function-sampling-onbufferoverflowcb"]], "Function sampling_onSamplingFinishedCb": [[161, "function-sampling-onsamplingfinishedcb"]], "Function sampling_doEnableSensorImpl": [[162, "function-sampling-doenablesensorimpl"]], "Function host_onRequestGetUptime": [[163, "function-host-onrequestgetuptime"]], "Function host_onRequestGetBufferStatus": [[164, "function-host-onrequestgetbufferstatus"]], "Function fault_onNmiFaultHandler": [[165, "function-fault-onnmifaulthandler"]], "Function sampling_doDisableSensorImpl": [[166, "function-sampling-dodisablesensorimpl"]], "Function ControllerImpl_init": [[167, "function-controllerimpl-init"]], "Function sampling_onFifoOverflowCb": [[168, "function-sampling-onfifooverflowcb"]], "Function sampling_doForwardAccelerationBufferImpl": [[169, "function-sampling-doforwardaccelerationbufferimpl"]], "Function sampling_clearFifoWatermark": [[170, "function-sampling-clearfifowatermark"]], "Function ControllerImpl_transmitPendingResponses": [[171, "function-controllerimpl-transmitpendingresponses"]], "Function host_onRequestSetRange": [[172, "function-host-onrequestsetrange"]], "Function sampling_setFifoOverflow": [[173, "function-sampling-setfifooverflow"]], "Function sampling_on5usTimerExpired": [[174, "function-sampling-on5ustimerexpired"]], "Function host_onRequestSamplingStart": [[175, "function-host-onrequestsamplingstart"]], "Function sensor_doGetOutputDataRateImpl": [[176, "function-sensor-dogetoutputdatarateimpl"]], "Function sensor_doInitImpl": [[177, "function-sensor-doinitimpl"]], "Function sensor_doGetScaleImpl": [[178, "function-sensor-dogetscaleimpl"]], "Function sensor_doGetRangeImpl": [[179, "function-sensor-dogetrangeimpl"]], "Function fault_onErrorHandler": [[180, "function-fault-onerrorhandler"]], "Function host_onRequestGetOutputDataRate": [[181, "function-host-onrequestgetoutputdatarate"]], "Function fault_onBusFaultHandler": [[182, "function-fault-onbusfaulthandler"]], "Function sampling_onSamplingStoppedCb": [[183, "function-sampling-onsamplingstoppedcb"]], "Function host_doTakeBytes": [[184, "function-host-dotakebytes"]], "Function host_onRequestSetOutputDatatRate": [[185, "function-host-onrequestsetoutputdatatrate"]], "Function host_onRequestSamplingStop": [[186, "function-host-onrequestsamplingstop"]], "Function host_onRequestGetScale": [[187, "function-host-onrequestgetscale"]], "Function ControllerImpl_device_checkReboot": [[189, "function-controllerimpl-device-checkreboot"]], "Function ControllerImpl_loop": [[190, "function-controllerimpl-loop"]], "Function ControllerImpl_device_requestAsyncReboot": [[191, "function-controllerimpl-device-requestasyncreboot"]], "Function host_onRequestGetRange": [[192, "function-host-onrequestgetrange"]], "Function fault_onUsageFaultHandler": [[193, "function-fault-onusagefaulthandler"]], "Function fault_onHardFaultHandler": [[194, "function-fault-onhardfaulthandler"]], "Function sampling_onTransmissionErrorCb": [[195, "function-sampling-ontransmissionerrorcb"]], "Function sampling_doFetchSensorAccelerationImpl": [[196, "function-sampling-dofetchsensoraccelerationimpl"]], "Function sampling_onSamplingStartedCb": [[197, "function-sampling-onsamplingstartedcb"]], "Function sampling_onSamplingAbortedCb": [[198, "function-sampling-onsamplingabortedcb"]], "Function host_onRequestGetFirmwareVersion": [[199, "function-host-onrequestgetfirmwareversion"]], "Function host_onRequestGetDeviceSetup": [[200, "function-host-onrequestgetdevicesetup"]], "Function host_onRequestSetScale": [[201, "function-host-onrequestsetscale"]], "Function sampling_setFifoWatermark": [[202, "function-sampling-setfifowatermark"]], "Function TransportRx_Process(struct HostTransport_Handle *, const uint8_t *, uint16_t)": [[203, "function-transportrx-process-struct-hosttransport-handle-const-uint8-t-uint16-t"], [204, "function-transportrx-process-struct-hosttransport-handle-const-uint8-t-uint16-t"]], "Function Transport_resetBuffer(struct HostTransport_Handle *)": [[205, "function-transport-resetbuffer-struct-hosttransport-handle"], [206, "function-transport-resetbuffer-struct-hosttransport-handle"]], "Function HostTransportImpl_doTransmitImpl(uint8_t *, uint16_t)": [[207, "function-hosttransportimpl-dotransmitimpl-uint8-t-uint16-t"], [210, "function-hosttransportimpl-dotransmitimpl-uint8-t-uint16-t"]], "Function HostTransportImpl_onTakeReceivedImpl(const uint8_t *)": [[208, "function-hosttransportimpl-ontakereceivedimpl-const-uint8-t"], [211, "function-hosttransportimpl-ontakereceivedimpl-const-uint8-t"]], "Function HostTransportImpl_isTransmitBusyImpl()": [[209, "function-hosttransportimpl-istransmitbusyimpl"], [212, "function-hosttransportimpl-istransmitbusyimpl"]], "Function __attribute__((__packed__))": [[213, "function-attribute-packed"]], "Function Ringbuffer_init(struct Ringbuffer *, uint8_t *, uint16_t, uint8_t)": [[215, "function-ringbuffer-init-struct-ringbuffer-uint8-t-uint16-t-uint8-t"], [230, "function-ringbuffer-init-struct-ringbuffer-uint8-t-uint16-t-uint8-t"]], "Function Ringbuffer_reset(struct Ringbuffer *)": [[216, "function-ringbuffer-reset-struct-ringbuffer"], [231, "function-ringbuffer-reset-struct-ringbuffer"]], "Function Ringbuffer_maxCapacityUsed(const struct Ringbuffer *)": [[217, "function-ringbuffer-maxcapacityused-const-struct-ringbuffer"], [232, "function-ringbuffer-maxcapacityused-const-struct-ringbuffer"]], "Function Ringbuffer_take(struct Ringbuffer *, void *)": [[218, "function-ringbuffer-take-struct-ringbuffer-void"], [233, "function-ringbuffer-take-struct-ringbuffer-void"]], "Function Ringbuffer_isFull(const struct Ringbuffer *)": [[219, "function-ringbuffer-isfull-const-struct-ringbuffer"], [234, "function-ringbuffer-isfull-const-struct-ringbuffer"]], "Function Ringbuffer_itemSizeBytes(const struct Ringbuffer *)": [[220, "function-ringbuffer-itemsizebytes-const-struct-ringbuffer"], [235, "function-ringbuffer-itemsizebytes-const-struct-ringbuffer"]], "Function Ringbuffer_takeCount(const struct Ringbuffer *)": [[221, "function-ringbuffer-takecount-const-struct-ringbuffer"], [236, "function-ringbuffer-takecount-const-struct-ringbuffer"]], "Function advanceBegin": [[222, "function-advancebegin"]], "Function RingbufferIndex_init(struct Ringbuffer_Index *, uint16_t, uint8_t)": [[223, "function-ringbufferindex-init-struct-ringbuffer-index-uint16-t-uint8-t"], [237, "function-ringbufferindex-init-struct-ringbuffer-index-uint16-t-uint8-t"]], "Function Ringbuffer_isEmpty(const struct Ringbuffer *)": [[224, "function-ringbuffer-isempty-const-struct-ringbuffer"], [238, "function-ringbuffer-isempty-const-struct-ringbuffer"]], "Function Ringbuffer_put(struct Ringbuffer *, const void *)": [[225, "function-ringbuffer-put-struct-ringbuffer-const-void"], [239, "function-ringbuffer-put-struct-ringbuffer-const-void"]], "Function advanceEnd": [[226, "function-advanceend"]], "Function itemAtIndex": [[227, "function-itematindex"]], "Function Ringbuffer_itemsCount(const struct Ringbuffer *)": [[228, "function-ringbuffer-itemscount-const-struct-ringbuffer"], [240, "function-ringbuffer-itemscount-const-struct-ringbuffer"]], "Function Ringbuffer_putCount(const struct Ringbuffer *)": [[229, "function-ringbuffer-putcount-const-struct-ringbuffer"], [241, "function-ringbuffer-putcount-const-struct-ringbuffer"]], "Function main": [[242, "function-main"]], "Function Sampling_fetchForward(struct Sampling_Handle *)": [[243, "function-sampling-fetchforward-struct-sampling-handle"], [254, "function-sampling-fetchforward-struct-sampling-handle"]], "Function checkStartRequest": [[244, "function-checkstartrequest"]], "Function transmitPending": [[245, "function-transmitpending"]], "Function Sampling_setFifoWatermark(struct Sampling_Handle *)": [[246, "function-sampling-setfifowatermark-struct-sampling-handle"], [255, "function-sampling-setfifowatermark-struct-sampling-handle"]], "Function isNSamplesReadEnabled": [[247, "function-isnsamplesreadenabled"]], "Function Sampling_clearFifoWatermark(struct Sampling_Handle *)": [[248, "function-sampling-clearfifowatermark-struct-sampling-handle"], [256, "function-sampling-clearfifowatermark-struct-sampling-handle"]], "Function checkStopRequest": [[249, "function-checkstoprequest"]], "Function Sampling_start(struct Sampling_Handle *, uint16_t)": [[250, "function-sampling-start-struct-sampling-handle-uint16-t"], [257, "function-sampling-start-struct-sampling-handle-uint16-t"]], "Function Sampling_stop(struct Sampling_Handle *)": [[251, "function-sampling-stop-struct-sampling-handle"], [258, "function-sampling-stop-struct-sampling-handle"]], "Function Sampling_on5usTimerExpired(struct Sampling_Handle *)": [[252, "function-sampling-on5ustimerexpired-struct-sampling-handle"], [259, "function-sampling-on5ustimerexpired-struct-sampling-handle"]], "Function Sampling_setFifoOverflow(struct Sampling_Handle *)": [[253, "function-sampling-setfifooverflow-struct-sampling-handle"], [260, "function-sampling-setfifooverflow-struct-sampling-handle"]], "Function SamplingImpl_doWaitDelay5usImpl(struct Sampling_Handle *)": [[261, "function-samplingimpl-dowaitdelay5usimpl-struct-sampling-handle"], [262, "function-samplingimpl-dowaitdelay5usimpl-struct-sampling-handle"]], "Function tests": [[264, "function-tests"]], "Function test_cap3_overflow": [[266, "function-test-cap3-overflow"]], "Function test_cap1_empty_isEmptyNotFull": [[267, "function-test-cap1-empty-isemptynotfull"]], "Function test_cap3_full_isNotEmptyButFull": [[268, "function-test-cap3-full-isnotemptybutfull"]], "Function setUp": [[269, "function-setup"]], "Function test_cap3_putAndOverflow": [[270, "function-test-cap3-putandoverflow"]], "Function test_cap3_empty_takeItem": [[271, "function-test-cap3-empty-takeitem"]], "Function tearDown": [[272, "function-teardown"]], "Function test_cap65535_movingWindowBeyondLimits": [[273, "function-test-cap65535-movingwindowbeyondlimits"]], "Function test_cap3_notEmptyNotFull_takeItem": [[274, "function-test-cap3-notemptynotfull-takeitem"]], "Function test_cap65535_beyondLimitsAndAbove": [[275, "function-test-cap65535-beyondlimitsandabove"]], "Function test_cap3_notEmptyNotFull_isNotEmptyNotFull": [[276, "function-test-cap3-notemptynotfull-isnotemptynotfull"]], "Function test_cap3_full_takeItem": [[277, "function-test-cap3-full-takeitem"]], "Function test_cap3_putAndTakeNoOverflow": [[278, "function-test-cap3-putandtakenooverflow"]], "Function test_cap3_empty_isEmptyNotFull": [[279, "function-test-cap3-empty-isemptynotfull"]], "Function test_cap1_full": [[280, "function-test-cap1-full"]], "Function TransportTx_TxOutputDataRate(struct HostTransport_Handle *, uint8_t)": [[281, "function-transporttx-txoutputdatarate-struct-hosttransport-handle-uint8-t"], [302, "function-transporttx-txoutputdatarate-struct-hosttransport-handle-uint8-t"]], "Function TransportTx_TxFifoOverflow(struct HostTransport_Handle *)": [[282, "function-transporttx-txfifooverflow-struct-hosttransport-handle"], [303, "function-transporttx-txfifooverflow-struct-hosttransport-handle"]], "Function pushToRingbuffer": [[283, "function-pushtoringbuffer"]], "Function TransportTx_TxBufferOverflow(struct HostTransport_Handle *)": [[284, "function-transporttx-txbufferoverflow-struct-hosttransport-handle"], [304, "function-transporttx-txbufferoverflow-struct-hosttransport-handle"]], "Function TransportTx_TxSamplingFinished(struct HostTransport_Handle *)": [[285, "function-transporttx-txsamplingfinished-struct-hosttransport-handle"], [305, "function-transporttx-txsamplingfinished-struct-hosttransport-handle"]], "Function TransportTx_TxSamplingAborted(struct HostTransport_Handle *)": [[286, "function-transporttx-txsamplingaborted-struct-hosttransport-handle"], [306, "function-transporttx-txsamplingaborted-struct-hosttransport-handle"]], "Function TransportTx_TxAccelerationBuffer(struct HostTransport_Handle *, const struct Transport_Acceleration *, uint8_t, uint16_t)": [[287, "function-transporttx-txaccelerationbuffer-struct-hosttransport-handle-const-struct-transport-acceleration-uint8-t-uint16-t"], [307, "function-transporttx-txaccelerationbuffer-struct-hosttransport-handle-const-struct-transport-acceleration-uint8-t-uint16-t"]], "Function TransportTx_TxScale(struct HostTransport_Handle *, uint8_t)": [[288, "function-transporttx-txscale-struct-hosttransport-handle-uint8-t"], [308, "function-transporttx-txscale-struct-hosttransport-handle-uint8-t"]], "Function TransportTx_TxTransmissionError(struct HostTransport_Handle *)": [[289, "function-transporttx-txtransmissionerror-struct-hosttransport-handle"], [309, "function-transporttx-txtransmissionerror-struct-hosttransport-handle"]], "Function transmitAccelerationBuffered": [[290, "function-transmitaccelerationbuffered"]], "Function TransportTx_TxUptime(struct HostTransport_Handle *, uint32_t)": [[291, "function-transporttx-txuptime-struct-hosttransport-handle-uint32-t"], [310, "function-transporttx-txuptime-struct-hosttransport-handle-uint32-t"]], "Function TransportTx_TxSamplingSetup(struct HostTransport_Handle *, uint8_t, uint8_t, uint8_t)": [[292, "function-transporttx-txsamplingsetup-struct-hosttransport-handle-uint8-t-uint8-t-uint8-t"], [311, "function-transporttx-txsamplingsetup-struct-hosttransport-handle-uint8-t-uint8-t-uint8-t"]], "Function isTransmitBusy": [[293, "function-istransmitbusy"]], "Function transmit": [[294, "function-transmit"]], "Function TransportTx_TxFirmwareVersion(struct HostTransport_Handle *, uint8_t, uint8_t, uint8_t)": [[295, "function-transporttx-txfirmwareversion-struct-hosttransport-handle-uint8-t-uint8-t-uint8-t"], [312, "function-transporttx-txfirmwareversion-struct-hosttransport-handle-uint8-t-uint8-t-uint8-t"]], "Function TransportTx_TxSamplingStopped(struct HostTransport_Handle *)": [[296, "function-transporttx-txsamplingstopped-struct-hosttransport-handle"], [313, "function-transporttx-txsamplingstopped-struct-hosttransport-handle"]], "Function TransportTx_TxFault(struct HostTransport_Handle *, enum TransportTx_FaultCode)": [[297, "function-transporttx-txfault-struct-hosttransport-handle-enum-transporttx-faultcode"], [314, "function-transporttx-txfault-struct-hosttransport-handle-enum-transporttx-faultcode"]], "Function TransportTx_TxSamplingStarted(struct HostTransport_Handle *, uint16_t)": [[298, "function-transporttx-txsamplingstarted-struct-hosttransport-handle-uint16-t"], [315, "function-transporttx-txsamplingstarted-struct-hosttransport-handle-uint16-t"]], "Function popDataFromRingbuffer": [[299, "function-popdatafromringbuffer"]], "Function TransportTx_TxBufferStatus(struct HostTransport_Handle *, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t, uint16_t)": [[300, "function-transporttx-txbufferstatus-struct-hosttransport-handle-uint16-t-uint16-t-uint16-t-uint16-t-uint16-t-uint16-t"], [316, "function-transporttx-txbufferstatus-struct-hosttransport-handle-uint16-t-uint16-t-uint16-t-uint16-t-uint16-t-uint16-t"]], "Function TransportTx_TxRange(struct HostTransport_Handle *, uint8_t)": [[301, "function-transporttx-txrange-struct-hosttransport-handle-uint8-t"], [317, "function-transporttx-txrange-struct-hosttransport-handle-uint8-t"]], "Library API": [[318, "library-api"]], "Full API": [[318, "full-api"], [413, "full-api"]], "Classes and Structs": [[318, "classes-and-structs"]], "Program Listing for File adxl345_transport_impl.h": [[319, "program-listing-for-file-adxl345-transport-impl-h"]], "Program Listing for File controller_impl.h": [[320, "program-listing-for-file-controller-impl-h"]], "Program Listing for File debug.h": [[321, "program-listing-for-file-debug-h"]], "Program Listing for File host_transport_impl.h": [[322, "program-listing-for-file-host-transport-impl-h"]], "Program Listing for File led.h": [[323, "program-listing-for-file-led-h"]], "Program Listing for File ringbuffer_impl.h": [[324, "program-listing-for-file-ringbuffer-impl-h"]], "Program Listing for File sampling_impl.h": [[325, "program-listing-for-file-sampling-impl-h"]], "Program Listing for File version.h": [[326, "program-listing-for-file-version-h"]], "Program Listing for File adxl345_transport_impl.c": [[327, "program-listing-for-file-adxl345-transport-impl-c"]], "Program Listing for File controller_impl.c": [[328, "program-listing-for-file-controller-impl-c"]], "Program Listing for File host_transport_impl.c": [[329, "program-listing-for-file-host-transport-impl-c"]], "Program Listing for File ringbuffer_impl.c": [[330, "program-listing-for-file-ringbuffer-impl-c"]], "Program Listing for File sampling_impl.c": [[331, "program-listing-for-file-sampling-impl-c"]], "Program Listing for File version.c": [[332, "program-listing-for-file-version-c"]], "Program Listing for File adxl345.c": [[333, "program-listing-for-file-adxl345-c"]], "Program Listing for File adxl345.h": [[334, "program-listing-for-file-adxl345-h"]], "Program Listing for File adxl345_flags.h": [[335, "program-listing-for-file-adxl345-flags-h"]], "Program Listing for File adxl345_register.h": [[336, "program-listing-for-file-adxl345-register-h"]], "Program Listing for File adxl345_spi_types.h": [[337, "program-listing-for-file-adxl345-spi-types-h"]], "Program Listing for File adxl345_transport_types.h": [[338, "program-listing-for-file-adxl345-transport-types-h"]], "Program Listing for File controller.c": [[339, "program-listing-for-file-controller-c"]], "Program Listing for File controller.h": [[340, "program-listing-for-file-controller-h"]], "Program Listing for File from_host_transport.c": [[341, "program-listing-for-file-from-host-transport-c"]], "Program Listing for File from_host_transport.h": [[342, "program-listing-for-file-from-host-transport-h"]], "Program Listing for File host_transport.c": [[343, "program-listing-for-file-host-transport-c"]], "Program Listing for File host_transport.h": [[344, "program-listing-for-file-host-transport-h"]], "Program Listing for File host_transport_types.h": [[345, "program-listing-for-file-host-transport-types-h"]], "Program Listing for File to_host_transport.c": [[346, "program-listing-for-file-to-host-transport-c"]], "Program Listing for File to_host_transport.h": [[347, "program-listing-for-file-to-host-transport-h"]], "Program Listing for File ringbuffer.c": [[348, "program-listing-for-file-ringbuffer-c"]], "Program Listing for File ringbuffer.h": [[349, "program-listing-for-file-ringbuffer-h"]], "Program Listing for File sampling.c": [[350, "program-listing-for-file-sampling-c"]], "Program Listing for File sampling.h": [[351, "program-listing-for-file-sampling-h"]], "Program Listing for File sampling_types.h": [[352, "program-listing-for-file-sampling-types-h"]], "Program Listing for File test.c": [[353, "program-listing-for-file-test-c"]], "Program Listing for File unity_config.h": [[354, "program-listing-for-file-unity-config-h"]], "Program Listing for File run-tests.h": [[355, "program-listing-for-file-run-tests-h"]], "Struct Adxl345Register_BwRate": [[356, "struct-adxl345register-bwrate"]], "Struct Documentation": [[356, "struct-documentation"], [357, "struct-documentation"], [358, "struct-documentation"], [359, "struct-documentation"], [360, "struct-documentation"], [361, "struct-documentation"], [362, "struct-documentation"], [363, "struct-documentation"], [364, "struct-documentation"], [365, "struct-documentation"], [366, "struct-documentation"], [367, "struct-documentation"], [368, "struct-documentation"], [369, "struct-documentation"], [370, "struct-documentation"], [371, "struct-documentation"], [372, "struct-documentation"], [373, "struct-documentation"], [374, "struct-documentation"], [375, "struct-documentation"], [376, "struct-documentation"], [377, "struct-documentation"], [378, "struct-documentation"], [379, "struct-documentation"], [380, "struct-documentation"], [381, "struct-documentation"], [382, "struct-documentation"], [383, "struct-documentation"], [384, "struct-documentation"], [385, "struct-documentation"], [386, "struct-documentation"], [387, "struct-documentation"], [388, "struct-documentation"], [389, "struct-documentation"], [390, "struct-documentation"], [391, "struct-documentation"], [392, "struct-documentation"], [393, "struct-documentation"], [394, "struct-documentation"], [395, "struct-documentation"], [396, "struct-documentation"], [397, "struct-documentation"], [398, "struct-documentation"], [399, "struct-documentation"], [400, "struct-documentation"], [401, "struct-documentation"], [402, "struct-documentation"], [403, "struct-documentation"], [404, "struct-documentation"], [405, "struct-documentation"], [406, "struct-documentation"], [407, "struct-documentation"], [408, "struct-documentation"], [409, "struct-documentation"], [410, "struct-documentation"], [411, "struct-documentation"], [412, "struct-documentation"]], "Struct Adxl345Register_DataFormat": [[357, "struct-adxl345register-dataformat"]], "Struct Adxl345Register_FifoCtl": [[358, "struct-adxl345register-fifoctl"]], "Struct Adxl345Register_FifoStatus": [[359, "struct-adxl345register-fifostatus"]], "Struct Adxl345Register_IntEnable": [[360, "struct-adxl345register-intenable"]], "Struct Adxl345Register_IntMap": [[361, "struct-adxl345register-intmap"]], "Struct Adxl345Register_PowerCtl": [[362, "struct-adxl345register-powerctl"]], "Struct Adxl345Transport_Acceleration": [[363, "struct-adxl345transport-acceleration"]], "Struct Adxl345Transport_DataPaddedRegister": [[364, "struct-adxl345transport-datapaddedregister"]], "Struct Adxl345_Handle": [[365, "struct-adxl345-handle"]], "Struct Controller_Handle": [[366, "struct-controller-handle"]], "Struct Controller_Host": [[367, "struct-controller-host"]], "Struct Controller_Sampling": [[368, "struct-controller-sampling"]], "Struct Controller_Sensor": [[369, "struct-controller-sensor"]], "Struct Foo": [[370, "struct-foo"]], "Struct HostTransport_FromHostApi": [[371, "struct-hosttransport-fromhostapi"]], "Struct HostTransport_Handle": [[372, "struct-hosttransport-handle"]], "Struct HostTransport_ToHostApi": [[373, "struct-hosttransport-tohostapi"]], "Struct Ringbuffer": [[374, "struct-ringbuffer"]], "Struct Ringbuffer_Index": [[375, "struct-ringbuffer-index"]], "Struct Sampling_Acceleration": [[376, "struct-sampling-acceleration"]], "Struct Sampling_Handle": [[377, "struct-sampling-handle"]], "Struct Sampling_State": [[378, "struct-sampling-state"]], "Struct TransportFrame": [[379, "struct-transportframe"]], "Struct TransportRx_DeviceReboot": [[380, "struct-transportrx-devicereboot"]], "Struct TransportRx_GetBufferStatus": [[381, "struct-transportrx-getbufferstatus"]], "Struct TransportRx_GetDeviceSetup": [[382, "struct-transportrx-getdevicesetup"]], "Struct TransportRx_GetFirmwareVersion": [[383, "struct-transportrx-getfirmwareversion"]], "Struct TransportRx_GetOutputDataRate": [[384, "struct-transportrx-getoutputdatarate"]], "Struct TransportRx_GetRange": [[385, "struct-transportrx-getrange"]], "Struct TransportRx_GetScale": [[386, "struct-transportrx-getscale"]], "Struct TransportRx_GetUptime": [[387, "struct-transportrx-getuptime"]], "Struct TransportRx_SamplingStart": [[388, "struct-transportrx-samplingstart"]], "Struct TransportRx_SamplingStop": [[389, "struct-transportrx-samplingstop"]], "Struct TransportRx_SetOutputDataRate": [[390, "struct-transportrx-setoutputdatarate"]], "Struct TransportRx_SetRange": [[391, "struct-transportrx-setrange"]], "Struct TransportRx_SetScale": [[392, "struct-transportrx-setscale"]], "Struct TransportTx_Acceleration": [[393, "struct-transporttx-acceleration"]], "Struct TransportTx_BufferOverflow": [[394, "struct-transporttx-bufferoverflow"]], "Struct TransportTx_BufferStatus": [[395, "struct-transporttx-bufferstatus"]], "Struct TransportTx_DeviceSetup": [[396, "struct-transporttx-devicesetup"]], "Struct TransportTx_Fault": [[397, "struct-transporttx-fault"]], "Struct TransportTx_FifoOverflow": [[398, "struct-transporttx-fifooverflow"]], "Struct TransportTx_FirmwareVersion": [[399, "struct-transporttx-firmwareversion"]], "Struct TransportTx_OutputDataRate": [[400, "struct-transporttx-outputdatarate"]], "Struct TransportTx_Range": [[401, "struct-transporttx-range"]], "Struct TransportTx_SamplingAborted": [[402, "struct-transporttx-samplingaborted"]], "Struct TransportTx_SamplingFinished": [[403, "struct-transporttx-samplingfinished"]], "Struct TransportTx_SamplingStarted": [[404, "struct-transporttx-samplingstarted"]], "Struct TransportTx_SamplingStopped": [[405, "struct-transporttx-samplingstopped"]], "Struct TransportTx_Scale": [[406, "struct-transporttx-scale"]], "Struct TransportTx_TransmissionError": [[407, "struct-transporttx-transmissionerror"]], "Struct TransportTx_Uptime": [[408, "struct-transporttx-uptime"]], "Struct Transport_Acceleration": [[409, "struct-transport-acceleration"]], "Struct Transport_Header": [[410, "struct-transport-header"]], "Struct Transport_ResponseFlags": [[411, "struct-transport-responseflags"]], "Struct TwoBytes": [[412, "struct-twobytes"]], "Directories": [[413, "directories"]], "Union Adxl345Register": [[414, "union-adxl345register"]], "Union Documentation": [[414, "union-documentation"], [415, "union-documentation"], [416, "union-documentation"], [417, "union-documentation"], [418, "union-documentation"]], "Union Adxl345Transport_RxFrame": [[415, "union-adxl345transport-rxframe"]], "Union Adxl345Transport_TxFrame": [[416, "union-adxl345transport-txframe"]], "Union TransportRxFrame": [[417, "union-transportrxframe"]], "Union TransportTxFrame": [[418, "union-transporttxframe"]], "Variable lowPower": [[419, "variable-lowpower"]], "Variable Documentation": [[419, "variable-documentation"], [420, "variable-documentation"], [421, "variable-documentation"], [422, "variable-documentation"], [423, "variable-documentation"], [424, "variable-documentation"], [425, "variable-documentation"], [426, "variable-documentation"], [427, "variable-documentation"], [428, "variable-documentation"], [429, "variable-documentation"], [430, "variable-documentation"], [431, "variable-documentation"], [432, "variable-documentation"], [433, "variable-documentation"], [434, "variable-documentation"], [435, "variable-documentation"], [436, "variable-documentation"], [437, "variable-documentation"], [438, "variable-documentation"], [439, "variable-documentation"], [440, "variable-documentation"], [441, "variable-documentation"], [442, "variable-documentation"], [443, "variable-documentation"], [444, "variable-documentation"], [445, "variable-documentation"], [446, "variable-documentation"], [447, "variable-documentation"], [448, "variable-documentation"], [449, "variable-documentation"], [450, "variable-documentation"], [451, "variable-documentation"], [452, "variable-documentation"], [453, "variable-documentation"], [454, "variable-documentation"], [455, "variable-documentation"], [456, "variable-documentation"], [457, "variable-documentation"], [458, "variable-documentation"], [459, "variable-documentation"], [460, "variable-documentation"], [461, "variable-documentation"], [462, "variable-documentation"], [463, "variable-documentation"], [464, "variable-documentation"], [465, "variable-documentation"], [466, "variable-documentation"], [467, "variable-documentation"], [468, "variable-documentation"], [469, "variable-documentation"], [470, "variable-documentation"], [471, "variable-documentation"], [472, "variable-documentation"], [473, "variable-documentation"], [474, "variable-documentation"], [475, "variable-documentation"], [476, "variable-documentation"], [477, "variable-documentation"], [478, "variable-documentation"], [479, "variable-documentation"], [480, "variable-documentation"], [481, "variable-documentation"], [482, "variable-documentation"], [483, "variable-documentation"], [484, "variable-documentation"], [485, "variable-documentation"], [486, "variable-documentation"], [487, "variable-documentation"], [488, "variable-documentation"], [489, "variable-documentation"], [490, "variable-documentation"], [491, "variable-documentation"], [492, "variable-documentation"], [493, "variable-documentation"], [494, "variable-documentation"], [495, "variable-documentation"], [496, "variable-documentation"], [497, "variable-documentation"], [498, "variable-documentation"], [499, "variable-documentation"], [500, "variable-documentation"], [501, "variable-documentation"], [502, "variable-documentation"], [503, "variable-documentation"], [504, "variable-documentation"], [505, "variable-documentation"], [506, "variable-documentation"], [507, "variable-documentation"], [508, "variable-documentation"], [509, "variable-documentation"], [510, "variable-documentation"], [511, "variable-documentation"], [512, "variable-documentation"], [513, "variable-documentation"], [514, "variable-documentation"], [515, "variable-documentation"], [516, "variable-documentation"], [517, "variable-documentation"], [518, "variable-documentation"], [519, "variable-documentation"], [520, "variable-documentation"], [521, "variable-documentation"], [522, "variable-documentation"], [523, "variable-documentation"], [524, "variable-documentation"], [525, "variable-documentation"], [526, "variable-documentation"], [527, "variable-documentation"], [528, "variable-documentation"], [529, "variable-documentation"], [530, "variable-documentation"], [531, "variable-documentation"], [532, "variable-documentation"], [533, "variable-documentation"], [534, "variable-documentation"], [535, "variable-documentation"], [536, "variable-documentation"], [537, "variable-documentation"], [538, "variable-documentation"], [539, "variable-documentation"], [540, "variable-documentation"], [541, "variable-documentation"], [542, "variable-documentation"], [543, "variable-documentation"], [544, "variable-documentation"], [545, "variable-documentation"], [546, "variable-documentation"], [547, "variable-documentation"], [548, "variable-documentation"], [549, "variable-documentation"], [550, "variable-documentation"], [551, "variable-documentation"], [552, "variable-documentation"], [553, "variable-documentation"], [554, "variable-documentation"], [555, "variable-documentation"], [556, "variable-documentation"], [557, "variable-documentation"], [558, "variable-documentation"], [559, "variable-documentation"], [560, "variable-documentation"], [561, "variable-documentation"], [562, "variable-documentation"], [563, "variable-documentation"], [564, "variable-documentation"], [565, "variable-documentation"], [566, "variable-documentation"], [567, "variable-documentation"], [568, "variable-documentation"], [569, "variable-documentation"], [570, "variable-documentation"], [571, "variable-documentation"], [572, "variable-documentation"], [573, "variable-documentation"], [574, "variable-documentation"], [575, "variable-documentation"], [576, "variable-documentation"], [577, "variable-documentation"], [578, "variable-documentation"], [579, "variable-documentation"], [580, "variable-documentation"], [581, "variable-documentation"], [582, "variable-documentation"], [583, "variable-documentation"], [584, "variable-documentation"], [585, "variable-documentation"], [586, "variable-documentation"], [587, "variable-documentation"], [588, "variable-documentation"], [589, "variable-documentation"], [590, "variable-documentation"], [591, "variable-documentation"], [592, "variable-documentation"], [593, "variable-documentation"], [594, "variable-documentation"], [595, "variable-documentation"], [596, "variable-documentation"], [597, "variable-documentation"], [598, "variable-documentation"]], "Variable wakeup": [[420, "variable-wakeup"]], "Variable asPowerControl": [[421, "variable-aspowercontrol"]], "Variable asFifoCtl": [[422, "variable-asfifoctl"]], "Variable link": [[423, "variable-link"]], "Variable rate": [[424, "variable-rate"], [499, "variable-rate"]], "Variable _zeroD4": [[425, "variable-zerod4"]], "Variable watermark": [[426, "variable-watermark"]], "Variable fifoMode": [[427, "variable-fifomode"]], "Variable asBwRate": [[428, "variable-asbwrate"]], "Variable spi": [[429, "variable-spi"]], "Variable _zeroD7": [[430, "variable-zerod7"]], "Variable inactivity": [[431, "variable-inactivity"]], "Variable dataReady": [[432, "variable-dataready"]], "Variable measure": [[433, "variable-measure"]], "Variable justify": [[434, "variable-justify"]], "Variable _zeroD6": [[435, "variable-zerod6"]], "Variable singleTap": [[436, "variable-singletap"]], "Variable freeFall": [[437, "variable-freefall"]], "Variable autoSleep": [[438, "variable-autosleep"]], "Variable activity": [[439, "variable-activity"]], "Variable overrun": [[440, "variable-overrun"]], "Variable range": [[441, "variable-range"], [546, "variable-range"]], "Variable asDataFormat": [[442, "variable-asdataformat"]], "Variable fifoTrig": [[443, "variable-fifotrig"]], "Variable intInvert": [[444, "variable-intinvert"]], "Variable doubleTap": [[445, "variable-doubletap"]], "Variable selfTest": [[446, "variable-selftest"]], "Variable asFifoStatus": [[447, "variable-asfifostatus"]], "Variable asIntMap": [[448, "variable-asintmap"]], "Variable _zeroD5": [[449, "variable-zerod5"]], "Variable asIntEnable": [[450, "variable-asintenable"]], "Variable trigger": [[451, "variable-trigger"]], "Variable sleep": [[452, "variable-sleep"]], "Variable samples": [[453, "variable-samples"]], "Variable entries": [[454, "variable-entries"]], "Variable fullRes": [[455, "variable-fullres"]], "Variable byte2": [[456, "variable-byte2"]], "Variable byte1": [[457, "variable-byte1"]], "Variable asWord": [[458, "variable-asword"]], "Variable asPaddedRegister": [[459, "variable-aspaddedregister"]], "Variable asRegister": [[460, "variable-asregister"]], "Variable asAddress": [[461, "variable-asaddress"]], "Variable _padding8": [[462, "variable-padding8"]], "Variable asBytes": [[463, "variable-asbytes"]], "Variable z": [[464, "variable-z"], [559, "variable-z"], [595, "variable-z"]], "Variable x": [[465, "variable-x"], [579, "variable-x"], [596, "variable-x"]], "Variable asAcceleration": [[466, "variable-asacceleration"], [508, "variable-asacceleration"]], "Variable y": [[467, "variable-y"], [587, "variable-y"], [597, "variable-y"]], "Variable sampling_responseBufferOverflow": [[468, "variable-sampling-responsebufferoverflow"]], "Variable pendingResponses": [[469, "variable-pendingresponses"]], "Variable host_responseGetOutputDataRate": [[470, "variable-host-responsegetoutputdatarate"]], "Variable sampling_responseSamplingStopped": [[471, "variable-sampling-responsesamplingstopped"]], "Variable host_responseGetUptime": [[472, "variable-host-responsegetuptime"]], "Variable host_responseGetBufferStatus": [[473, "variable-host-responsegetbufferstatus"]], "Variable sampling_responseFifoOverflow": [[474, "variable-sampling-responsefifooverflow"]], "Variable rebootRequested": [[475, "variable-rebootrequested"]], "Variable sampling_responseSamplingFinished": [[476, "variable-sampling-responsesamplingfinished"]], "Variable host_responseGetScale": [[477, "variable-host-responsegetscale"]], "Variable sampling_responseSamplingAborted": [[478, "variable-sampling-responsesamplingaborted"]], "Variable _reserved_1": [[479, "variable-reserved-1"]], "Variable controllerHandle": [[480, "variable-controllerhandle"], [486, "variable-controllerhandle"], [487, "variable-controllerhandle"], [593, "variable-controllerhandle"]], "Variable host_responseGetRange": [[481, "variable-host-responsegetrange"]], "Variable sampling_responseTransmissionError": [[482, "variable-sampling-responsetransmissionerror"]], "Variable _reserved_0": [[483, "variable-reserved-0"]], "Variable host_responseGetFirmwareVersion": [[484, "variable-host-responsegetfirmwareversion"]], "Variable host_responseGetDeviceSetup": [[485, "variable-host-responsegetdevicesetup"]], "Variable patch": [[488, "variable-patch"]], "Variable TransportRx_SetOutputDataRate_Rate3200": [[489, "variable-transportrx-setoutputdatarate-rate3200"]], "Variable asGetBufferStatus": [[490, "variable-asgetbufferstatus"]], "Variable Transport_HeaderId_Rx_SetRange": [[491, "variable-transport-headerid-rx-setrange"]], "Variable TransportRx_SetScale_Scale_full4mg": [[492, "variable-transportrx-setscale-scale-full4mg"]], "Variable Transport_HeaderId_Tx_Uptime": [[493, "variable-transport-headerid-tx-uptime"]], "Variable TransportRx_SetOutputDataRate_Rate_800": [[494, "variable-transportrx-setoutputdatarate-rate-800"]], "Variable Transport_HeaderId_Rx_GetUptime": [[495, "variable-transport-headerid-rx-getuptime"]], "Variable TransportRx_SetRange_Range_16g": [[496, "variable-transportrx-setrange-range-16g"]], "Variable asSamplingStarted": [[497, "variable-assamplingstarted"]], "Variable asFirmwareVersion": [[498, "variable-asfirmwareversion"]], "Variable Transport_HeaderId_Tx_SamplingAborted": [[500, "variable-transport-headerid-tx-samplingaborted"]], "Variable Transport_HeaderId_Rx_DeviceReboot": [[501, "variable-transport-headerid-rx-devicereboot"]], "Variable Transport_HeaderId_Rx_GetFirmwareVersion": [[502, "variable-transport-headerid-rx-getfirmwareversion"]], "Variable sizeBytes": [[503, "variable-sizebytes"]], "Variable Transport_HeaderId_Tx_SamplingFinished": [[504, "variable-transport-headerid-tx-samplingfinished"]], "Variable asSamplingStopped": [[505, "variable-assamplingstopped"]], "Variable Transport_HeaderId_Tx_Acceleration": [[506, "variable-transport-headerid-tx-acceleration"]], "Variable Transport_HeaderId_Rx_SamplingStart": [[507, "variable-transport-headerid-rx-samplingstart"]], "Variable TransportRx_SetOutputDataRate_Rate_400": [[509, "variable-transportrx-setoutputdatarate-rate-400"]], "Variable largestTxChunkBytes": [[510, "variable-largesttxchunkbytes"]], "Variable Transport_HeaderId_Tx_BufferOverflow": [[511, "variable-transport-headerid-tx-bufferoverflow"]], "Variable asBufferStatus": [[512, "variable-asbufferstatus"]], "Variable Transport_HeaderId_Tx_Range": [[513, "variable-transport-headerid-tx-range"]], "Variable asSamplingFinished": [[514, "variable-assamplingfinished"]], "Variable TransportRx_SetOutputDataRate_Rate_100": [[515, "variable-transportrx-setoutputdatarate-rate-100"]], "Variable Transport_HeaderId_Rx_GetScale": [[516, "variable-transport-headerid-rx-getscale"]], "Variable Transport_HeaderId_Rx_SamplingStop": [[517, "variable-transport-headerid-rx-samplingstop"]], "Variable asFifoOverflow": [[518, "variable-asfifooverflow"]], "Variable code": [[519, "variable-code"]], "Variable asDeviceSetup": [[520, "variable-asdevicesetup"]], "Variable asGetRange": [[521, "variable-asgetrange"]], "Variable Transport_HeaderId_Tx_FifoOverflow": [[522, "variable-transport-headerid-tx-fifooverflow"]], "Variable major": [[523, "variable-major"]], "Variable TransportTx_FaultCode_ErrorHandler": [[524, "variable-transporttx-faultcode-errorhandler"]], "Variable scale": [[525, "variable-scale"]], "Variable outputDataRate": [[526, "variable-outputdatarate"]], "Variable TransportRx_SetScale_Scale_10bit": [[527, "variable-transportrx-setscale-scale-10bit"]], "Variable putCount": [[528, "variable-putcount"]], "Variable TransportRx_SetRange_Range_8g": [[529, "variable-transportrx-setrange-range-8g"]], "Variable asSetRange": [[530, "variable-assetrange"]], "Variable max_samples_count": [[531, "variable-max-samples-count"]], "Variable asRxFrame": [[532, "variable-asrxframe"]], "Variable TransportTx_FaultCode_NmiHandler": [[533, "variable-transporttx-faultcode-nmihandler"]], "Variable TransportRx_SetRange_Range_2g": [[534, "variable-transportrx-setrange-range-2g"]], "Variable asSamplingAborted": [[535, "variable-assamplingaborted"]], "Variable index": [[536, "variable-index"]], "Variable Transport_HeaderId_Tx_SamplingStarted": [[537, "variable-transport-headerid-tx-samplingstarted"]], "Variable TransportTx_FaultCode_UsageFaultHandler": [[538, "variable-transporttx-faultcode-usagefaulthandler"]], "Variable Transport_HeaderId_Tx_Fault": [[539, "variable-transport-headerid-tx-fault"]], "Variable TransportTx_FaultCode_HardFaultHandler": [[540, "variable-transporttx-faultcode-hardfaulthandler"]], "Variable asRange": [[541, "variable-asrange"]], "Variable Transport_HeaderId_Rx_GetBufferStatus": [[542, "variable-transport-headerid-rx-getbufferstatus"]], "Variable asSamplingStart": [[543, "variable-assamplingstart"]], "Variable Transport_HeaderId_Tx_FirmwareVersion": [[544, "variable-transport-headerid-tx-firmwareversion"]], "Variable asFault": [[545, "variable-asfault"]], "Variable asSetScale": [[547, "variable-assetscale"]], "Variable asTransmissionError": [[548, "variable-astransmissionerror"]], "Variable asDeviceReboot": [[549, "variable-asdevicereboot"]], "Variable id": [[550, "variable-id"]], "Variable Transport_HeaderId_Tx_OutputDataRate": [[551, "variable-transport-headerid-tx-outputdatarate"]], "Variable asTxFrame": [[552, "variable-astxframe"]], "Variable Transport_HeaderId_Tx_Scale": [[553, "variable-transport-headerid-tx-scale"]], "Variable asOutputDataRate": [[554, "variable-asoutputdatarate"]], "Variable takeCount": [[555, "variable-takecount"]], "Variable Transport_HeaderId_Rx_SetScale": [[556, "variable-transport-headerid-rx-setscale"]], "Variable asScale": [[557, "variable-asscale"]], "Variable TransportRx_SetOutputDataRate_Rate1600": [[558, "variable-transportrx-setoutputdatarate-rate1600"]], "Variable capacityUsedMax": [[560, "variable-capacityusedmax"]], "Variable @2": [[561, "variable-2"]], "Variable Transport_HeaderId_Tx_BufferStatus": [[562, "variable-transport-headerid-tx-bufferstatus"]], "Variable Transport_HeaderId_Tx_TransmissionError": [[563, "variable-transport-headerid-tx-transmissionerror"]], "Variable asSamplingStop": [[564, "variable-assamplingstop"]], "Variable capacityTotal": [[565, "variable-capacitytotal"]], "Variable Transport_HeaderId_Rx_SetOutputDataRate": [[566, "variable-transport-headerid-rx-setoutputdatarate"]], "Variable asGetScale": [[567, "variable-asgetscale"]], "Variable asGetUptime": [[568, "variable-asgetuptime"]], "Variable Transport_HeaderId_Tx_SamplingStopped": [[569, "variable-transport-headerid-tx-samplingstopped"]], "Variable Transport_HeaderId_Rx_GetDeviceSetup": [[570, "variable-transport-headerid-rx-getdevicesetup"]], "Variable asUptime": [[571, "variable-asuptime"]], "Variable asSetOutputDataRate": [[572, "variable-assetoutputdatarate"]], "Variable TransportRx_SetRange_Range_4g": [[573, "variable-transportrx-setrange-range-4g"]], "Variable Transport_HeaderId_Rx_GetOutputDataRate": [[574, "variable-transport-headerid-rx-getoutputdatarate"]], "Variable asGetDeviceSetup": [[575, "variable-asgetdevicesetup"]], "Variable TransportRx_SetOutputDataRate_Rate_50": [[576, "variable-transportrx-setoutputdatarate-rate-50"]], "Variable header": [[577, "variable-header"]], "Variable Transport_HeaderId_Tx_DeviceSetup": [[578, "variable-transport-headerid-tx-devicesetup"]], "Variable asGetFirmwareVersion": [[580, "variable-asgetfirmwareversion"]], "Variable minor": [[581, "variable-minor"]], "Variable maxSamples": [[582, "variable-maxsamples"]], "Variable Transport_HeaderId_Rx_GetRange": [[583, "variable-transport-headerid-rx-getrange"]], "Variable elapsedMs": [[584, "variable-elapsedms"]], "Variable asGetOutputDataRate": [[585, "variable-asgetoutputdatarate"]], "Variable values": [[586, "variable-values"]], "Variable asBufferOverflow": [[588, "variable-asbufferoverflow"]], "Variable TransportTx_FaultCode_BusFaultHandler": [[589, "variable-transporttx-faultcode-busfaulthandler"]], "Variable TransportRx_SetOutputDataRate_Rate_200": [[590, "variable-transportrx-setoutputdatarate-rate-200"]], "Variable ringbufferStorage": [[591, "variable-ringbufferstorage"], [592, "variable-ringbufferstorage"]], "Variable __attribute__": [[594, "variable-attribute"]], "Variable data": [[598, "variable-data"]], "Welcome to 3dpaxxel firmware documentation!": [[599, "welcome-to-3dpaxxel-firmware-documentation"]], "Introduction": [[599, null], [600, "introduction"]], "Indices and tables": [[599, "indices-and-tables"]], "Prerequisites": [[600, "prerequisites"]], "Workflow": [[600, "workflow"]], "Connecting Modules": [[600, "connecting-modules"]], "References": [[600, "references"]], "Wireshark Dissector for 3DP Axxel": [[601, "wireshark-dissector-for-3dp-axxel"]], "Usage:": [[601, "usage"]]}, "indexentries": {"adxl345_watermark_level (c macro)": [[0, "c.ADXL345_WATERMARK_LEVEL"]], "adxl345_fifo_entries (c macro)": [[1, "c.ADXL345_FIFO_ENTRIES"]], "adxl345_handle_initializer (c macro)": [[2, "c.ADXL345_HANDLE_INITIALIZER"]], "user_debug0_low (c macro)": [[7, "c.USER_DEBUG0_LOW"]], "user_debug1_toggle (c macro)": [[8, "c.USER_DEBUG1_TOGGLE"]], "user_debug0_high (c macro)": [[9, "c.USER_DEBUG0_HIGH"]], "user_debug1_low (c macro)": [[10, "c.USER_DEBUG1_LOW"]], "user_debug0_toggle (c macro)": [[11, "c.USER_DEBUG0_TOGGLE"]], "user_debug1_high (c macro)": [[12, "c.USER_DEBUG1_HIGH"]], "transporttx_transmit_tx_data_chunk_buffer_bytes (c macro)": [[13, "c.TRANSPORTTX_TRANSMIT_TX_DATA_CHUNK_BUFFER_BYTES"]], "sizeof_header_incl_payload (c macro)": [[14, "c.SIZEOF_HEADER_INCL_PAYLOAD"]], "user_led0_off (c macro)": [[15, "c.USER_LED0_OFF"]], "user_led0_on (c macro)": [[16, "c.USER_LED0_ON"]], "user_led0_toggle (c macro)": [[17, "c.USER_LED0_TOGGLE"]], "ringbuffer_storage_item_size_bytes (c macro)": [[18, "c.RINGBUFFER_STORAGE_ITEM_SIZE_BYTES"]], "ringbuffer_declare_initializer (c macro)": [[19, "c.RINGBUFFER_DECLARE_INITIALIZER"]], "ringbuffer_storage_size_bytes (c macro)": [[20, "c.RINGBUFFER_STORAGE_SIZE_BYTES"]], "ringbuffer_index_initializer (c macro)": [[21, "c.RINGBUFFER_INDEX_INITIALIZER"]], "ringbuffer_initializer (c macro)": [[22, "c.RINGBUFFER_INITIALIZER"]], "sampling_num_samples_read_at_once (c macro)": [[23, "c.SAMPLING_NUM_SAMPLES_READ_AT_ONCE"]], "transporttx_transmit_acceleration_buffer_bytes (c macro)": [[27, "c.TRANSPORTTX_TRANSMIT_ACCELERATION_BUFFER_BYTES"]], "unity_include_exec_time (c macro)": [[28, "c.UNITY_INCLUDE_EXEC_TIME"]], "version_major (c macro)": [[29, "c.VERSION_MAJOR"]], "version (c macro)": [[30, "c.VERSION"]], "version_patch (c macro)": [[31, "c.VERSION_PATCH"]], "version_minor (c macro)": [[32, "c.VERSION_MINOR"]], "adxl345flags_intenable_inactivity (c++ enum)": [[51, "_CPPv433Adxl345Flags_IntEnable_Inactivity"]], "adxl345flags_intenable_inactivity::adxl345flags_intenable_inactivity_disable (c++ enumerator)": [[51, "_CPPv4N33Adxl345Flags_IntEnable_Inactivity41Adxl345Flags_IntEnable_Inactivity_disableE"]], "adxl345flags_intenable_inactivity::adxl345flags_intenable_inactivity_enable (c++ enumerator)": [[51, "_CPPv4N33Adxl345Flags_IntEnable_Inactivity40Adxl345Flags_IntEnable_Inactivity_enableE"]], "adxl345flags_fifostatus_fifotrig (c++ enum)": [[52, "_CPPv432Adxl345Flags_FifoStatus_FifoTrig"]], "adxl345flags_fifostatus_fifotrig::adxl345flags_fifostatus_fifotrig_nottriggered (c++ enumerator)": [[52, "_CPPv4N32Adxl345Flags_FifoStatus_FifoTrig45Adxl345Flags_FifoStatus_FifoTrig_notTriggeredE"]], "adxl345flags_fifostatus_fifotrig::adxl345flags_fifostatus_fifotrig_triggered (c++ enumerator)": [[52, "_CPPv4N32Adxl345Flags_FifoStatus_FifoTrig42Adxl345Flags_FifoStatus_FifoTrig_triggeredE"]], "adxl345flags_dataformat_fullresbit (c++ enum)": [[53, "_CPPv434Adxl345Flags_DataFormat_FullResBit"]], "adxl345flags_dataformat_fullresbit::adxl345flags_dataformat_fullresbit_10bit (c++ enumerator)": [[53, "_CPPv4N34Adxl345Flags_DataFormat_FullResBit40Adxl345Flags_DataFormat_FullResBit_10bitE"]], "adxl345flags_dataformat_fullresbit::adxl345flags_dataformat_fullresbit_fullres_4mg (c++ enumerator)": [[53, "_CPPv4N34Adxl345Flags_DataFormat_FullResBit46Adxl345Flags_DataFormat_FullResBit_fullRes_4mgE"]], "adxl345flags_intenable_overrun (c++ enum)": [[54, "_CPPv430Adxl345Flags_IntEnable_Overrun"]], "adxl345flags_intenable_overrun::adxl345flags_intenable_overrun_disable (c++ enumerator)": [[54, "_CPPv4N30Adxl345Flags_IntEnable_Overrun38Adxl345Flags_IntEnable_Overrun_disableE"]], "adxl345flags_intenable_overrun::adxl345flags_intenable_overrun_enable (c++ enumerator)": [[54, "_CPPv4N30Adxl345Flags_IntEnable_Overrun37Adxl345Flags_IntEnable_Overrun_enableE"]], "adxl345flags_fifoctl_trigger (c++ enum)": [[55, "_CPPv428Adxl345Flags_FifoCtl_Trigger"]], "adxl345flags_fifoctl_trigger::adxl345flags_fifoctl_trigger_int1 (c++ enumerator)": [[55, "_CPPv4N28Adxl345Flags_FifoCtl_Trigger33Adxl345Flags_FifoCtl_Trigger_int1E"]], "adxl345flags_fifoctl_trigger::adxl345flags_fifoctl_trigger_int2 (c++ enumerator)": [[55, "_CPPv4N28Adxl345Flags_FifoCtl_Trigger33Adxl345Flags_FifoCtl_Trigger_int2E"]], "adxl345flags_intmap_singletap (c++ enum)": [[56, "_CPPv429Adxl345Flags_IntMap_SingleTap"]], "adxl345flags_intmap_singletap::adxl345flags_intmap_singletap_int1 (c++ enumerator)": [[56, "_CPPv4N29Adxl345Flags_IntMap_SingleTap34Adxl345Flags_IntMap_SingleTap_int1E"]], "adxl345flags_intmap_singletap::adxl345flags_intmap_singletap_int2 (c++ enumerator)": [[56, "_CPPv4N29Adxl345Flags_IntMap_SingleTap34Adxl345Flags_IntMap_SingleTap_int2E"]], "adxl345flags_powerctl_autosleep (c++ enum)": [[57, "_CPPv431Adxl345Flags_PowerCtl_AutoSleep"]], "adxl345flags_powerctl_autosleep::adxl345flags_powerctl_autosleep_disabled (c++ enumerator)": [[57, "_CPPv4N31Adxl345Flags_PowerCtl_AutoSleep40Adxl345Flags_PowerCtl_AutoSleep_disabledE"]], "adxl345flags_powerctl_autosleep::adxl345flags_powerctl_autosleep_function (c++ enumerator)": [[57, "_CPPv4N31Adxl345Flags_PowerCtl_AutoSleep40Adxl345Flags_PowerCtl_AutoSleep_functionE"]], "adxl345flags_powerctl_link (c++ enum)": [[58, "_CPPv426Adxl345Flags_PowerCtl_Link"]], "adxl345flags_powerctl_link::adxl345flags_powerctl_link_concurrent (c++ enumerator)": [[58, "_CPPv4N26Adxl345Flags_PowerCtl_Link37Adxl345Flags_PowerCtl_Link_concurrentE"]], "adxl345flags_powerctl_link::adxl345flags_powerctl_link_serial (c++ enumerator)": [[58, "_CPPv4N26Adxl345Flags_PowerCtl_Link33Adxl345Flags_PowerCtl_Link_serialE"]], "adxl345flags_intmap_doubletap (c++ enum)": [[59, "_CPPv429Adxl345Flags_IntMap_DoubleTap"]], "adxl345flags_intmap_doubletap::adxl345flags_intmap_doubletap_int1 (c++ enumerator)": [[59, "_CPPv4N29Adxl345Flags_IntMap_DoubleTap34Adxl345Flags_IntMap_DoubleTap_int1E"]], "adxl345flags_intmap_doubletap::adxl345flags_intmap_doubletap_int2 (c++ enumerator)": [[59, "_CPPv4N29Adxl345Flags_IntMap_DoubleTap34Adxl345Flags_IntMap_DoubleTap_int2E"]], "adxl345flags_intmap_inactivity (c++ enum)": [[60, "_CPPv430Adxl345Flags_IntMap_Inactivity"]], "adxl345flags_intmap_inactivity::adxl345flags_intmap_inactivity_int1 (c++ enumerator)": [[60, "_CPPv4N30Adxl345Flags_IntMap_Inactivity35Adxl345Flags_IntMap_Inactivity_int1E"]], "adxl345flags_intmap_inactivity::adxl345flags_intmap_inactivity_int2 (c++ enumerator)": [[60, "_CPPv4N30Adxl345Flags_IntMap_Inactivity35Adxl345Flags_IntMap_Inactivity_int2E"]], "adxl345flags_intmap_dataready (c++ enum)": [[61, "_CPPv429Adxl345Flags_IntMap_DataReady"]], "adxl345flags_intmap_dataready::adxl345flags_intmap_dataready_int1 (c++ enumerator)": [[61, "_CPPv4N29Adxl345Flags_IntMap_DataReady34Adxl345Flags_IntMap_DataReady_int1E"]], "adxl345flags_intmap_dataready::adxl345flags_intmap_dataready_int2 (c++ enumerator)": [[61, "_CPPv4N29Adxl345Flags_IntMap_DataReady34Adxl345Flags_IntMap_DataReady_int2E"]], "adxl345flags_bwrate_lowpower (c++ enum)": [[62, "_CPPv428Adxl345Flags_BwRate_LowPower"]], "adxl345flags_bwrate_lowpower::adxl345flags_bwrate_lowpower_normal (c++ enumerator)": [[62, "_CPPv4N28Adxl345Flags_BwRate_LowPower35Adxl345Flags_BwRate_LowPower_normalE"]], "adxl345flags_bwrate_lowpower::adxl345flags_bwrate_lowpower_reduced (c++ enumerator)": [[62, "_CPPv4N28Adxl345Flags_BwRate_LowPower36Adxl345Flags_BwRate_LowPower_reducedE"]], "adxl345flags_dataformat_intinvert (c++ enum)": [[63, "_CPPv433Adxl345Flags_DataFormat_IntInvert"]], "adxl345flags_dataformat_intinvert::adxl345flags_dataformat_intinvert_activehigh (c++ enumerator)": [[63, "_CPPv4N33Adxl345Flags_DataFormat_IntInvert44Adxl345Flags_DataFormat_IntInvert_activeHighE"]], "adxl345flags_dataformat_intinvert::adxl345flags_dataformat_intinvert_activelow (c++ enumerator)": [[63, "_CPPv4N33Adxl345Flags_DataFormat_IntInvert43Adxl345Flags_DataFormat_IntInvert_activeLowE"]], "adxl345flags_fifoctl_fifomode (c++ enum)": [[64, "_CPPv429Adxl345Flags_FifoCtl_FifoMode"]], "adxl345flags_fifoctl_fifomode::adxl345flags_fifoctl_fifomode_bypass (c++ enumerator)": [[64, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode36Adxl345Flags_FifoCtl_FifoMode_bypassE"]], "adxl345flags_fifoctl_fifomode::adxl345flags_fifoctl_fifomode_fifo (c++ enumerator)": [[64, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode34Adxl345Flags_FifoCtl_FifoMode_fifoE"]], "adxl345flags_fifoctl_fifomode::adxl345flags_fifoctl_fifomode_stream (c++ enumerator)": [[64, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode36Adxl345Flags_FifoCtl_FifoMode_streamE"]], "adxl345flags_fifoctl_fifomode::adxl345flags_fifoctl_fifomode_trigger (c++ enumerator)": [[64, "_CPPv4N29Adxl345Flags_FifoCtl_FifoMode37Adxl345Flags_FifoCtl_FifoMode_triggerE"]], "adxl345flags_powerctl_wakeup (c++ enum)": [[65, "_CPPv428Adxl345Flags_PowerCtl_Wakeup"]], "adxl345flags_powerctl_wakeup::adxl345flags_powerctl_wakeup_1hz (c++ enumerator)": [[65, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_1HzE"]], "adxl345flags_powerctl_wakeup::adxl345flags_powerctl_wakeup_2hz (c++ enumerator)": [[65, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_2HzE"]], "adxl345flags_powerctl_wakeup::adxl345flags_powerctl_wakeup_4hz (c++ enumerator)": [[65, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_4HzE"]], "adxl345flags_powerctl_wakeup::adxl345flags_powerctl_wakeup_8hz (c++ enumerator)": [[65, "_CPPv4N28Adxl345Flags_PowerCtl_Wakeup32Adxl345Flags_PowerCtl_Wakeup_8HzE"]], "adxl345flags_intmap_freefall (c++ enum)": [[66, "_CPPv428Adxl345Flags_IntMap_FreeFall"]], "adxl345flags_intmap_freefall::adxl345flags_intmap_freefall_int1 (c++ enumerator)": [[66, "_CPPv4N28Adxl345Flags_IntMap_FreeFall33Adxl345Flags_IntMap_FreeFall_int1E"]], "adxl345flags_intmap_freefall::adxl345flags_intmap_freefall_int2 (c++ enumerator)": [[66, "_CPPv4N28Adxl345Flags_IntMap_FreeFall33Adxl345Flags_IntMap_FreeFall_int2E"]], "adxl345flags_dataformat_range (c++ enum)": [[67, "_CPPv429Adxl345Flags_DataFormat_Range"]], "adxl345flags_dataformat_range::adxl345flags_dataformat_range_16g (c++ enumerator)": [[67, "_CPPv4N29Adxl345Flags_DataFormat_Range33Adxl345Flags_DataFormat_Range_16gE"]], "adxl345flags_dataformat_range::adxl345flags_dataformat_range_2g (c++ enumerator)": [[67, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_2gE"]], "adxl345flags_dataformat_range::adxl345flags_dataformat_range_4g (c++ enumerator)": [[67, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_4gE"]], "adxl345flags_dataformat_range::adxl345flags_dataformat_range_8g (c++ enumerator)": [[67, "_CPPv4N29Adxl345Flags_DataFormat_Range32Adxl345Flags_DataFormat_Range_8gE"]], "adxl345flags_intenable_doubletap (c++ enum)": [[68, "_CPPv432Adxl345Flags_IntEnable_DoubleTap"]], "adxl345flags_intenable_doubletap::adxl345flags_intenable_doubletap_disable (c++ enumerator)": [[68, "_CPPv4N32Adxl345Flags_IntEnable_DoubleTap40Adxl345Flags_IntEnable_DoubleTap_disableE"]], "adxl345flags_intenable_doubletap::adxl345flags_intenable_doubletap_enable (c++ enumerator)": [[68, "_CPPv4N32Adxl345Flags_IntEnable_DoubleTap39Adxl345Flags_IntEnable_DoubleTap_enableE"]], "adxl345flags_bwrate_rate (c++ enum)": [[69, "_CPPv424Adxl345Flags_BwRate_Rate"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr0_10 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_10E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr0_20 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_20E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr0_39 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_39E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr0_78 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr0_78E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr100 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr100E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr12_5 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr12_5E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr1600 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr1600E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr1_56 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr1_56E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr200 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr200E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr25 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate41Adxl345Flags_BwRate_Rate_normalPowerOdr25E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr3200 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr3200E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr3_13 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr3_13E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr400 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr400E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr50 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate41Adxl345Flags_BwRate_Rate_normalPowerOdr50E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr6_25 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_normalPowerOdr6_25E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_normalpowerodr800 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_normalPowerOdr800E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_reducedpowerodr100 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr100E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_reducedpowerodr12_5 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate44Adxl345Flags_BwRate_Rate_reducedPowerOdr12_5E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_reducedpowerodr200 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr200E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_reducedpowerodr25 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_reducedPowerOdr25E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_reducedpowerodr400 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate43Adxl345Flags_BwRate_Rate_reducedPowerOdr400E"]], "adxl345flags_bwrate_rate::adxl345flags_bwrate_rate_reducedpowerodr50 (c++ enumerator)": [[69, "_CPPv4N24Adxl345Flags_BwRate_Rate42Adxl345Flags_BwRate_Rate_reducedPowerOdr50E"]], "adxl345flags_intmap_activity (c++ enum)": [[70, "_CPPv428Adxl345Flags_IntMap_Activity"]], "adxl345flags_intmap_activity::adxl345flags_intmap_activity_int1 (c++ enumerator)": [[70, "_CPPv4N28Adxl345Flags_IntMap_Activity33Adxl345Flags_IntMap_Activity_int1E"]], "adxl345flags_intmap_activity::adxl345flags_intmap_activity_int2 (c++ enumerator)": [[70, "_CPPv4N28Adxl345Flags_IntMap_Activity33Adxl345Flags_IntMap_Activity_int2E"]], "adxl345flags_intenable_watermark (c++ enum)": [[71, "_CPPv432Adxl345Flags_IntEnable_Watermark"]], "adxl345flags_intenable_watermark::adxl345flags_intenable_watermark_disable (c++ enumerator)": [[71, "_CPPv4N32Adxl345Flags_IntEnable_Watermark40Adxl345Flags_IntEnable_Watermark_disableE"]], "adxl345flags_intenable_watermark::adxl345flags_intenable_watermark_enable (c++ enumerator)": [[71, "_CPPv4N32Adxl345Flags_IntEnable_Watermark39Adxl345Flags_IntEnable_Watermark_enableE"]], "adxl345flags_dataformat_selftest (c++ enum)": [[72, "_CPPv432Adxl345Flags_DataFormat_SelfTest"]], "adxl345flags_dataformat_selftest::adxl345flags_dataformat_selftest_disableforce (c++ enumerator)": [[72, "_CPPv4N32Adxl345Flags_DataFormat_SelfTest45Adxl345Flags_DataFormat_SelfTest_disableForceE"]], "adxl345flags_dataformat_selftest::adxl345flags_dataformat_selftest_enableforce (c++ enumerator)": [[72, "_CPPv4N32Adxl345Flags_DataFormat_SelfTest44Adxl345Flags_DataFormat_SelfTest_enableForceE"]], "adxl345flags_intenable_dataready (c++ enum)": [[73, "_CPPv432Adxl345Flags_IntEnable_DataReady"]], "adxl345flags_intenable_dataready::adxl345flags_intenable_dataready_disable (c++ enumerator)": [[73, "_CPPv4N32Adxl345Flags_IntEnable_DataReady40Adxl345Flags_IntEnable_DataReady_disableE"]], "adxl345flags_intenable_dataready::adxl345flags_intenable_dataready_enable (c++ enumerator)": [[73, "_CPPv4N32Adxl345Flags_IntEnable_DataReady39Adxl345Flags_IntEnable_DataReady_enableE"]], "adxl345flags_intenable_singletap (c++ enum)": [[74, "_CPPv432Adxl345Flags_IntEnable_SingleTap"]], "adxl345flags_intenable_singletap::adxl345flags_intenable_singletap_disable (c++ enumerator)": [[74, "_CPPv4N32Adxl345Flags_IntEnable_SingleTap40Adxl345Flags_IntEnable_SingleTap_disableE"]], "adxl345flags_intenable_singletap::adxl345flags_intenable_singletap_enable (c++ enumerator)": [[74, "_CPPv4N32Adxl345Flags_IntEnable_SingleTap39Adxl345Flags_IntEnable_SingleTap_enableE"]], "adxl345flags_intmap_watermark (c++ enum)": [[75, "_CPPv429Adxl345Flags_IntMap_Watermark"]], "adxl345flags_intmap_watermark::adxl345flags_intmap_watermark_int1 (c++ enumerator)": [[75, "_CPPv4N29Adxl345Flags_IntMap_Watermark34Adxl345Flags_IntMap_Watermark_int1E"]], "adxl345flags_intmap_watermark::adxl345flags_intmap_watermark_int2 (c++ enumerator)": [[75, "_CPPv4N29Adxl345Flags_IntMap_Watermark34Adxl345Flags_IntMap_Watermark_int2E"]], "adxl345flags_intenable_activity (c++ enum)": [[76, "_CPPv431Adxl345Flags_IntEnable_Activity"]], "adxl345flags_intenable_activity::adxl345flags_intenable_activity_disable (c++ enumerator)": [[76, "_CPPv4N31Adxl345Flags_IntEnable_Activity39Adxl345Flags_IntEnable_Activity_disableE"]], "adxl345flags_intenable_activity::adxl345flags_intenable_activity_enable (c++ enumerator)": [[76, "_CPPv4N31Adxl345Flags_IntEnable_Activity38Adxl345Flags_IntEnable_Activity_enableE"]], "adxl345flags_intmap_overrun (c++ enum)": [[77, "_CPPv427Adxl345Flags_IntMap_Overrun"]], "adxl345flags_intmap_overrun::adxl345flags_intmap_overrun_int1 (c++ enumerator)": [[77, "_CPPv4N27Adxl345Flags_IntMap_Overrun32Adxl345Flags_IntMap_Overrun_int1E"]], "adxl345flags_intmap_overrun::adxl345flags_intmap_overrun_int2 (c++ enumerator)": [[77, "_CPPv4N27Adxl345Flags_IntMap_Overrun32Adxl345Flags_IntMap_Overrun_int2E"]], "adxl345flags_powerctl_sleep (c++ enum)": [[78, "_CPPv427Adxl345Flags_PowerCtl_Sleep"]], "adxl345flags_powerctl_sleep::adxl345flags_powerctl_sleep_normalmode (c++ enumerator)": [[78, "_CPPv4N27Adxl345Flags_PowerCtl_Sleep38Adxl345Flags_PowerCtl_Sleep_normalModeE"]], "adxl345flags_powerctl_sleep::adxl345flags_powerctl_sleep_sleepmode (c++ enumerator)": [[78, "_CPPv4N27Adxl345Flags_PowerCtl_Sleep37Adxl345Flags_PowerCtl_Sleep_sleepModeE"]], "adxl345flags_powerctl_measure (c++ enum)": [[79, "_CPPv429Adxl345Flags_PowerCtl_Measure"]], "adxl345flags_powerctl_measure::adxl345flags_powerctl_measure_measure (c++ enumerator)": [[79, "_CPPv4N29Adxl345Flags_PowerCtl_Measure37Adxl345Flags_PowerCtl_Measure_measureE"]], "adxl345flags_powerctl_measure::adxl345flags_powerctl_measure_standby (c++ enumerator)": [[79, "_CPPv4N29Adxl345Flags_PowerCtl_Measure37Adxl345Flags_PowerCtl_Measure_standbyE"]], "adxl345flags_dataformat_justify (c++ enum)": [[80, "_CPPv431Adxl345Flags_DataFormat_Justify"]], "adxl345flags_dataformat_justify::adxl345flags_dataformat_justify_lsbright (c++ enumerator)": [[80, "_CPPv4N31Adxl345Flags_DataFormat_Justify40Adxl345Flags_DataFormat_Justify_lsbRightE"]], "adxl345flags_dataformat_justify::adxl345flags_dataformat_justify_msbleft (c++ enumerator)": [[80, "_CPPv4N31Adxl345Flags_DataFormat_Justify39Adxl345Flags_DataFormat_Justify_msbLeftE"]], "adxl345flags_intenable_freefall (c++ enum)": [[81, "_CPPv431Adxl345Flags_IntEnable_FreeFall"]], "adxl345flags_intenable_freefall::adxl345flags_intenable_freefall_disable (c++ enumerator)": [[81, "_CPPv4N31Adxl345Flags_IntEnable_FreeFall39Adxl345Flags_IntEnable_FreeFall_disableE"]], "adxl345flags_intenable_freefall::adxl345flags_intenable_freefall_enable (c++ enumerator)": [[81, "_CPPv4N31Adxl345Flags_IntEnable_FreeFall38Adxl345Flags_IntEnable_FreeFall_enableE"]], "adxl345flags_dataformat_spibit (c++ enum)": [[82, "_CPPv430Adxl345Flags_DataFormat_SpiBit"]], "adxl345flags_dataformat_spibit::adxl345flags_dataformat_spibit_3wire (c++ enumerator)": [[82, "_CPPv4N30Adxl345Flags_DataFormat_SpiBit36Adxl345Flags_DataFormat_SpiBit_3wireE"]], "adxl345flags_dataformat_spibit::adxl345flags_dataformat_spibit_4wire (c++ enumerator)": [[82, "_CPPv4N30Adxl345Flags_DataFormat_SpiBit36Adxl345Flags_DataFormat_SpiBit_4wireE"]], "adxl345flags_address (c++ enum)": [[83, "_CPPv420Adxl345Flags_Address"]], "adxl345flags_address::adxl345flags_address_actinactctl (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_actInactCtlE"]], "adxl345flags_address::adxl345flags_address_acttapstatus (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address33Adxl345Flags_Address_actTapStatusE"]], "adxl345flags_address::adxl345flags_address_bwrate (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_bwRateE"]], "adxl345flags_address::adxl345flags_address_dataformat (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_dataFormatE"]], "adxl345flags_address::adxl345flags_address_datax0 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataX0E"]], "adxl345flags_address::adxl345flags_address_datax1 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataX1E"]], "adxl345flags_address::adxl345flags_address_datay0 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataY0E"]], "adxl345flags_address::adxl345flags_address_datay1 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataY1E"]], "adxl345flags_address::adxl345flags_address_dataz0 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataZ0E"]], "adxl345flags_address::adxl345flags_address_dataz1 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_dataZ1E"]], "adxl345flags_address::adxl345flags_address_devid (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_devIdE"]], "adxl345flags_address::adxl345flags_address_dur (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address24Adxl345Flags_Address_durE"]], "adxl345flags_address::adxl345flags_address_fifoctl (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_fifoCtlE"]], "adxl345flags_address::adxl345flags_address_fifostatus (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_fifoStatusE"]], "adxl345flags_address::adxl345flags_address_intenable (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_intEnableE"]], "adxl345flags_address::adxl345flags_address_intmap (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_intMapE"]], "adxl345flags_address::adxl345flags_address_intsource (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_intSourceE"]], "adxl345flags_address::adxl345flags_address_latent (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_latentE"]], "adxl345flags_address::adxl345flags_address_offsx (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsXE"]], "adxl345flags_address::adxl345flags_address_offsy (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsYE"]], "adxl345flags_address::adxl345flags_address_offsz (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address26Adxl345Flags_Address_offsZE"]], "adxl345flags_address::adxl345flags_address_powerctl (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_powerCtlE"]], "adxl345flags_address::adxl345flags_address_reserved_01 (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_reserved_01E"]], "adxl345flags_address::adxl345flags_address_reserved_1c (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address32Adxl345Flags_Address_reserved_1CE"]], "adxl345flags_address::adxl345flags_address_tapaxes (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_tapAxesE"]], "adxl345flags_address::adxl345flags_address_thresact (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_thresActE"]], "adxl345flags_address::adxl345flags_address_thresff (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address28Adxl345Flags_Address_thresFfE"]], "adxl345flags_address::adxl345flags_address_thresinact (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address31Adxl345Flags_Address_thresInactE"]], "adxl345flags_address::adxl345flags_address_threstap (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address29Adxl345Flags_Address_thresTapE"]], "adxl345flags_address::adxl345flags_address_timeff (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_timeFfE"]], "adxl345flags_address::adxl345flags_address_timeinact (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address30Adxl345Flags_Address_timeInactE"]], "adxl345flags_address::adxl345flags_address_window (c++ enumerator)": [[83, "_CPPv4N20Adxl345Flags_Address27Adxl345Flags_Address_windowE"]], "adxl345spi_cs (c++ enum)": [[84, "_CPPv413Adxl345Spi_Cs"]], "adxl345spi_cs::adxl345spi_cs_modify (c++ enumerator)": [[84, "_CPPv4N13Adxl345Spi_Cs20Adxl345Spi_Cs_modifyE"]], "adxl345spi_cs::adxl345spi_cs_untouched (c++ enumerator)": [[84, "_CPPv4N13Adxl345Spi_Cs23Adxl345Spi_Cs_untouchedE"]], "adxl345spi_rwflags (c++ enum)": [[85, "_CPPv418Adxl345Spi_RwFlags"]], "adxl345spi_rwflags::adxl345spi_rwflags_multibyte (c++ enumerator)": [[85, "_CPPv4N18Adxl345Spi_RwFlags28Adxl345Spi_RwFlags_multiByteE"]], "adxl345spi_rwflags::adxl345spi_rwflags_read (c++ enumerator)": [[85, "_CPPv4N18Adxl345Spi_RwFlags23Adxl345Spi_RwFlags_readE"]], "adxl345spi_rwflags::adxl345spi_rwflags_singlebyte (c++ enumerator)": [[85, "_CPPv4N18Adxl345Spi_RwFlags29Adxl345Spi_RwFlags_singleByteE"]], "adxl345spi_rwflags::adxl345spi_rwflags_write (c++ enumerator)": [[85, "_CPPv4N18Adxl345Spi_RwFlags24Adxl345Spi_RwFlags_writeE"]], "hosttransport_status (c++ enum)": [[86, "_CPPv420HostTransport_Status"]], "hosttransport_status::hosttransport_status_busy (c++ enumerator)": [[86, "_CPPv4N20HostTransport_Status25HostTransport_Status_BusyE"]], "hosttransport_status::hosttransport_status_fail (c++ enumerator)": [[86, "_CPPv4N20HostTransport_Status25HostTransport_Status_FailE"]], "hosttransport_status::hosttransport_status_ok (c++ enumerator)": [[86, "_CPPv4N20HostTransport_Status23HostTransport_Status_OkE"]], "hosttransport_status::hosttransport_status_undefined (c++ enumerator)": [[86, "_CPPv4N20HostTransport_Status30HostTransport_Status_UndefinedE"]], "transportrx_setoutputdatarate_rate (c++ enum)": [[87, "_CPPv434TransportRx_SetOutputDataRate_Rate"]], "transportrx_setscale_scale (c++ enum)": [[88, "_CPPv426TransportRx_SetScale_Scale"]], "transporttx_faultcode (c++ enum)": [[89, "_CPPv421TransportTx_FaultCode"]], "transport_headerid (c++ enum)": [[90, "_CPPv418Transport_HeaderId"]], "transportrx_setrange_range (c++ enum)": [[91, "_CPPv426TransportRx_SetRange_Range"]], "adxl345_setpowerctlmeasure (c++ function)": [[129, "_CPPv426Adxl345_setPowerCtlMeasureP14Adxl345_Handle"], [141, "_CPPv426Adxl345_setPowerCtlMeasureP14Adxl345_Handle"]], "adxl345_setrange (c++ function)": [[130, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t"], [142, "_CPPv416Adxl345_setRangeP14Adxl345_Handle7uint8_t"]], "adxl345_getacceleration (c++ function)": [[131, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration"], [143, "_CPPv423Adxl345_getAccelerationP14Adxl345_HandleP29Adxl345Transport_Acceleration"]], "adxl345_getrange (c++ function)": [[133, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range"], [144, "_CPPv416Adxl345_getRangeP14Adxl345_HandleP29Adxl345Flags_DataFormat_Range"]], "adxl345_init (c++ function)": [[135, "_CPPv412Adxl345_initP14Adxl345_Handle"], [145, "_CPPv412Adxl345_initP14Adxl345_Handle"]], "adxl345_setpowerctlstandby (c++ function)": [[136, "_CPPv426Adxl345_setPowerCtlStandbyP14Adxl345_Handle"], [146, "_CPPv426Adxl345_setPowerCtlStandbyP14Adxl345_Handle"]], "adxl345_setscale (c++ function)": [[137, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t"], [147, "_CPPv416Adxl345_setScaleP14Adxl345_Handle7uint8_t"]], "adxl345_setoutputdatarate (c++ function)": [[138, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t"], [148, "_CPPv425Adxl345_setOutputDataRateP14Adxl345_Handle7uint8_t"]], "adxl345_getscale (c++ function)": [[139, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit"], [149, "_CPPv416Adxl345_getScaleP14Adxl345_HandleP34Adxl345Flags_DataFormat_FullResBit"]], "adxl345_getoutputdatarate (c++ function)": [[140, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate"], [150, "_CPPv425Adxl345_getOutputDataRateP14Adxl345_HandleP24Adxl345Flags_BwRate_Rate"]], "adxl345transportimpl_dotransmitframeimpl (c++ function)": [[154, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags"], [157, "_CPPv440Adxl345TransportImpl_doTransmitFrameImplPK24Adxl345Transport_TxFrame7uint8_t13Adxl345Spi_Cs18Adxl345Spi_RwFlags"]], "adxl345transportimpl_dotransmitreceiveframeimpl (c++ function)": [[156, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t"], [158, "_CPPv447Adxl345TransportImpl_doTransmitReceiveFrameImplPK24Adxl345Transport_TxFrameP24Adxl345Transport_RxFrame7uint8_t"]], "transportrx_process (c++ function)": [[203, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t"], [204, "_CPPv419TransportRx_ProcessP20HostTransport_HandlePK7uint8_t8uint16_t"]], "transport_resetbuffer (c++ function)": [[205, "_CPPv421Transport_resetBufferP20HostTransport_Handle"], [206, "_CPPv421Transport_resetBufferP20HostTransport_Handle"]], "hosttransportimpl_dotransmitimpl (c++ function)": [[207, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t"], [210, "_CPPv432HostTransportImpl_doTransmitImplP7uint8_t8uint16_t"]], "hosttransportimpl_ontakereceivedimpl (c++ function)": [[208, "_CPPv436HostTransportImpl_onTakeReceivedImplPK7uint8_t"], [211, "_CPPv436HostTransportImpl_onTakeReceivedImplPK7uint8_t"]], "hosttransportimpl_istransmitbusyimpl (c++ function)": [[209, "_CPPv436HostTransportImpl_isTransmitBusyImplv"], [212, "_CPPv436HostTransportImpl_isTransmitBusyImplv"]], "ringbuffer_init (c++ function)": [[215, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t"], [230, "_CPPv415Ringbuffer_initP10RingbufferP7uint8_t8uint16_t7uint8_t"]], "ringbuffer_reset (c++ function)": [[216, "_CPPv416Ringbuffer_resetP10Ringbuffer"], [231, "_CPPv416Ringbuffer_resetP10Ringbuffer"]], "ringbuffer_maxcapacityused (c++ function)": [[217, "_CPPv426Ringbuffer_maxCapacityUsedPK10Ringbuffer"], [232, "_CPPv426Ringbuffer_maxCapacityUsedPK10Ringbuffer"]], "ringbuffer_take (c++ function)": [[218, "_CPPv415Ringbuffer_takeP10RingbufferPv"], [233, "_CPPv415Ringbuffer_takeP10RingbufferPv"]], "ringbuffer_isfull (c++ function)": [[219, "_CPPv417Ringbuffer_isFullPK10Ringbuffer"], [234, "_CPPv417Ringbuffer_isFullPK10Ringbuffer"]], "ringbuffer_itemsizebytes (c++ function)": [[220, "_CPPv424Ringbuffer_itemSizeBytesPK10Ringbuffer"], [235, "_CPPv424Ringbuffer_itemSizeBytesPK10Ringbuffer"]], "ringbuffer_takecount (c++ function)": [[221, "_CPPv420Ringbuffer_takeCountPK10Ringbuffer"], [236, "_CPPv420Ringbuffer_takeCountPK10Ringbuffer"]], "ringbufferindex_init (c++ function)": [[223, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t"], [237, "_CPPv420RingbufferIndex_initP16Ringbuffer_Index8uint16_t7uint8_t"]], "ringbuffer_isempty (c++ function)": [[224, "_CPPv418Ringbuffer_isEmptyPK10Ringbuffer"], [238, "_CPPv418Ringbuffer_isEmptyPK10Ringbuffer"]], "ringbuffer_put (c++ function)": [[225, "_CPPv414Ringbuffer_putP10RingbufferPKv"], [239, "_CPPv414Ringbuffer_putP10RingbufferPKv"]], "ringbuffer_itemscount (c++ function)": [[228, "_CPPv421Ringbuffer_itemsCountPK10Ringbuffer"], [240, "_CPPv421Ringbuffer_itemsCountPK10Ringbuffer"]], "ringbuffer_putcount (c++ function)": [[229, "_CPPv419Ringbuffer_putCountPK10Ringbuffer"], [241, "_CPPv419Ringbuffer_putCountPK10Ringbuffer"]], "main (c++ function)": [[242, "_CPPv44mainiPPc"]], "sampling_fetchforward (c++ function)": [[243, "_CPPv421Sampling_fetchForwardP15Sampling_Handle"], [254, "_CPPv421Sampling_fetchForwardP15Sampling_Handle"]], "sampling_setfifowatermark (c++ function)": [[246, "_CPPv425Sampling_setFifoWatermarkP15Sampling_Handle"], [255, "_CPPv425Sampling_setFifoWatermarkP15Sampling_Handle"]], "sampling_clearfifowatermark (c++ function)": [[248, "_CPPv427Sampling_clearFifoWatermarkP15Sampling_Handle"], [256, "_CPPv427Sampling_clearFifoWatermarkP15Sampling_Handle"]], "sampling_start (c++ function)": [[250, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t"], [257, "_CPPv414Sampling_startP15Sampling_Handle8uint16_t"]], "sampling_stop (c++ function)": [[251, "_CPPv413Sampling_stopP15Sampling_Handle"], [258, "_CPPv413Sampling_stopP15Sampling_Handle"]], "sampling_on5ustimerexpired (c++ function)": [[252, "_CPPv426Sampling_on5usTimerExpiredP15Sampling_Handle"], [259, "_CPPv426Sampling_on5usTimerExpiredP15Sampling_Handle"]], "sampling_setfifooverflow (c++ function)": [[253, "_CPPv424Sampling_setFifoOverflowP15Sampling_Handle"], [260, "_CPPv424Sampling_setFifoOverflowP15Sampling_Handle"]], "samplingimpl_dowaitdelay5usimpl (c++ function)": [[261, "_CPPv431SamplingImpl_doWaitDelay5usImplP15Sampling_Handle"], [262, "_CPPv431SamplingImpl_doWaitDelay5usImplP15Sampling_Handle"]], "transporttx_txoutputdatarate (c++ function)": [[281, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t"], [302, "_CPPv428TransportTx_TxOutputDataRateP20HostTransport_Handle7uint8_t"]], "transporttx_txfifooverflow (c++ function)": [[282, "_CPPv426TransportTx_TxFifoOverflowP20HostTransport_Handle"], [303, "_CPPv426TransportTx_TxFifoOverflowP20HostTransport_Handle"]], "transporttx_txbufferoverflow (c++ function)": [[284, "_CPPv428TransportTx_TxBufferOverflowP20HostTransport_Handle"], [304, "_CPPv428TransportTx_TxBufferOverflowP20HostTransport_Handle"]], "transporttx_txsamplingfinished (c++ function)": [[285, "_CPPv430TransportTx_TxSamplingFinishedP20HostTransport_Handle"], [305, "_CPPv430TransportTx_TxSamplingFinishedP20HostTransport_Handle"]], "transporttx_txsamplingaborted (c++ function)": [[286, "_CPPv429TransportTx_TxSamplingAbortedP20HostTransport_Handle"], [306, "_CPPv429TransportTx_TxSamplingAbortedP20HostTransport_Handle"]], "transporttx_txaccelerationbuffer (c++ function)": [[287, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t"], [307, "_CPPv432TransportTx_TxAccelerationBufferP20HostTransport_HandlePK22Transport_Acceleration7uint8_t8uint16_t"]], "transporttx_txscale (c++ function)": [[288, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t"], [308, "_CPPv419TransportTx_TxScaleP20HostTransport_Handle7uint8_t"]], "transporttx_txtransmissionerror (c++ function)": [[289, "_CPPv431TransportTx_TxTransmissionErrorP20HostTransport_Handle"], [309, "_CPPv431TransportTx_TxTransmissionErrorP20HostTransport_Handle"]], "transporttx_txuptime (c++ function)": [[291, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t"], [310, "_CPPv420TransportTx_TxUptimeP20HostTransport_Handle8uint32_t"]], "transporttx_txsamplingsetup (c++ function)": [[292, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t"], [311, "_CPPv427TransportTx_TxSamplingSetupP20HostTransport_Handle7uint8_t7uint8_t7uint8_t"]], "transporttx_txfirmwareversion (c++ function)": [[295, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t"], [312, "_CPPv429TransportTx_TxFirmwareVersionP20HostTransport_Handle7uint8_t7uint8_t7uint8_t"]], "transporttx_txsamplingstopped (c++ function)": [[296, "_CPPv429TransportTx_TxSamplingStoppedP20HostTransport_Handle"], [313, "_CPPv429TransportTx_TxSamplingStoppedP20HostTransport_Handle"]], "transporttx_txfault (c++ function)": [[297, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode"], [314, "_CPPv419TransportTx_TxFaultP20HostTransport_Handle21TransportTx_FaultCode"]], "transporttx_txsamplingstarted (c++ function)": [[298, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t"], [315, "_CPPv429TransportTx_TxSamplingStartedP20HostTransport_Handle8uint16_t"]], "transporttx_txbufferstatus (c++ function)": [[300, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t"], [316, "_CPPv426TransportTx_TxBufferStatusP20HostTransport_Handle8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t8uint16_t"]], "transporttx_txrange (c++ function)": [[301, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t"], [317, "_CPPv419TransportTx_TxRangeP20HostTransport_Handle7uint8_t"]], "adxl345register_bwrate (c++ struct)": [[356, "_CPPv422Adxl345Register_BwRate"]], "adxl345register_bwrate::_zerod5 (c++ member)": [[356, "_CPPv4N22Adxl345Register_BwRate7_zeroD5E"], [449, "_CPPv4N22Adxl345Register_BwRate7_zeroD5E"]], "adxl345register_bwrate::_zerod6 (c++ member)": [[356, "_CPPv4N22Adxl345Register_BwRate7_zeroD6E"], [435, "_CPPv4N22Adxl345Register_BwRate7_zeroD6E"]], "adxl345register_bwrate::_zerod7 (c++ member)": [[356, "_CPPv4N22Adxl345Register_BwRate7_zeroD7E"], [430, "_CPPv4N22Adxl345Register_BwRate7_zeroD7E"]], "adxl345register_bwrate::lowpower (c++ member)": [[356, "_CPPv4N22Adxl345Register_BwRate8lowPowerE"], [419, "_CPPv4N22Adxl345Register_BwRate8lowPowerE"]], "adxl345register_bwrate::rate (c++ member)": [[356, "_CPPv4N22Adxl345Register_BwRate4rateE"], [424, "_CPPv4N22Adxl345Register_BwRate4rateE"], [499, "_CPPv4N22Adxl345Register_BwRate4rateE"]], "adxl345register_dataformat (c++ struct)": [[357, "_CPPv426Adxl345Register_DataFormat"]], "adxl345register_dataformat::_zerod4 (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat7_zeroD4E"], [425, "_CPPv4N26Adxl345Register_DataFormat7_zeroD4E"]], "adxl345register_dataformat::fullres (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat7fullResE"], [455, "_CPPv4N26Adxl345Register_DataFormat7fullResE"]], "adxl345register_dataformat::intinvert (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat9intInvertE"], [444, "_CPPv4N26Adxl345Register_DataFormat9intInvertE"]], "adxl345register_dataformat::justify (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat7justifyE"], [434, "_CPPv4N26Adxl345Register_DataFormat7justifyE"]], "adxl345register_dataformat::range (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat5rangeE"], [441, "_CPPv4N26Adxl345Register_DataFormat5rangeE"], [546, "_CPPv4N26Adxl345Register_DataFormat5rangeE"]], "adxl345register_dataformat::selftest (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat8selfTestE"], [446, "_CPPv4N26Adxl345Register_DataFormat8selfTestE"]], "adxl345register_dataformat::spi (c++ member)": [[357, "_CPPv4N26Adxl345Register_DataFormat3spiE"], [429, "_CPPv4N26Adxl345Register_DataFormat3spiE"]], "adxl345register_fifoctl (c++ struct)": [[358, "_CPPv423Adxl345Register_FifoCtl"]], "adxl345register_fifoctl::fifomode (c++ member)": [[358, "_CPPv4N23Adxl345Register_FifoCtl8fifoModeE"], [427, "_CPPv4N23Adxl345Register_FifoCtl8fifoModeE"]], "adxl345register_fifoctl::samples (c++ member)": [[358, "_CPPv4N23Adxl345Register_FifoCtl7samplesE"], [453, "_CPPv4N23Adxl345Register_FifoCtl7samplesE"]], "adxl345register_fifoctl::trigger (c++ member)": [[358, "_CPPv4N23Adxl345Register_FifoCtl7triggerE"], [451, "_CPPv4N23Adxl345Register_FifoCtl7triggerE"]], "adxl345register_fifostatus (c++ struct)": [[359, "_CPPv426Adxl345Register_FifoStatus"]], "adxl345register_fifostatus::_zerod6 (c++ member)": [[359, "_CPPv4N26Adxl345Register_FifoStatus7_zeroD6E"]], "adxl345register_fifostatus::entries (c++ member)": [[359, "_CPPv4N26Adxl345Register_FifoStatus7entriesE"], [454, "_CPPv4N26Adxl345Register_FifoStatus7entriesE"]], "adxl345register_fifostatus::fifotrig (c++ member)": [[359, "_CPPv4N26Adxl345Register_FifoStatus8fifoTrigE"], [443, "_CPPv4N26Adxl345Register_FifoStatus8fifoTrigE"]], "adxl345register_intenable (c++ struct)": [[360, "_CPPv425Adxl345Register_IntEnable"]], "adxl345register_intenable::activity (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable8activityE"], [439, "_CPPv4N25Adxl345Register_IntEnable8activityE"]], "adxl345register_intenable::dataready (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable9dataReadyE"], [432, "_CPPv4N25Adxl345Register_IntEnable9dataReadyE"]], "adxl345register_intenable::doubletap (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable9doubleTapE"], [445, "_CPPv4N25Adxl345Register_IntEnable9doubleTapE"]], "adxl345register_intenable::freefall (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable8freeFallE"], [437, "_CPPv4N25Adxl345Register_IntEnable8freeFallE"]], "adxl345register_intenable::inactivity (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable10inactivityE"], [431, "_CPPv4N25Adxl345Register_IntEnable10inactivityE"]], "adxl345register_intenable::overrun (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable7overrunE"], [440, "_CPPv4N25Adxl345Register_IntEnable7overrunE"]], "adxl345register_intenable::singletap (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable9singleTapE"], [436, "_CPPv4N25Adxl345Register_IntEnable9singleTapE"]], "adxl345register_intenable::watermark (c++ member)": [[360, "_CPPv4N25Adxl345Register_IntEnable9watermarkE"], [426, "_CPPv4N25Adxl345Register_IntEnable9watermarkE"]], "adxl345register_intmap (c++ struct)": [[361, "_CPPv422Adxl345Register_IntMap"]], "adxl345register_intmap::activity (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap8activityE"]], "adxl345register_intmap::dataready (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap9dataReadyE"]], "adxl345register_intmap::doubletap (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap9doubleTapE"]], "adxl345register_intmap::freefall (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap8freeFallE"]], "adxl345register_intmap::inactivity (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap10inactivityE"]], "adxl345register_intmap::overrun (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap7overrunE"]], "adxl345register_intmap::singletap (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap9singleTapE"]], "adxl345register_intmap::watermark (c++ member)": [[361, "_CPPv4N22Adxl345Register_IntMap9watermarkE"]], "adxl345register_powerctl (c++ struct)": [[362, "_CPPv424Adxl345Register_PowerCtl"]], "adxl345register_powerctl::_zerod6 (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl7_zeroD6E"]], "adxl345register_powerctl::_zerod7 (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl7_zeroD7E"]], "adxl345register_powerctl::autosleep (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl9autoSleepE"], [438, "_CPPv4N24Adxl345Register_PowerCtl9autoSleepE"]], "adxl345register_powerctl::link (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl4linkE"], [423, "_CPPv4N24Adxl345Register_PowerCtl4linkE"]], "adxl345register_powerctl::measure (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl7measureE"], [433, "_CPPv4N24Adxl345Register_PowerCtl7measureE"]], "adxl345register_powerctl::sleep (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl5sleepE"], [452, "_CPPv4N24Adxl345Register_PowerCtl5sleepE"]], "adxl345register_powerctl::wakeup (c++ member)": [[362, "_CPPv4N24Adxl345Register_PowerCtl6wakeupE"], [420, "_CPPv4N24Adxl345Register_PowerCtl6wakeupE"]], "adxl345transport_acceleration (c++ struct)": [[363, "_CPPv429Adxl345Transport_Acceleration"]], "adxl345transport_acceleration::x (c++ member)": [[363, "_CPPv4N29Adxl345Transport_Acceleration1xE"], [465, "_CPPv4N29Adxl345Transport_Acceleration1xE"], [579, "_CPPv4N29Adxl345Transport_Acceleration1xE"], [596, "_CPPv4N29Adxl345Transport_Acceleration1xE"]], "adxl345transport_acceleration::y (c++ member)": [[363, "_CPPv4N29Adxl345Transport_Acceleration1yE"], [467, "_CPPv4N29Adxl345Transport_Acceleration1yE"], [587, "_CPPv4N29Adxl345Transport_Acceleration1yE"], [597, "_CPPv4N29Adxl345Transport_Acceleration1yE"]], "adxl345transport_acceleration::z (c++ member)": [[363, "_CPPv4N29Adxl345Transport_Acceleration1zE"], [464, "_CPPv4N29Adxl345Transport_Acceleration1zE"], [559, "_CPPv4N29Adxl345Transport_Acceleration1zE"], [595, "_CPPv4N29Adxl345Transport_Acceleration1zE"]], "adxl345transport_datapaddedregister (c++ struct)": [[364, "_CPPv435Adxl345Transport_DataPaddedRegister"]], "adxl345transport_datapaddedregister::_padding8 (c++ member)": [[364, "_CPPv4N35Adxl345Transport_DataPaddedRegister9_padding8E"], [462, "_CPPv4N35Adxl345Transport_DataPaddedRegister9_padding8E"]], "adxl345transport_datapaddedregister::asregister (c++ member)": [[364, "_CPPv4N35Adxl345Transport_DataPaddedRegister10asRegisterE"], [460, "_CPPv4N35Adxl345Transport_DataPaddedRegister10asRegisterE"]], "adxl345_handle (c++ struct)": [[365, "_CPPv414Adxl345_Handle"]], "adxl345_handle::dotransmitframeimpl (c++ member)": [[365, "_CPPv4N14Adxl345_Handle19doTransmitFrameImplE"]], "adxl345_handle::dotransmitreceiveframeimpl (c++ member)": [[365, "_CPPv4N14Adxl345_Handle26doTransmitReceiveFrameImplE"]], "controller_handle (c++ struct)": [[366, "_CPPv417Controller_Handle"]], "controller_handle::fault_onbusfaulthandler (c++ member)": [[366, "_CPPv4N17Controller_Handle23fault_onBusFaultHandlerE"]], "controller_handle::fault_onerrorhandler (c++ member)": [[366, "_CPPv4N17Controller_Handle20fault_onErrorHandlerE"]], "controller_handle::fault_onhardfaulthandler (c++ member)": [[366, "_CPPv4N17Controller_Handle24fault_onHardFaultHandlerE"]], "controller_handle::fault_onnmifaulthandler (c++ member)": [[366, "_CPPv4N17Controller_Handle23fault_onNmiFaultHandlerE"]], "controller_handle::fault_onusagefaulthandler (c++ member)": [[366, "_CPPv4N17Controller_Handle25fault_onUsageFaultHandlerE"]], "controller_handle::host (c++ member)": [[366, "_CPPv4N17Controller_Handle4hostE"]], "controller_handle::init (c++ member)": [[366, "_CPPv4N17Controller_Handle4initE"]], "controller_handle::loop (c++ member)": [[366, "_CPPv4N17Controller_Handle4loopE"]], "controller_handle::requestreboot (c++ member)": [[366, "_CPPv4N17Controller_Handle13requestRebootE"]], "controller_handle::sampling (c++ member)": [[366, "_CPPv4N17Controller_Handle8samplingE"]], "controller_handle::sensor (c++ member)": [[366, "_CPPv4N17Controller_Handle6sensorE"]], "controller_host (c++ struct)": [[367, "_CPPv415Controller_Host"]], "controller_host::dotakebytes (c++ member)": [[367, "_CPPv4N15Controller_Host11doTakeBytesE"]], "controller_host::handle (c++ member)": [[367, "_CPPv4N15Controller_Host6handleE"]], "controller_host::onrequestbufferstatus (c++ member)": [[367, "_CPPv4N15Controller_Host21onRequestBufferStatusE"]], "controller_host::onrequestgetdevicesetup (c++ member)": [[367, "_CPPv4N15Controller_Host23onRequestGetDeviceSetupE"]], "controller_host::onrequestgetfirmwareversion (c++ member)": [[367, "_CPPv4N15Controller_Host27onRequestGetFirmwareVersionE"]], "controller_host::onrequestgetoutputdatarate (c++ member)": [[367, "_CPPv4N15Controller_Host26onRequestGetOutputDataRateE"]], "controller_host::onrequestgetrange (c++ member)": [[367, "_CPPv4N15Controller_Host17onRequestGetRangeE"]], "controller_host::onrequestgetscale (c++ member)": [[367, "_CPPv4N15Controller_Host17onRequestGetScaleE"]], "controller_host::onrequestsamplingstart (c++ member)": [[367, "_CPPv4N15Controller_Host22onRequestSamplingStartE"]], "controller_host::onrequestsamplingstop (c++ member)": [[367, "_CPPv4N15Controller_Host21onRequestSamplingStopE"]], "controller_host::onrequestsetoutputdatatrate (c++ member)": [[367, "_CPPv4N15Controller_Host27onRequestSetOutputDatatRateE"]], "controller_host::onrequestsetrange (c++ member)": [[367, "_CPPv4N15Controller_Host17onRequestSetRangeE"]], "controller_host::onrequestsetscale (c++ member)": [[367, "_CPPv4N15Controller_Host17onRequestSetScaleE"]], "controller_host::onrequestuptime (c++ member)": [[367, "_CPPv4N15Controller_Host15onRequestUptimeE"]], "controller_sampling (c++ struct)": [[368, "_CPPv419Controller_Sampling"]], "controller_sampling::doclearfifowatermark (c++ member)": [[368, "_CPPv4N19Controller_Sampling20doClearFifoWatermarkE"]], "controller_sampling::doset5ustimerexpired (c++ member)": [[368, "_CPPv4N19Controller_Sampling20doSet5usTimerExpiredE"]], "controller_sampling::dosetfifooverflow (c++ member)": [[368, "_CPPv4N19Controller_Sampling17doSetFifoOverflowE"]], "controller_sampling::dosetfifowatermark (c++ member)": [[368, "_CPPv4N19Controller_Sampling18doSetFifoWatermarkE"]], "controller_sampling::handle (c++ member)": [[368, "_CPPv4N19Controller_Sampling6handleE"]], "controller_sensor (c++ struct)": [[369, "_CPPv417Controller_Sensor"]], "controller_sensor::handle (c++ member)": [[369, "_CPPv4N17Controller_Sensor6handleE"]], "controller_sensor::init (c++ member)": [[369, "_CPPv4N17Controller_Sensor4initE"]], "foo (c++ struct)": [[370, "_CPPv43Foo"]], "foo::data (c++ member)": [[370, "_CPPv4N3Foo4dataE"], [598, "_CPPv4N3Foo4dataE"]], "hosttransport_fromhostapi (c++ struct)": [[371, "_CPPv425HostTransport_FromHostApi"]], "hosttransport_fromhostapi::dotakereceivedpacketimpl (c++ member)": [[371, "_CPPv4N25HostTransport_FromHostApi24doTakeReceivedPacketImplE"]], "hosttransport_handle (c++ struct)": [[372, "_CPPv420HostTransport_Handle"]], "hosttransport_handle::fromhost (c++ member)": [[372, "_CPPv4N20HostTransport_Handle8fromHostE"]], "hosttransport_handle::tohost (c++ member)": [[372, "_CPPv4N20HostTransport_Handle6toHostE"]], "hosttransport_tohostapi (c++ struct)": [[373, "_CPPv423HostTransport_ToHostApi"]], "hosttransport_tohostapi::dotransmitimpl (c++ member)": [[373, "_CPPv4N23HostTransport_ToHostApi14doTransmitImplE"]], "hosttransport_tohostapi::istransmitbusyimpl (c++ member)": [[373, "_CPPv4N23HostTransport_ToHostApi18isTransmitBusyImplE"]], "hosttransport_tohostapi::largesttxchunkbytes (c++ member)": [[373, "_CPPv4N23HostTransport_ToHostApi19largestTxChunkBytesE"], [510, "_CPPv4N23HostTransport_ToHostApi19largestTxChunkBytesE"]], "hosttransport_tohostapi::ringbuffer (c++ member)": [[373, "_CPPv4N23HostTransport_ToHostApi10ringbufferE"]], "ringbuffer (c++ struct)": [[374, "_CPPv410Ringbuffer"]], "ringbuffer::index (c++ member)": [[374, "_CPPv4N10Ringbuffer5indexE"], [536, "_CPPv4N10Ringbuffer5indexE"]], "ringbuffer::storage (c++ member)": [[374, "_CPPv4N10Ringbuffer7storageE"]], "ringbuffer_index (c++ struct)": [[375, "_CPPv416Ringbuffer_Index"]], "ringbuffer_index::begin (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index5beginE"]], "ringbuffer_index::capacity (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index8capacityE"]], "ringbuffer_index::end (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index3endE"]], "ringbuffer_index::isempty (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index7isEmptyE"]], "ringbuffer_index::isfull (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index6isFullE"]], "ringbuffer_index::itemsizebytes (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index13itemSizeBytesE"]], "ringbuffer_index::itemscount (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index10itemsCountE"]], "ringbuffer_index::maxcapacityused (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index15maxCapacityUsedE"]], "ringbuffer_index::putcount (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index8putCountE"], [528, "_CPPv4N16Ringbuffer_Index8putCountE"]], "ringbuffer_index::takecount (c++ member)": [[375, "_CPPv4N16Ringbuffer_Index9takeCountE"], [555, "_CPPv4N16Ringbuffer_Index9takeCountE"]], "sampling_acceleration (c++ struct)": [[376, "_CPPv421Sampling_Acceleration"]], "sampling_acceleration::x (c++ member)": [[376, "_CPPv4N21Sampling_Acceleration1xE"]], "sampling_acceleration::y (c++ member)": [[376, "_CPPv4N21Sampling_Acceleration1yE"]], "sampling_acceleration::z (c++ member)": [[376, "_CPPv4N21Sampling_Acceleration1zE"]], "sampling_handle (c++ struct)": [[377, "_CPPv415Sampling_Handle"]], "sampling_handle::dodisablesensorimpl (c++ member)": [[377, "_CPPv4N15Sampling_Handle19doDisableSensorImplE"]], "sampling_handle::doenablesensorimpl (c++ member)": [[377, "_CPPv4N15Sampling_Handle18doEnableSensorImplE"]], "sampling_handle::dofetchsensoraccelerationimpl (c++ member)": [[377, "_CPPv4N15Sampling_Handle29doFetchSensorAccelerationImplE"]], "sampling_handle::doforwardaccelerationbufferimpl (c++ member)": [[377, "_CPPv4N15Sampling_Handle31doForwardAccelerationBufferImplE"]], "sampling_handle::dowaitdelay5usimpl (c++ member)": [[377, "_CPPv4N15Sampling_Handle18doWaitDelay5usImplE"]], "sampling_handle::onbufferoverflowcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle18onBufferOverflowCbE"]], "sampling_handle::onfifooverflowcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle16onFifoOverflowCbE"]], "sampling_handle::onsamplingabortedcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle19onSamplingAbortedCbE"]], "sampling_handle::onsamplingfinishedcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle20onSamplingFinishedCbE"]], "sampling_handle::onsamplingstartedcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle19onSamplingStartedCbE"]], "sampling_handle::onsamplingstoppedcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle19onSamplingStoppedCbE"]], "sampling_handle::ontransmissionerrorcb (c++ member)": [[377, "_CPPv4N15Sampling_Handle21onTransmissionErrorCbE"]], "sampling_handle::state (c++ member)": [[377, "_CPPv4N15Sampling_Handle5stateE"]], "sampling_state (c++ struct)": [[378, "_CPPv414Sampling_State"]], "sampling_state::dostart (c++ member)": [[378, "_CPPv4N14Sampling_State7doStartE"]], "sampling_state::dostop (c++ member)": [[378, "_CPPv4N14Sampling_State6doStopE"]], "sampling_state::isfifooverflowset (c++ member)": [[378, "_CPPv4N14Sampling_State17isFifoOverflowSetE"]], "sampling_state::isfifowatermarkset (c++ member)": [[378, "_CPPv4N14Sampling_State18isFifoWatermarkSetE"]], "sampling_state::isstarted (c++ member)": [[378, "_CPPv4N14Sampling_State9isStartedE"]], "sampling_state::maxsamples (c++ member)": [[378, "_CPPv4N14Sampling_State10maxSamplesE"], [582, "_CPPv4N14Sampling_State10maxSamplesE"]], "sampling_state::rxbuffer (c++ member)": [[378, "_CPPv4N14Sampling_State8rxBufferE"]], "sampling_state::transactionscount (c++ member)": [[378, "_CPPv4N14Sampling_State17transactionsCountE"]], "sampling_state::waitfor5ustimer (c++ member)": [[378, "_CPPv4N14Sampling_State15waitFor5usTimerE"]], "transportframe (c++ struct)": [[379, "_CPPv414TransportFrame"]], "transportframe::asrxframe (c++ member)": [[379, "_CPPv4N14TransportFrame9asRxFrameE"], [532, "_CPPv4N14TransportFrame9asRxFrameE"]], "transportframe::astxframe (c++ member)": [[379, "_CPPv4N14TransportFrame9asTxFrameE"], [552, "_CPPv4N14TransportFrame9asTxFrameE"]], "transportframe::header (c++ member)": [[379, "_CPPv4N14TransportFrame6headerE"], [577, "_CPPv4N14TransportFrame6headerE"]], "transportrx_devicereboot (c++ struct)": [[380, "_CPPv424TransportRx_DeviceReboot"]], "transportrx_getbufferstatus (c++ struct)": [[381, "_CPPv427TransportRx_GetBufferStatus"]], "transportrx_getdevicesetup (c++ struct)": [[382, "_CPPv426TransportRx_GetDeviceSetup"]], "transportrx_getfirmwareversion (c++ struct)": [[383, "_CPPv430TransportRx_GetFirmwareVersion"]], "transportrx_getoutputdatarate (c++ struct)": [[384, "_CPPv429TransportRx_GetOutputDataRate"]], "transportrx_getrange (c++ struct)": [[385, "_CPPv420TransportRx_GetRange"]], "transportrx_getscale (c++ struct)": [[386, "_CPPv420TransportRx_GetScale"]], "transportrx_getuptime (c++ struct)": [[387, "_CPPv421TransportRx_GetUptime"]], "transportrx_samplingstart (c++ struct)": [[388, "_CPPv425TransportRx_SamplingStart"]], "transportrx_samplingstart::max_samples_count (c++ member)": [[388, "_CPPv4N25TransportRx_SamplingStart17max_samples_countE"], [531, "_CPPv4N25TransportRx_SamplingStart17max_samples_countE"]], "transportrx_samplingstop (c++ struct)": [[389, "_CPPv424TransportRx_SamplingStop"]], "transportrx_setoutputdatarate (c++ struct)": [[390, "_CPPv429TransportRx_SetOutputDataRate"]], "transportrx_setoutputdatarate::rate (c++ member)": [[390, "_CPPv4N29TransportRx_SetOutputDataRate4rateE"]], "transportrx_setrange (c++ struct)": [[391, "_CPPv420TransportRx_SetRange"]], "transportrx_setrange::range (c++ member)": [[391, "_CPPv4N20TransportRx_SetRange5rangeE"]], "transportrx_setscale (c++ struct)": [[392, "_CPPv420TransportRx_SetScale"]], "transportrx_setscale::scale (c++ member)": [[392, "_CPPv4N20TransportRx_SetScale5scaleE"], [525, "_CPPv4N20TransportRx_SetScale5scaleE"]], "transporttx_acceleration (c++ struct)": [[393, "_CPPv424TransportTx_Acceleration"]], "transporttx_acceleration::index (c++ member)": [[393, "_CPPv4N24TransportTx_Acceleration5indexE"]], "transporttx_acceleration::values (c++ member)": [[393, "_CPPv4N24TransportTx_Acceleration6valuesE"], [586, "_CPPv4N24TransportTx_Acceleration6valuesE"]], "transporttx_bufferoverflow (c++ struct)": [[394, "_CPPv426TransportTx_BufferOverflow"]], "transporttx_bufferstatus (c++ struct)": [[395, "_CPPv424TransportTx_BufferStatus"]], "transporttx_bufferstatus::capacitytotal (c++ member)": [[395, "_CPPv4N24TransportTx_BufferStatus13capacityTotalE"], [565, "_CPPv4N24TransportTx_BufferStatus13capacityTotalE"]], "transporttx_bufferstatus::capacityusedmax (c++ member)": [[395, "_CPPv4N24TransportTx_BufferStatus15capacityUsedMaxE"], [560, "_CPPv4N24TransportTx_BufferStatus15capacityUsedMaxE"]], "transporttx_bufferstatus::largesttxchunkbytes (c++ member)": [[395, "_CPPv4N24TransportTx_BufferStatus19largestTxChunkBytesE"]], "transporttx_bufferstatus::putcount (c++ member)": [[395, "_CPPv4N24TransportTx_BufferStatus8putCountE"]], "transporttx_bufferstatus::sizebytes (c++ member)": [[395, "_CPPv4N24TransportTx_BufferStatus9sizeBytesE"], [503, "_CPPv4N24TransportTx_BufferStatus9sizeBytesE"]], "transporttx_bufferstatus::takecount (c++ member)": [[395, "_CPPv4N24TransportTx_BufferStatus9takeCountE"]], "transporttx_devicesetup (c++ struct)": [[396, "_CPPv423TransportTx_DeviceSetup"]], "transporttx_devicesetup::outputdatarate (c++ member)": [[396, "_CPPv4N23TransportTx_DeviceSetup14outputDataRateE"], [526, "_CPPv4N23TransportTx_DeviceSetup14outputDataRateE"]], "transporttx_devicesetup::range (c++ member)": [[396, "_CPPv4N23TransportTx_DeviceSetup5rangeE"]], "transporttx_devicesetup::scale (c++ member)": [[396, "_CPPv4N23TransportTx_DeviceSetup5scaleE"]], "transporttx_fault (c++ struct)": [[397, "_CPPv417TransportTx_Fault"]], "transporttx_fault::code (c++ member)": [[397, "_CPPv4N17TransportTx_Fault4codeE"], [519, "_CPPv4N17TransportTx_Fault4codeE"]], "transporttx_fifooverflow (c++ struct)": [[398, "_CPPv424TransportTx_FifoOverflow"]], "transporttx_firmwareversion (c++ struct)": [[399, "_CPPv427TransportTx_FirmwareVersion"]], "transporttx_firmwareversion::major (c++ member)": [[399, "_CPPv4N27TransportTx_FirmwareVersion5majorE"], [523, "_CPPv4N27TransportTx_FirmwareVersion5majorE"]], "transporttx_firmwareversion::minor (c++ member)": [[399, "_CPPv4N27TransportTx_FirmwareVersion5minorE"], [581, "_CPPv4N27TransportTx_FirmwareVersion5minorE"]], "transporttx_firmwareversion::patch (c++ member)": [[399, "_CPPv4N27TransportTx_FirmwareVersion5patchE"], [488, "_CPPv4N27TransportTx_FirmwareVersion5patchE"]], "transporttx_outputdatarate (c++ struct)": [[400, "_CPPv426TransportTx_OutputDataRate"]], "transporttx_outputdatarate::rate (c++ member)": [[400, "_CPPv4N26TransportTx_OutputDataRate4rateE"]], "transporttx_range (c++ struct)": [[401, "_CPPv417TransportTx_Range"]], "transporttx_range::range (c++ member)": [[401, "_CPPv4N17TransportTx_Range5rangeE"]], "transporttx_samplingaborted (c++ struct)": [[402, "_CPPv427TransportTx_SamplingAborted"]], "transporttx_samplingfinished (c++ struct)": [[403, "_CPPv428TransportTx_SamplingFinished"]], "transporttx_samplingstarted (c++ struct)": [[404, "_CPPv427TransportTx_SamplingStarted"]], "transporttx_samplingstarted::maxsamples (c++ member)": [[404, "_CPPv4N27TransportTx_SamplingStarted10maxSamplesE"]], "transporttx_samplingstopped (c++ struct)": [[405, "_CPPv427TransportTx_SamplingStopped"]], "transporttx_scale (c++ struct)": [[406, "_CPPv417TransportTx_Scale"]], "transporttx_scale::scale (c++ member)": [[406, "_CPPv4N17TransportTx_Scale5scaleE"]], "transporttx_transmissionerror (c++ struct)": [[407, "_CPPv429TransportTx_TransmissionError"]], "transporttx_uptime (c++ struct)": [[408, "_CPPv418TransportTx_Uptime"]], "transporttx_uptime::elapsedms (c++ member)": [[408, "_CPPv4N18TransportTx_Uptime9elapsedMsE"], [584, "_CPPv4N18TransportTx_Uptime9elapsedMsE"]], "transport_acceleration (c++ struct)": [[409, "_CPPv422Transport_Acceleration"]], "transport_acceleration::x (c++ member)": [[409, "_CPPv4N22Transport_Acceleration1xE"]], "transport_acceleration::y (c++ member)": [[409, "_CPPv4N22Transport_Acceleration1yE"]], "transport_acceleration::z (c++ member)": [[409, "_CPPv4N22Transport_Acceleration1zE"]], "transport_header (c++ struct)": [[410, "_CPPv416Transport_Header"]], "transport_header::id (c++ member)": [[410, "_CPPv4N16Transport_Header2idE"], [550, "_CPPv4N16Transport_Header2idE"]], "transport_responseflags (c++ struct)": [[411, "_CPPv423Transport_ResponseFlags"]], "transport_responseflags::_reserved_0 (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags11_reserved_0E"], [483, "_CPPv4N23Transport_ResponseFlags11_reserved_0E"]], "transport_responseflags::_reserved_1 (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags11_reserved_1E"], [479, "_CPPv4N23Transport_ResponseFlags11_reserved_1E"]], "transport_responseflags::host_responsegetbufferstatus (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags28host_responseGetBufferStatusE"], [473, "_CPPv4N23Transport_ResponseFlags28host_responseGetBufferStatusE"]], "transport_responseflags::host_responsegetdevicesetup (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags27host_responseGetDeviceSetupE"], [485, "_CPPv4N23Transport_ResponseFlags27host_responseGetDeviceSetupE"]], "transport_responseflags::host_responsegetfirmwareversion (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags31host_responseGetFirmwareVersionE"], [484, "_CPPv4N23Transport_ResponseFlags31host_responseGetFirmwareVersionE"]], "transport_responseflags::host_responsegetoutputdatarate (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags30host_responseGetOutputDataRateE"], [470, "_CPPv4N23Transport_ResponseFlags30host_responseGetOutputDataRateE"]], "transport_responseflags::host_responsegetrange (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags21host_responseGetRangeE"], [481, "_CPPv4N23Transport_ResponseFlags21host_responseGetRangeE"]], "transport_responseflags::host_responsegetscale (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags21host_responseGetScaleE"], [477, "_CPPv4N23Transport_ResponseFlags21host_responseGetScaleE"]], "transport_responseflags::host_responsegetuptime (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags22host_responseGetUptimeE"], [472, "_CPPv4N23Transport_ResponseFlags22host_responseGetUptimeE"]], "transport_responseflags::sampling_responsebufferoverflow (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags31sampling_responseBufferOverflowE"], [468, "_CPPv4N23Transport_ResponseFlags31sampling_responseBufferOverflowE"]], "transport_responseflags::sampling_responsefifooverflow (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags29sampling_responseFifoOverflowE"], [474, "_CPPv4N23Transport_ResponseFlags29sampling_responseFifoOverflowE"]], "transport_responseflags::sampling_responsesamplingaborted (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingAbortedE"], [478, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingAbortedE"]], "transport_responseflags::sampling_responsesamplingfinished (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags33sampling_responseSamplingFinishedE"], [476, "_CPPv4N23Transport_ResponseFlags33sampling_responseSamplingFinishedE"]], "transport_responseflags::sampling_responsesamplingstopped (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingStoppedE"], [471, "_CPPv4N23Transport_ResponseFlags32sampling_responseSamplingStoppedE"]], "transport_responseflags::sampling_responsetransmissionerror (c++ member)": [[411, "_CPPv4N23Transport_ResponseFlags34sampling_responseTransmissionErrorE"], [482, "_CPPv4N23Transport_ResponseFlags34sampling_responseTransmissionErrorE"]], "twobytes (c++ struct)": [[412, "_CPPv48TwoBytes"]], "twobytes::byte1 (c++ member)": [[412, "_CPPv4N8TwoBytes5byte1E"], [457, "_CPPv4N8TwoBytes5byte1E"]], "twobytes::byte2 (c++ member)": [[412, "_CPPv4N8TwoBytes5byte2E"], [456, "_CPPv4N8TwoBytes5byte2E"]], "adxl345register (c++ union)": [[414, "_CPPv415Adxl345Register"]], "adxl345register::asbwrate (c++ member)": [[414, "_CPPv4N15Adxl345Register8asBwRateE"], [428, "_CPPv4N15Adxl345Register8asBwRateE"]], "adxl345register::asdataformat (c++ member)": [[414, "_CPPv4N15Adxl345Register12asDataFormatE"], [442, "_CPPv4N15Adxl345Register12asDataFormatE"]], "adxl345register::asfifoctl (c++ member)": [[414, "_CPPv4N15Adxl345Register9asFifoCtlE"], [422, "_CPPv4N15Adxl345Register9asFifoCtlE"]], "adxl345register::asfifostatus (c++ member)": [[414, "_CPPv4N15Adxl345Register12asFifoStatusE"], [447, "_CPPv4N15Adxl345Register12asFifoStatusE"]], "adxl345register::asintenable (c++ member)": [[414, "_CPPv4N15Adxl345Register11asIntEnableE"], [450, "_CPPv4N15Adxl345Register11asIntEnableE"]], "adxl345register::asintmap (c++ member)": [[414, "_CPPv4N15Adxl345Register8asIntMapE"], [448, "_CPPv4N15Adxl345Register8asIntMapE"]], "adxl345register::aspowercontrol (c++ member)": [[414, "_CPPv4N15Adxl345Register14asPowerControlE"], [421, "_CPPv4N15Adxl345Register14asPowerControlE"]], "adxl345transport_rxframe (c++ union)": [[415, "_CPPv424Adxl345Transport_RxFrame"]], "adxl345transport_rxframe::asacceleration (c++ member)": [[415, "_CPPv4N24Adxl345Transport_RxFrame14asAccelerationE"], [466, "_CPPv4N24Adxl345Transport_RxFrame14asAccelerationE"], [508, "_CPPv4N24Adxl345Transport_RxFrame14asAccelerationE"]], "adxl345transport_rxframe::asbytes (c++ member)": [[415, "_CPPv4N24Adxl345Transport_RxFrame7asBytesE"], [463, "_CPPv4N24Adxl345Transport_RxFrame7asBytesE"]], "adxl345transport_rxframe::asregister (c++ member)": [[415, "_CPPv4N24Adxl345Transport_RxFrame10asRegisterE"]], "adxl345transport_rxframe::asword (c++ member)": [[415, "_CPPv4N24Adxl345Transport_RxFrame6asWordE"], [458, "_CPPv4N24Adxl345Transport_RxFrame6asWordE"]], "adxl345transport_txframe (c++ union)": [[416, "_CPPv424Adxl345Transport_TxFrame"]], "adxl345transport_txframe::asaddress (c++ member)": [[416, "_CPPv4N24Adxl345Transport_TxFrame9asAddressE"], [461, "_CPPv4N24Adxl345Transport_TxFrame9asAddressE"]], "adxl345transport_txframe::asbytes (c++ member)": [[416, "_CPPv4N24Adxl345Transport_TxFrame7asBytesE"]], "adxl345transport_txframe::aspaddedregister (c++ member)": [[416, "_CPPv4N24Adxl345Transport_TxFrame16asPaddedRegisterE"], [459, "_CPPv4N24Adxl345Transport_TxFrame16asPaddedRegisterE"]], "adxl345transport_txframe::asword (c++ member)": [[416, "_CPPv4N24Adxl345Transport_TxFrame6asWordE"]], "transportrxframe (c++ union)": [[417, "_CPPv416TransportRxFrame"]], "transportrxframe::asdevicereboot (c++ member)": [[417, "_CPPv4N16TransportRxFrame14asDeviceRebootE"], [549, "_CPPv4N16TransportRxFrame14asDeviceRebootE"]], "transportrxframe::asgetbufferstatus (c++ member)": [[417, "_CPPv4N16TransportRxFrame17asGetBufferStatusE"], [490, "_CPPv4N16TransportRxFrame17asGetBufferStatusE"]], "transportrxframe::asgetdevicesetup (c++ member)": [[417, "_CPPv4N16TransportRxFrame16asGetDeviceSetupE"], [575, "_CPPv4N16TransportRxFrame16asGetDeviceSetupE"]], "transportrxframe::asgetfirmwareversion (c++ member)": [[417, "_CPPv4N16TransportRxFrame20asGetFirmwareVersionE"], [580, "_CPPv4N16TransportRxFrame20asGetFirmwareVersionE"]], "transportrxframe::asgetoutputdatarate (c++ member)": [[417, "_CPPv4N16TransportRxFrame19asGetOutputDataRateE"], [585, "_CPPv4N16TransportRxFrame19asGetOutputDataRateE"]], "transportrxframe::asgetrange (c++ member)": [[417, "_CPPv4N16TransportRxFrame10asGetRangeE"], [521, "_CPPv4N16TransportRxFrame10asGetRangeE"]], "transportrxframe::asgetscale (c++ member)": [[417, "_CPPv4N16TransportRxFrame10asGetScaleE"], [567, "_CPPv4N16TransportRxFrame10asGetScaleE"]], "transportrxframe::asgetuptime (c++ member)": [[417, "_CPPv4N16TransportRxFrame11asGetUptimeE"], [568, "_CPPv4N16TransportRxFrame11asGetUptimeE"]], "transportrxframe::assamplingstart (c++ member)": [[417, "_CPPv4N16TransportRxFrame15asSamplingStartE"], [543, "_CPPv4N16TransportRxFrame15asSamplingStartE"]], "transportrxframe::assamplingstop (c++ member)": [[417, "_CPPv4N16TransportRxFrame14asSamplingStopE"], [564, "_CPPv4N16TransportRxFrame14asSamplingStopE"]], "transportrxframe::assetoutputdatarate (c++ member)": [[417, "_CPPv4N16TransportRxFrame19asSetOutputDataRateE"], [572, "_CPPv4N16TransportRxFrame19asSetOutputDataRateE"]], "transportrxframe::assetrange (c++ member)": [[417, "_CPPv4N16TransportRxFrame10asSetRangeE"], [530, "_CPPv4N16TransportRxFrame10asSetRangeE"]], "transportrxframe::assetscale (c++ member)": [[417, "_CPPv4N16TransportRxFrame10asSetScaleE"], [547, "_CPPv4N16TransportRxFrame10asSetScaleE"]], "transporttxframe (c++ union)": [[418, "_CPPv416TransportTxFrame"]], "transporttxframe::asacceleration (c++ member)": [[418, "_CPPv4N16TransportTxFrame14asAccelerationE"]], "transporttxframe::asbufferoverflow (c++ member)": [[418, "_CPPv4N16TransportTxFrame16asBufferOverflowE"], [588, "_CPPv4N16TransportTxFrame16asBufferOverflowE"]], "transporttxframe::asbufferstatus (c++ member)": [[418, "_CPPv4N16TransportTxFrame14asBufferStatusE"], [512, "_CPPv4N16TransportTxFrame14asBufferStatusE"]], "transporttxframe::asdevicesetup (c++ member)": [[418, "_CPPv4N16TransportTxFrame13asDeviceSetupE"], [520, "_CPPv4N16TransportTxFrame13asDeviceSetupE"]], "transporttxframe::asfault (c++ member)": [[418, "_CPPv4N16TransportTxFrame7asFaultE"], [545, "_CPPv4N16TransportTxFrame7asFaultE"]], "transporttxframe::asfifooverflow (c++ member)": [[418, "_CPPv4N16TransportTxFrame14asFifoOverflowE"], [518, "_CPPv4N16TransportTxFrame14asFifoOverflowE"]], "transporttxframe::asfirmwareversion (c++ member)": [[418, "_CPPv4N16TransportTxFrame17asFirmwareVersionE"], [498, "_CPPv4N16TransportTxFrame17asFirmwareVersionE"]], "transporttxframe::asoutputdatarate (c++ member)": [[418, "_CPPv4N16TransportTxFrame16asOutputDataRateE"], [554, "_CPPv4N16TransportTxFrame16asOutputDataRateE"]], "transporttxframe::asrange (c++ member)": [[418, "_CPPv4N16TransportTxFrame7asRangeE"], [541, "_CPPv4N16TransportTxFrame7asRangeE"]], "transporttxframe::assamplingaborted (c++ member)": [[418, "_CPPv4N16TransportTxFrame17asSamplingAbortedE"], [535, "_CPPv4N16TransportTxFrame17asSamplingAbortedE"]], "transporttxframe::assamplingfinished (c++ member)": [[418, "_CPPv4N16TransportTxFrame18asSamplingFinishedE"], [514, "_CPPv4N16TransportTxFrame18asSamplingFinishedE"]], "transporttxframe::assamplingstarted (c++ member)": [[418, "_CPPv4N16TransportTxFrame17asSamplingStartedE"], [497, "_CPPv4N16TransportTxFrame17asSamplingStartedE"]], "transporttxframe::assamplingstopped (c++ member)": [[418, "_CPPv4N16TransportTxFrame17asSamplingStoppedE"], [505, "_CPPv4N16TransportTxFrame17asSamplingStoppedE"]], "transporttxframe::asscale (c++ member)": [[418, "_CPPv4N16TransportTxFrame7asScaleE"], [557, "_CPPv4N16TransportTxFrame7asScaleE"]], "transporttxframe::astransmissionerror (c++ member)": [[418, "_CPPv4N16TransportTxFrame19asTransmissionErrorE"], [548, "_CPPv4N16TransportTxFrame19asTransmissionErrorE"]], "transporttxframe::asuptime (c++ member)": [[418, "_CPPv4N16TransportTxFrame8asUptimeE"], [571, "_CPPv4N16TransportTxFrame8asUptimeE"]], "controllerhandle (c++ member)": [[480, "_CPPv416controllerHandle"], [486, "_CPPv416controllerHandle"], [487, "_CPPv416controllerHandle"], [593, "_CPPv416controllerHandle"]], "[anonymous] (c++ member)": [[561, "_CPPv4Ut1_2"]], "ringbufferstorage (c++ member)": [[591, "_CPPv417ringbufferStorage"], [592, "_CPPv417ringbufferStorage"]], "transportframe::__attribute__ (c++ member)": [[594, "_CPPv4N14TransportFrame13__attribute__E"]]}})